diff --git a/V2/Model.py b/V2/Model.py
index b8e14a5..41d81d2 100644
--- a/V2/Model.py
+++ b/V2/Model.py
@@ -498,87 +498,83 @@ class Model:
         """
         - train - trains the model
         """
+        self.remove_files_in_output()
+        torch.cuda.empty_cache()
+        wandb.init(
+            project=PROJECT_NAME,
+            name=self.NAME,
+            config={
+                "BASE_LR": self.BASE_LR,
+                "MAX_ITER": self.MAX_ITER,
+                "EVAL_PERIOD": self.EVAL_PERIOD,
+                "IMS_PER_BATCH": self.IMS_PER_BATCH,
+                "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
+                "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
+                "MODEL": self.model,
+                "NAME": self.NAME,
+            },
+        )
+        trainer = self.__train()
+        predictor = self.create_predictor()
+        metrics_coco = self.create_coco_eval(predictor)
+        metrics_file = self.metrics_file_to_dict()
+        test_images = self.predict_test_images(predictor)
+        (
+            preds,
+            target,
+            x,
+            y,
+            w,
+            h,
+            xmin,
+            ymin,
+            xmax,
+            ymax,
+            height,
+            width,
+        ) = self.create_target_and_preds(predictor)
+        rmse = self.create_rmse(preds, target)
+        mse = self.create_mse(preds, target)
+        # ssim = self.create_ssim(preds, target, height, width)
+        psnr = self.create_psnr(preds, target)
+        wandb.log(metrics_coco)
+        for metric_file in metrics_file:
+            wandb.log(metric_file)
+        for test_img in test_images:
+            wandb.log({test_img[0]: wandb.Image(test_img[1])})
+        wandb.log({"RMSE": rmse})
+        wandb.log({"MSE": mse})
+        wandb.log({"PSNR": psnr})
         try:
-            self.remove_files_in_output()
-            torch.cuda.empty_cache()
-            wandb.init(
-                project=PROJECT_NAME,
-                name=self.NAME,
-                config={
-                    "BASE_LR": self.BASE_LR,
-                    "MAX_ITER": self.MAX_ITER,
-                    "EVAL_PERIOD": self.EVAL_PERIOD,
-                    "IMS_PER_BATCH": self.IMS_PER_BATCH,
-                    "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
-                    "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
-                    "MODEL": self.model,
-                    "NAME": self.NAME,
-                },
+            self.save(
+                trainer=trainer,
+                predictor=predictor,
+                metrics_coco=metrics_coco,
+                metrics_file=metrics_file,
+                test_images=test_images,
+                preds=preds,
+                target=target,
+                rmse=rmse,
+                mse=mse,
+                psnr=psnr,
             )
-            trainer = self.__train()
-            predictor = self.create_predictor()
-            metrics_coco = self.create_coco_eval(predictor)
-            metrics_file = self.metrics_file_to_dict()
-            test_images = self.predict_test_images(predictor)
-            (
-                preds,
-                target,
-                x,
-                y,
-                w,
-                h,
-                xmin,
-                ymin,
-                xmax,
-                ymax,
-                height,
-                width,
-            ) = self.create_target_and_preds(predictor)
-            rmse = self.create_rmse(preds, target)
-            mse = self.create_mse(preds, target)
-            # ssim = self.create_ssim(preds, target, height, width)
-            psnr = self.create_psnr(preds, target)
-            wandb.log(metrics_coco)
-            for metric_file in metrics_file:
-                wandb.log(metric_file)
-            for test_img in test_images:
-                wandb.log({test_img[0]: wandb.Image(test_img[1])})
-            wandb.log({"RMSE": rmse})
-            wandb.log({"MSE": mse})
-            wandb.log({"PSNR": psnr})
-            try:
-                self.save(
-                    trainer=trainer,
-                    predictor=predictor,
-                    metrics_coco=metrics_coco,
-                    metrics_file=metrics_file,
-                    test_images=test_images,
-                    preds=preds,
-                    target=target,
-                    rmse=rmse,
-                    mse=mse,
-                    psnr=psnr,
-                )
-            except:
-                pass
-            wandb.finish()
-            return {
-                "trainer": trainer,
-                "predictor": predictor,
-                "metrics_coco": metrics_coco,
-                "metrics_file": metrics_file,
-                "test_images": test_images,
-                "preds": preds,
-                "target": target,
-                "rmse": rmse,
-                "mse": mse,
-                "psnr": psnr,
-            }
-            torch.cuda.empty_cache()
-            self.remove_files_in_output()
         except:
-            torch.cuda.empty_cache()
             pass
+        wandb.finish()
+        return {
+            "trainer": trainer,
+            "predictor": predictor,
+            "metrics_coco": metrics_coco,
+            "metrics_file": metrics_file,
+            "test_images": test_images,
+            "preds": preds,
+            "target": target,
+            "rmse": rmse,
+            "mse": mse,
+            "psnr": psnr,
+        }
+        torch.cuda.empty_cache()
+        self.remove_files_in_output()
 
     def __str__(self) -> str:
         return f"""
diff --git a/V2/output/events.out.tfevents.1635511940.programmer-rd-ai.55366.0 b/V2/output/events.out.tfevents.1635511940.programmer-rd-ai.55366.0
deleted file mode 100644
index ea071a8..0000000
Binary files a/V2/output/events.out.tfevents.1635511940.programmer-rd-ai.55366.0 and /dev/null differ
diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
deleted file mode 100644
index da0e9f9..0000000
--- a/V2/output/last_checkpoint
+++ /dev/null
@@ -1 +0,0 @@
-model_final.pth
\ No newline at end of file
diff --git a/V2/output/metrics.json b/V2/output/metrics.json
deleted file mode 100644
index 91e9f75..0000000
--- a/V2/output/metrics.json
+++ /dev/null
@@ -1,13 +0,0 @@
-{"data_time": 0.002212539499964805, "eta_seconds": 228.33540260000177, "fast_rcnn/cls_accuracy": 0.63671875, "fast_rcnn/false_negative": 0.8610038610038611, "fast_rcnn/fg_cls_accuracy": 0.138996138996139, "iteration": 19, "loss_box_reg": 0.3507070392370224, "loss_cls": 0.6481618285179138, "loss_rpn_cls": 0.026948592625558376, "loss_rpn_loc": 0.006138449069112539, "lr": 1.9231e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.9927626200000077, "total_loss": 1.0383126914966851}
-{"data_time": 0.0023826189998317204, "eta_seconds": 216.17027039997993, "fast_rcnn/cls_accuracy": 0.91796875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.23495155572891235, "loss_cls": 0.48248644173145294, "loss_rpn_cls": 0.029120108112692833, "loss_rpn_loc": 0.00540528167039156, "lr": 3.9211e-05, "roi_head/num_bg_samples": 119.75, "roi_head/num_fg_samples": 8.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0405841084999565, "total_loss": 0.8033793541253544}
-{"data_time": 0.002309813000010763, "eta_seconds": 197.71098061499174, "fast_rcnn/cls_accuracy": 0.908203125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.36764535307884216, "loss_cls": 0.3466052711009979, "loss_rpn_cls": 0.008030871395021677, "loss_rpn_loc": 0.00537837902083993, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.1128698185000303, "total_loss": 0.7330057786311954}
-{"data_time": 0.0025373165000246445, "eta_seconds": 174.99498079998375, "fast_rcnn/cls_accuracy": 0.912109375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.3434152901172638, "loss_cls": 0.29721465706825256, "loss_rpn_cls": 0.027911928482353687, "loss_rpn_loc": 0.00541307358071208, "lr": 7.9171e-05, "roi_head/num_bg_samples": 116.75, "roi_head/num_fg_samples": 11.25, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.9888009175000434, "total_loss": 0.7051943752449006}
-{"data_time": 0.002323818000149913, "eta_seconds": 149.90469562499698, "fast_rcnn/cls_accuracy": 0.91015625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.3131103813648224, "loss_cls": 0.2670962065458298, "loss_rpn_cls": 0.02071892935782671, "loss_rpn_loc": 0.007663901895284653, "lr": 9.9151e-05, "roi_head/num_bg_samples": 116.5, "roi_head/num_fg_samples": 11.5, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.906120355999974, "total_loss": 0.6991986157372594}
-{"data_time": 0.002451274000009107, "eta_seconds": 130.62800204999576, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.36798520386219025, "loss_cls": 0.24060144275426865, "loss_rpn_cls": 0.015996653586626053, "loss_rpn_loc": 0.010310293175280094, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 250.0, "rpn/num_pos_anchors": 6.0, "time": 1.077337625000041, "total_loss": 0.6610439913347363}
-{"data_time": 0.0023242799999252384, "eta_seconds": 110.53138634999641, "fast_rcnn/cls_accuracy": 0.93359375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.2259005606174469, "loss_cls": 0.19830289483070374, "loss_rpn_cls": 0.05473419837653637, "loss_rpn_loc": 0.009759384207427502, "lr": 0.000139111, "roi_head/num_bg_samples": 119.5, "roi_head/num_fg_samples": 8.5, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0093436959998598, "total_loss": 0.5290673188865185}
-{"data_time": 0.002379369999971459, "eta_seconds": 90.5270778449983, "fast_rcnn/cls_accuracy": 0.896484375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.3841266930103302, "loss_cls": 0.2533814162015915, "loss_rpn_cls": 0.015191656071692705, "loss_rpn_loc": 0.008426647633314133, "lr": 0.000159091, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 251.5, "rpn/num_pos_anchors": 4.5, "time": 1.017016574999957, "total_loss": 0.6656532669439912}
-{"data_time": 0.002405241000019487, "eta_seconds": 70.78981055999748, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.36845563352108, "loss_cls": 0.2519475594162941, "loss_rpn_cls": 0.028202883899211884, "loss_rpn_loc": 0.0049057044088840485, "lr": 0.000179071, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0401449480000338, "total_loss": 0.6626131320372224}
-{"data_time": 0.002434473999983311, "eta_seconds": 50.29282102499906, "fast_rcnn/cls_accuracy": 0.88671875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.4075011909008026, "loss_cls": 0.2418404221534729, "loss_rpn_cls": 0.016698427964001894, "loss_rpn_loc": 0.009484314359724522, "lr": 0.000199051, "roi_head/num_bg_samples": 113.5, "roi_head/num_fg_samples": 14.5, "rpn/num_neg_anchors": 251.5, "rpn/num_pos_anchors": 4.5, "time": 0.9963060344999803, "total_loss": 0.6337115014175652}
-{"data_time": 0.0023340745000268726, "eta_seconds": 29.87466958500022, "fast_rcnn/cls_accuracy": 0.916015625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.29742442071437836, "loss_cls": 0.21718856692314148, "loss_rpn_cls": 0.01328930864110589, "loss_rpn_loc": 0.008061917033046484, "lr": 0.000219031, "roi_head/num_bg_samples": 117.25, "roi_head/num_fg_samples": 10.75, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 0.8956468105000113, "total_loss": 0.5787253854650771}
-{"data_time": 0.0024071915000831723, "eta_seconds": 9.935138165000126, "fast_rcnn/cls_accuracy": 0.91015625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 239, "loss_box_reg": 0.3088490664958954, "loss_cls": 0.2425890788435936, "loss_rpn_cls": 0.017106711398810148, "loss_rpn_loc": 0.007443831069394946, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 0.9704664194998713, "total_loss": 0.5767836421728134}
-{"data_time": 0.0023293315000501025, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9736842105263157, "fast_rcnn/fg_cls_accuracy": 0.02631578947368421, "iteration": 249, "loss_box_reg": 0.28409460186958313, "loss_cls": 0.2266060709953308, "loss_rpn_cls": 0.021325496025383472, "loss_rpn_loc": 0.007506487891077995, "lr": 0.000249001, "roi_head/num_bg_samples": 117.0, "roi_head/num_fg_samples": 11.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.9746381984998607, "total_loss": 0.5261765508912504}
diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/V2/run.py b/V2/run.py
index 5e4d213..6a21847 100644
--- a/V2/run.py
+++ b/V2/run.py
@@ -30,8 +30,8 @@ params = {
     ],
     "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
 }
-# model = Model()
-# model.train()
+model = Model()
+model.train()
 pt = Param_Tunning(params)
 pt.tune()
 # torch.save(model.train(),'./model.pt')
diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
index 904760c..0d7ba46 120000
--- a/V2/wandb/latest-run
+++ b/V2/wandb/latest-run
@@ -1 +1 @@
-run-20211029_182019-19fkojne
\ No newline at end of file
+run-20211029_184311-k0amje1g
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
index 0a88550..4b29dc9 100644
--- a/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
@@ -38,6 +38,10 @@ _wandb:
       1:
       - 1
       - 5
+      2:
+      - 1
+      - 3
+      - 5
       3:
       - 13
       - 16
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
index 9e26dfe..b3d6dff 100644
--- a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
@@ -1 +1 @@
-{}
\ No newline at end of file
+{"_wandb": {"runtime": 953}}
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb
index b50843c..9cd3a2f 100644
Binary files a/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb and b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb differ
