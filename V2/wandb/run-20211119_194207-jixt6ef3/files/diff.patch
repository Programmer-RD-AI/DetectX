diff --git a/V2/Model.py b/V2/Model.py
index 78c778f..c4ca9b1 100644
--- a/V2/Model.py
+++ b/V2/Model.py
@@ -1,6 +1,6 @@
 # Imports
 import random
-from ray import tune
+# from ray import tune
 from detectron2.config.config import CfgNode
 from tqdm import tqdm
 from sklearn.model_selection import ParameterGrid
@@ -138,10 +138,12 @@ class Model:
             MetadataCatalog.get("test").set(
                 thing_classes=self.labels
             )  # Adding the labels
-            self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
+            self.metadata_test = MetadataCatalog.get(
+                "test")  # Getting the metadata
         except:
             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
-            self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
+            self.metadata_test = MetadataCatalog.get(
+                "test")  # Getting the metadata
         self.BASE_LR = base_lr
         self.MAX_ITER = max_iter
         self.EVAL_PERIOD = eval_period
@@ -172,7 +174,8 @@ class Model:
         """
         - remove_files_in_output - remove all of the file in ./output/
         """
-        files_to_remove = os.listdir("./output/")  # Get the files in the directory
+        files_to_remove = os.listdir(
+            "./output/")  # Get the files in the directory
         try:
             files_to_remove.remove("test_coco_format.json")
         except:
@@ -209,7 +212,7 @@ class Model:
         w = xmax - xmin
         h = ymax - ymin
         x, y, w, h = round(x), round(y), round(w), round(h)
-        roi = img[y : y + h, x : x + w]  # crop the image
+        roi = img[y: y + h, x: x + w]  # crop the image
         cv2.rectangle(
             img, (x, y), (x + w, y + h), (200, 0, 0), 10
         )  # draw box around the bbox
@@ -292,7 +295,8 @@ class Model:
         """
         torch.cuda.empty_cache()
         cfg = get_cfg()  # Creating a new cfg
-        cfg.merge_from_file(model_zoo.get_config_file(self.model))  # Add the model
+        cfg.merge_from_file(model_zoo.get_config_file(
+            self.model))  # Add the model
         cfg.DATASETS.TRAIN = ("data",)  # adding train DataSet
         cfg.DATASETS.TEST = ()
         cfg.MODEL.WEIGHTS = model_zoo.get_checkpoint_url(
@@ -303,7 +307,8 @@ class Model:
         cfg.SOLVER.BASE_LR = self.BASE_LR  # Set Base LR
         cfg.SOLVER.STEPS = []  # Set Steps
         cfg.SOLVER.IMS_PER_BATCH = self.IMS_PER_BATCH  # Set IMS_PER_BATCH
-        cfg.MODEL.ROI_HEADS.NUM_CLASSES = len(self.labels)  # Set len(self.labels)
+        cfg.MODEL.ROI_HEADS.NUM_CLASSES = len(
+            self.labels)  # Set len(self.labels)
         cfg.MODEL.ROI_HEADS.BATCH_SIZE_PER_IMAGE = (
             self.BATCH_SIZE_PER_IMAGE
         )  # Set Batch_Size_Per_Image
@@ -351,7 +356,8 @@ class Model:
         - predictor - to create the evaluator
         """
         torch.cuda.empty_cache()
-        evaluator = COCOEvaluator(metadata, output_dir="./output/")  # Create evaluator
+        evaluator = COCOEvaluator(
+            metadata, output_dir="./output/")  # Create evaluator
         val_loader = build_detection_test_loader(
             self.cfg, metadata
         )  # Create data loader
@@ -388,10 +394,12 @@ class Model:
         torch.cuda.empty_cache()
         for img in tqdm(os.listdir("./test_imgs/")):  # iterate over the test images
             v = Visualizer(
-                cv2.imread(f"./test_imgs/{img}")[:, :, ::-1], metadata=self.metadata
+                cv2.imread(f"./test_imgs/{img}")[:,
+                                                 :, ::-1], metadata=self.metadata
             )
             v = v.draw_instance_predictions(
-                predictor(cv2.imread(f"./test_imgs/{img}"))["instances"].to("cpu")
+                predictor(cv2.imread(
+                    f"./test_imgs/{img}"))["instances"].to("cpu")
             )  # Draw pred boxes
             v = v.get_image()[:, :, ::-1]
             plt.figure(figsize=(24, 12))
@@ -425,7 +433,8 @@ class Model:
         h = ymax - ymin
         preds = predictor(img)
         if (
-            len(preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"])
+            len(preds["instances"].__dict__["_fields"]
+                ["pred_boxes"].__dict__["tensor"])
             <= 0
         ):
             preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__[
@@ -442,7 +451,8 @@ class Model:
         lowest_rmse = 0
         r_mean_squared_error = MeanSquaredError(squared=False)
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
@@ -454,7 +464,8 @@ class Model:
         lowest_recall = 0
         recall = Recall()
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
@@ -470,8 +481,10 @@ class Model:
             xB = min(true_box[2], pred_box[2])
             yB = min(true_box[3], pred_box[3])
             interArea = max(0, xB - xA + 1) * max(0, yB - yA + 1)
-            boxAArea = (true_box[2] - true_box[0] + 1) * (true_box[3] - true_box[1] + 1)
-            boxBArea = (pred_box[2] - pred_box[0] + 1) * (pred_box[3] - pred_box[1] + 1)
+            boxAArea = (true_box[2] - true_box[0] + 1) * \
+                (true_box[3] - true_box[1] + 1)
+            boxBArea = (pred_box[2] - pred_box[0] + 1) * \
+                (pred_box[3] - pred_box[1] + 1)
             iou = interArea / float(boxAArea + boxBArea - interArea)
             ious.append(iou)
         iou = np.mean(ious)
@@ -484,7 +497,8 @@ class Model:
         lowest_mse = 0
         mean_squared_error = MeanSquaredError(squared=True)
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
@@ -508,7 +522,7 @@ class Model:
         """
         - crop_img - cropping the image using x,y,w,h
         """
-        crop = img[y : y + h, x : x + w]
+        crop = img[y: y + h, x: x + w]
         cv2.imwrite("./test.png", crop)
         return crop
 
@@ -521,16 +535,20 @@ class Model:
         lowest_ssim = 0
         ssim = SSIM()
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
             info = self.data[self.create_target_and_preds_iter]
             img = cv2.imread(info["Path"])
-            x, y, w, h = self.create_x_y_w_h(target[0], target[1], target[2], target[3])
+            x, y, w, h = self.create_x_y_w_h(
+                target[0], target[1], target[2], target[3])
             crop_img_target = torch.from_numpy(self.crop_img(x, y, w, h, img))
-            x, y, w, h = self.create_x_y_w_h(pred[0], pred[1], pred[2], pred[3])
-            crop_img_pred = torch.from_numpy(np.array(self.crop_img(x, y, w, h, img)))
+            x, y, w, h = self.create_x_y_w_h(
+                pred[0], pred[1], pred[2], pred[3])
+            crop_img_pred = torch.from_numpy(
+                np.array(self.crop_img(x, y, w, h, img)))
             if ssim(crop_img_pred, crop_img_target) > lowest_ssim:
                 lowest_ssim = ssim(pred.to("cpu"), target)
         return lowest_ssim
@@ -542,7 +560,8 @@ class Model:
         lowest_psnr = 0
         psnr = PSNR()
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
@@ -557,7 +576,8 @@ class Model:
         lowest_mae = 0
         mae = MeanAbsoluteError()
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
@@ -569,7 +589,8 @@ class Model:
         lowest_precision = 0
         precision = Precision()
         preds_new = (
-            preds["instances"].__dict__["_fields"]["pred_boxes"].__dict__["tensor"]
+            preds["instances"].__dict__[
+                "_fields"]["pred_boxes"].__dict__["tensor"]
         )
         for pred_i in tqdm(range(len(preds))):
             pred = preds_new[pred_i]
@@ -638,8 +659,8 @@ class Model:
         torch.cuda.empty_cache()
         wandb.init(
             project=PROJECT_NAME,
-            name=self.NAME,
-            config=self.config,
+            name=str(self.NAME),
+            # config=self.config,
             sync_tensorboard=True,
         )
         trainer = self.__train()
@@ -775,7 +796,8 @@ class Param_Tunning:
         https://docs.ray.io/en/latest/tune/user-guide.html
         """
         analysis = tune.run(
-            self.ray_tune_func, config=params, resources_per_trial={"gpu": 0, "cpu": 1}
+            self.ray_tune_func, config=params, resources_per_trial={
+                "gpu": 0, "cpu": 1}
         )
         analysis.get_best_results(metrics="average_precisions", model="max")
         df = analysis.results_df
diff --git a/V2/requirements.txt b/V2/requirements.txt
index 833b73a..0371b8f 100644
--- a/V2/requirements.txt
+++ b/V2/requirements.txt
@@ -1,6 +1,6 @@
 absl-py==0.12.0
+aiohttp==3.7.4.post0
 aiohttp-cors==0.7.0
-aiohttp>=3.7.4
 aioredis==1.3.1
 altair==4.1.0
 aniso8601==9.0.1
@@ -8,19 +8,20 @@ antlr4-python3-runtime==4.8
 anyio==3.3.0
 appdirs==1.4.4
 argcomplete==1.12.3
-argon2-cffi==20.1.0
+argon2-cffi @ file:///tmp/build/80754af9/argon2-cffi_1613037097816/work
 astor==0.8.1
 astunparse==1.6.3
 async-timeout==3.0.1
-attrs==21.2.0
-babel==2.9.1
-backcall==0.2.0
+attrs @ file:///tmp/build/80754af9/attrs_1620827162558/work
+autopep8==1.6.0
+Babel==2.9.1
+backcall @ file:///home/conda/feedstock_root/build_artifacts/backcall_1592338393461/work
 backoff==1.11.1
-backports.functools-lru-cache==1.6.4
+backports.functools-lru-cache @ file:///home/conda/feedstock_root/build_artifacts/backports.functools_lru_cache_1618230623929/work
 backports.zoneinfo==0.2.1
 base58==2.1.0
-black==21.4b2
-bleach==4.1.0
+black==21.11b1
+bleach @ file:///home/conda/feedstock_root/build_artifacts/bleach_1629908509068/work
 blessings==1.7
 blinker==1.4
 boto3==1.18.55
@@ -28,39 +29,42 @@ botocore==1.21.55
 brotlipy==0.7.0
 cachetools==4.2.1
 certifi==2021.5.30
-cffi==1.14.6
+cffi @ file:///tmp/build/80754af9/cffi_1625807838443/work
 cfgv==3.3.0
+chardet==4.0.0
 charset-normalizer==2.0.4
 clearml==1.0.4
 click==8.0.1
 cloudpickle==1.6.0
+colorama==0.4.4
 configparser==5.0.2
-cryptography==3.4.8
+cryptography @ file:///tmp/build/80754af9/cryptography_1633520369403/work
 cycler==0.10.0
-cython==0.29.23
+Cython==0.29.23
 debugpy==1.5.1
-decorator==5.1.0
-defusedxml==0.7.1
-deprecated==1.2.13
-detectron2==0.5+cu111
+decorator @ file:///home/conda/feedstock_root/build_artifacts/decorator_1631346842025/work
+defusedxml @ file:///home/conda/feedstock_root/build_artifacts/defusedxml_1615232257335/work
+Deprecated==1.2.13
+# Editable install with no version control (detectron2==0.5+cu111)
+-e /media/indika/Sync/anaconda3/envs/detectron2/lib/python3.8/site-packages
 dill==0.3.4
 distlib==0.3.2
 distro==1.6.0
 dlib==19.22.0
 dnspython==1.16.0
 docker-pycreds==0.4.0
-entrypoints==0.3
+entrypoints @ file:///home/conda/feedstock_root/build_artifacts/entrypoints_1605121927639/work/dist/entrypoints-0.3-py2.py3-none-any.whl
 et-xmlfile==1.1.0
 eventlet==0.32.0
-face-recognition-models==0.3.0
 face-recognition==1.3.0
+face-recognition-models==0.3.0
+fiftyone==0.13.3
 fiftyone-brain==0.7.1
 fiftyone-db==0.3.0
-fiftyone==0.13.3
 filelock==3.0.12
-flask-restful==0.3.9
-flask-simple-geoip==0.2.4
-flask==2.0.1
+Flask==2.0.1
+Flask-RESTful==0.3.9
+Flask-Simple-GeoIP==0.2.4
 flatbuffers==1.12
 fonttools==4.25.0
 furl==2.1.2
@@ -68,11 +72,11 @@ future==0.18.2
 fvcore==0.1.5.post20211015
 gast==0.3.3
 gitdb==4.0.7
-gitpython==3.1.14
+GitPython==3.1.14
 glob2==0.7
 google-api-core==1.30.0
-google-auth-oauthlib==0.4.4
 google-auth==1.28.0
+google-auth-oauthlib==0.4.4
 google-pasta==0.2.0
 google-trans-new==1.1.9
 googleapis-common-protos==1.53.0
@@ -95,38 +99,38 @@ importlib-resources==5.1.4
 install==1.3.4
 iopath==0.1.8
 ipaddress==1.0.23
-ipykernel==6.4.1
+ipykernel @ file:///home/conda/feedstock_root/build_artifacts/ipykernel_1631291090039/work/dist/ipykernel-6.4.1-py3-none-any.whl
+ipython @ file:///home/conda/feedstock_root/build_artifacts/ipython_1632763767549/work
 ipython-genutils==0.2.0
-ipython==7.28.0
-ipywidgets==7.6.5
+ipywidgets @ file:///home/conda/feedstock_root/build_artifacts/ipywidgets_1631590360471/work
 itsdangerous==2.0.1
-jedi==0.18.0
-jinja2==3.0.1
+jedi @ file:///home/conda/feedstock_root/build_artifacts/jedi_1610146791023/work
+Jinja2 @ file:///tmp/build/80754af9/jinja2_1624781299557/work
 jmespath==0.10.0
 joblib==1.0.1
 json5==0.9.5
-jsonschema==4.1.0
-jupyter-client==7.0.6
-jupyter-console==6.4.0
-jupyter-core==4.8.1
+jsonschema @ file:///home/conda/feedstock_root/build_artifacts/jsonschema_1633875207482/work
+jupyter @ file:///home/conda/feedstock_root/build_artifacts/jupyter_1611871900135/work
+jupyter-client @ file:///home/conda/feedstock_root/build_artifacts/jupyter_client_1633454794268/work
+jupyter-console @ file:///home/conda/feedstock_root/build_artifacts/jupyter_console_1616560109969/work
+jupyter-core @ file:///home/conda/feedstock_root/build_artifacts/jupyter_core_1631852756538/work
 jupyter-server==1.8.0
-jupyter==1.0.0
+jupyterlab==3.0.16
 jupyterlab-server==2.6.0
-jupyterlab-widgets==1.0.2
-jupyterlab==3.0.17
+jupyterlab-widgets @ file:///home/conda/feedstock_root/build_artifacts/jupyterlab_widgets_1631590465624/work
 kaleido==0.2.1
-keras-preprocessing==1.1.2
-keras==2.4.3
+Keras==2.4.3
+Keras-Preprocessing==1.1.2
 kiwisolver==1.3.1
 livereload==2.6.3
 lxml==4.6.3
-markdown==3.3.4
-markupsafe==2.0.1
-matplotlib-inline==0.1.3
+Markdown==3.3.4
+MarkupSafe @ file:///tmp/build/80754af9/markupsafe_1621528148836/work
 matplotlib==3.4.3
-mistune==0.8.4
+matplotlib-inline @ file:///home/conda/feedstock_root/build_artifacts/matplotlib-inline_1631080358261/work
+mistune @ file:///home/conda/feedstock_root/build_artifacts/mistune_1624941302223/work
 mkl-fft==1.3.1
-mkl-random==1.2.2
+mkl-random @ file:///tmp/build/80754af9/mkl_random_1626186064646/work
 mkl-service==2.4.0
 mongoengine==0.20.0
 motor==2.5.1
@@ -136,80 +140,81 @@ munkres==1.1.4
 mypy-extensions==0.4.3
 mysql-connector-python==8.0.26
 nbclassic==0.3.1
-nbconvert==5.6.1
-nbformat==5.1.3
+nbconvert @ file:///home/conda/feedstock_root/build_artifacts/nbconvert_1631125953237/work
+nbformat @ file:///home/conda/feedstock_root/build_artifacts/nbformat_1617383142101/work
 ndjson==0.3.1
-nest-asyncio==1.5.1
+nest-asyncio @ file:///home/conda/feedstock_root/build_artifacts/nest-asyncio_1617163391303/work
 networkx==2.6.3
 nltk==3.6.5
 nodeenv==1.6.0
-notebook==6.4.4
+notebook @ file:///home/conda/feedstock_root/build_artifacts/notebook_1631733685426/work
 numpy==1.21.1
-nvidia-ml-py3==7.352.0
 nvidia-ml-py==11.450.51
-nvitop==0.4.4.1
+nvidia-ml-py3==7.352.0
+nvitop==0.5.1
 oauthlib==3.1.1
-olefile==0.46
+olefile @ file:///Users/ktietz/demo/mc3/conda-bld/olefile_1629805411829/work
 omegaconf==2.1.1
-opencensus-context==0.1.2
 opencensus==0.7.13
-opencv-python-headless==4.5.3.56
+opencensus-context==0.1.2
 opencv-python==4.5.3.56
+opencv-python-headless==4.5.3.56
 openpyxl==3.0.9
 opt-einsum==3.3.0
 orderedmultidict==1.0.1
-packaging==21.0
+packaging @ file:///tmp/build/80754af9/packaging_1625611678980/work
 pandas==1.3.2
-pandocfilters==1.5.0
-parso==0.8.2
+pandocfilters @ file:///home/conda/feedstock_root/build_artifacts/pandocfilters_1631603243851/work
+parso @ file:///home/conda/feedstock_root/build_artifacts/parso_1617148930513/work
 pathlib2==2.3.5
 pathspec==0.9.0
 pathtools==0.1.2
 patool==1.12
-pexpect==4.8.0
+pexpect @ file:///home/conda/feedstock_root/build_artifacts/pexpect_1602535608087/work
 phonenumbers==8.12.29
-pickleshare==0.7.5
-pillow==8.3.2
-pip==21.3.1
+pickleshare @ file:///home/conda/feedstock_root/build_artifacts/pickleshare_1602536217715/work
+Pillow==8.3.2
 platformdirs==2.3.0
 plotly==5.2.1
 pluggy==0.13.1
 portalocker==2.3.0
 pprintpp==0.4.0
 pre-commit==2.13.0
-prometheus-client==0.11.0
+prometheus-client @ file:///home/conda/feedstock_root/build_artifacts/prometheus_client_1622586138406/work
 promise==2.3
-prompt-toolkit==3.0.20
-protobuf==3.9.0
+prompt-toolkit @ file:///home/conda/feedstock_root/build_artifacts/prompt-toolkit_1629903925368/work
+protobuf==3.8.0
 psutil==5.8.0
-ptyprocess==0.7.0
-py-spy==0.3.7
+ptyprocess @ file:///home/conda/feedstock_root/build_artifacts/ptyprocess_1609419310487/work/dist/ptyprocess-0.7.0-py2.py3-none-any.whl
 py==1.10.0
+py-spy==0.3.7
 pyarrow==5.0.0
-pyasn1-modules==0.2.8
 pyasn1==0.4.8
+pyasn1-modules==0.2.8
 pycocotools==2.0.2
-pycparser==2.20
+pycodestyle==2.8.0
+pycparser @ file:///tmp/build/80754af9/pycparser_1594388511720/work
 pydantic==1.8.2
 pydeck==0.7.0
 pydot==1.4.2
-pygments==2.10.0
-pyopenssl==20.0.1
+Pygments @ file:///home/conda/feedstock_root/build_artifacts/pygments_1629119114968/work
+pyOpenSSL @ file:///tmp/build/80754af9/pyopenssl_1608057966937/work
 pyparsing==2.4.7
-pyrsistent==0.17.3
-pysocks==1.7.1
+pyrsistent @ file:///home/conda/feedstock_root/build_artifacts/pyrsistent_1610146798212/work
+PySocks @ file:///tmp/build/80754af9/pysocks_1605305779399/work
 python-dateutil==2.8.2
 pytz==2021.1
-pywavelets==1.1.1
-pyyaml==5.4
+PyWavelets==1.1.1
+PyYAML==5.1
 pyzmq==19.0.2
-qtconsole==5.1.1
-qtpy==1.11.2
+qrcode==7.3.1
+qtconsole @ file:///home/conda/feedstock_root/build_artifacts/qtconsole_1625023841584/work
+QtPy @ file:///home/conda/feedstock_root/build_artifacts/qtpy_1632440819550/work
 ray==1.4.1
 redis==3.5.3
 regex==2021.8.3
-requests-oauthlib==1.3.0
 requests==2.26.0
+requests-oauthlib==1.3.0
 retrying==1.3.3
 rfc3986==1.5.0
 rsa==4.7.2
@@ -218,9 +223,8 @@ scikit-image==0.18.3
 scikit-learn==0.24.1
 scipy==1.6.2
 seaborn==0.11.1
-send2trash==1.8.0
+Send2Trash @ file:///home/conda/feedstock_root/build_artifacts/send2trash_1628511208346/work
 sentry-sdk==1.0.0
-setuptools==58.0.4
 shortuuid==1.0.1
 simple-geoip==0.1.1
 sip==4.19.13
@@ -234,31 +238,31 @@ stripe==2.60.0
 subprocess32==3.5.4
 tabulate==0.8.9
 tenacity==8.0.1
+tensorboard==2.7.0
 tensorboard-data-server==0.6.1
 tensorboard-plugin-wit==1.8.0
-tensorboard==2.7.0
-tensorboardx==2.4
+tensorboardX==2.4
+tensorflow==2.4.1
 tensorflow-estimator==2.4.0
 tensorflow-hub==0.11.0
-tensorflow==2.5.2
 tensorrt==0.0.1
 termcolor==1.1.0
-terminado==0.12.1
-testpath==0.5.0
+terminado @ file:///home/conda/feedstock_root/build_artifacts/terminado_1631128159040/work
+testpath @ file:///home/conda/feedstock_root/build_artifacts/testpath_1621261527237/work
 threadpoolctl==2.1.0
 tifffile==2021.8.30
 toml==0.10.2
 tomli==1.2.1
 toolz==0.11.1
-torch-tb-profiler==0.2.0
 torch==1.9.1+cu111
+torch-tb-profiler==0.2.0
 torchaudio==0.9.1
 torchmetrics==0.5.1
 torchvision==0.10.1+cu111
-tornado==6.1
+tornado @ file:///tmp/build/80754af9/tornado_1606942300299/work
 tox==3.23.1
 tqdm==4.62.0
-traitlets==5.1.0
+traitlets @ file:///home/conda/feedstock_root/build_artifacts/traitlets_1630423529112/work
 translate==3.5.0
 twilio==6.63.0
 typed-ast==1.4.3
@@ -269,17 +273,16 @@ urllib3==1.26.6
 validators==0.18.2
 virtualenv==20.4.7
 voxel51-eta==0.5.3
-wandb==0.12.4
+wandb==0.12.3
 watchdog==2.1.5
-wcwidth==0.2.5
+wcwidth @ file:///home/conda/feedstock_root/build_artifacts/wcwidth_1600965781394/work
 webencodings==0.5.1
 websocket-client==1.0.1
-werkzeug==2.0.1
-wheel==0.36.2
-widgetsnbextension==3.5.1
+Werkzeug==2.0.1
+widgetsnbextension @ file:///home/conda/feedstock_root/build_artifacts/widgetsnbextension_1605475534911/work
 wrapt==1.12.1
-xeus-python-shell==0.1.7
 xeus-python==0.13.5
+xeus-python-shell==0.1.7
 xmltodict==0.12.0
 yacs==0.1.8
 yarl==1.6.3
diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
index 822b3a4..a018731 120000
--- a/V2/wandb/latest-run
+++ b/V2/wandb/latest-run
@@ -1 +1 @@
-run-20211109_232913-2za76qhg
\ No newline at end of file
+run-20211119_194207-jixt6ef3
\ No newline at end of file
