diff --git a/V2/Model.py b/V2/Model.py
index b1962da..9b04c4c 100644
--- a/V2/Model.py
+++ b/V2/Model.py
@@ -99,12 +99,16 @@ class Model:
             DatasetCatalog.register(
                 "data", lambda: self.load_data()
             )  # Registering the training data
-            MetadataCatalog.get("data").set(thing_classes=self.labels)  # Adding the labels
+            MetadataCatalog.get("data").set(
+                thing_classes=self.labels
+            )  # Adding the labels
             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
             DatasetCatalog.register(
                 "test", lambda: self.load_data(test=True)
             )  # Registering the test data
-            MetadataCatalog.get("test").set(thing_classes=self.labels)  # Adding the labels
+            MetadataCatalog.get("test").set(
+                thing_classes=self.labels
+            )  # Adding the labels
             self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
         except:
             pass
@@ -213,7 +217,7 @@ class Model:
             record["annotations"] = objs
             new_data.append(record)
         np.random.shuffle(new_data)  # Shuffling the data
-        # np.save("data.npy", new_data)  # Saving the data
+        np.save("data.npy", new_data)  # Saving the data
         return new_data
 
     def save(self, **kwargs: dict) -> None:
@@ -494,87 +498,83 @@ class Model:
         """
         - train - trains the model
         """
+        self.remove_files_in_output()
+        torch.cuda.empty_cache()
+        wandb.init(
+            project=PROJECT_NAME,
+            name=self.NAME,
+            config={
+                "BASE_LR": self.BASE_LR,
+                "MAX_ITER": self.MAX_ITER,
+                "EVAL_PERIOD": self.EVAL_PERIOD,
+                "IMS_PER_BATCH": self.IMS_PER_BATCH,
+                "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
+                "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
+                "MODEL": self.model,
+                "NAME": self.NAME,
+            },
+        )
+        trainer = self.__train()
+        predictor = self.create_predictor()
+        metrics_coco = self.create_coco_eval(predictor)
+        metrics_file = self.metrics_file_to_dict()
+        test_images = self.predict_test_images(predictor)
+        (
+            preds,
+            target,
+            x,
+            y,
+            w,
+            h,
+            xmin,
+            ymin,
+            xmax,
+            ymax,
+            height,
+            width,
+        ) = self.create_target_and_preds(predictor)
+        rmse = self.create_rmse(preds, target)
+        mse = self.create_mse(preds, target)
+        # ssim = self.create_ssim(preds, target, height, width)
+        psnr = self.create_psnr(preds, target)
+        wandb.log(metrics_coco)
+        for metric_file in metrics_file:
+            wandb.log(metric_file)
+        for test_img in test_images:
+            wandb.log({test_img[0]: wandb.Image(test_img[1])})
+        wandb.log({"RMSE": rmse})
+        wandb.log({"MSE": mse})
+        wandb.log({"PSNR": psnr})
         try:
-            self.remove_files_in_output()
-            torch.cuda.empty_cache()
-            wandb.init(
-                project=PROJECT_NAME,
-                name=self.NAME,
-                config={
-                    "BASE_LR": self.BASE_LR,
-                    "MAX_ITER": self.MAX_ITER,
-                    "EVAL_PERIOD": self.EVAL_PERIOD,
-                    "IMS_PER_BATCH": self.IMS_PER_BATCH,
-                    "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
-                    "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
-                    "MODEL": self.model,
-                    "NAME": self.NAME,
-                },
+            self.save(
+                trainer=trainer,
+                predictor=predictor,
+                metrics_coco=metrics_coco,
+                metrics_file=metrics_file,
+                test_images=test_images,
+                preds=preds,
+                target=target,
+                rmse=rmse,
+                mse=mse,
+                psnr=psnr,
             )
-            trainer = self.__train()
-            predictor = self.create_predictor()
-            metrics_coco = self.create_coco_eval(predictor)
-            metrics_file = self.metrics_file_to_dict()
-            test_images = self.predict_test_images(predictor)
-            (
-                preds,
-                target,
-                x,
-                y,
-                w,
-                h,
-                xmin,
-                ymin,
-                xmax,
-                ymax,
-                height,
-                width,
-            ) = self.create_target_and_preds(predictor)
-            rmse = self.create_rmse(preds, target)
-            mse = self.create_mse(preds, target)
-            # ssim = self.create_ssim(preds, target, height, width)
-            psnr = self.create_psnr(preds, target)
-            wandb.log(metrics_coco)
-            for metric_file in metrics_file:
-                wandb.log(metric_file)
-            for test_img in test_images:
-                wandb.log({test_img[0]: wandb.Image(test_img[1])})
-            wandb.log({"RMSE": rmse})
-            wandb.log({"MSE": mse})
-            wandb.log({"PSNR": psnr})
-            try:
-                self.save(
-                    trainer=trainer,
-                    predictor=predictor,
-                    metrics_coco=metrics_coco,
-                    metrics_file=metrics_file,
-                    test_images=test_images,
-                    preds=preds,
-                    target=target,
-                    rmse=rmse,
-                    mse=mse,
-                    psnr=psnr,
-                )
-            except:
-                pass
-            wandb.finish()
-            return {
-                "trainer": trainer,
-                "predictor": predictor,
-                "metrics_coco": metrics_coco,
-                "metrics_file": metrics_file,
-                "test_images": test_images,
-                "preds": preds,
-                "target": target,
-                "rmse": rmse,
-                "mse": mse,
-                "psnr": psnr,
-            }
-            torch.cuda.empty_cache()
-            self.remove_files_in_output()
         except:
-            torch.cuda.empty_cache()
             pass
+        wandb.finish()
+        return {
+            "trainer": trainer,
+            "predictor": predictor,
+            "metrics_coco": metrics_coco,
+            "metrics_file": metrics_file,
+            "test_images": test_images,
+            "preds": preds,
+            "target": target,
+            "rmse": rmse,
+            "mse": mse,
+            "psnr": psnr,
+        }
+        torch.cuda.empty_cache()
+        self.remove_files_in_output()
 
     def __str__(self) -> str:
         return f"""
@@ -638,7 +638,7 @@ class Param_Tunning:
         ]
         params_not_in_required_labels = []
 
-        for required_label in tqdm(list(required_labels.keys())):
+        for required_label in tqdm(list(required_labels)):
             if required_label not in list(params.keys()):
                 params_not_in_required_labels.append(required_label)
         if params_not_in_required_labels != []:
@@ -660,7 +660,7 @@ class Param_Tunning:
                     ims_per_batch=param["IMS_PER_BATCH"],
                     batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
                     score_thresh_test=param["SCORE_THRESH_TEST"],
-                    model=param["MODEL"],
+                    model="COCO-Detection/" + param["MODEL"],
                     name=str(param),
                     create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
                 )
@@ -670,8 +670,8 @@ class Param_Tunning:
                 models["Model"].append(param["MODEL"])
                 models["Metrics_COCO"].append(metrics_coco)
                 models["Metrics_File"].append(metrics_file)
-            except:
-                pass
+            except Exception as e:
+                print(e)
         models = pd.DataFrame(models)
         models.to_csv("./tune.csv")
         return models
diff --git a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 b/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0
deleted file mode 100644
index 0c6fbe6..0000000
Binary files a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 and /dev/null differ
diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
deleted file mode 100644
index da0e9f9..0000000
--- a/V2/output/last_checkpoint
+++ /dev/null
@@ -1 +0,0 @@
-model_final.pth
\ No newline at end of file
diff --git a/V2/output/metrics.json b/V2/output/metrics.json
deleted file mode 100644
index cb9e043..0000000
--- a/V2/output/metrics.json
+++ /dev/null
@@ -1,13 +0,0 @@
-{"data_time": 0.0024713455000267004, "eta_seconds": 242.86247767999754, "fast_rcnn/cls_accuracy": 0.3515625, "fast_rcnn/false_negative": 0.3380952380952381, "fast_rcnn/fg_cls_accuracy": 0.6619047619047619, "iteration": 19, "loss_box_reg": 0.41146324574947357, "loss_cls": 0.7392567098140717, "loss_rpn_cls": 0.020119073800742626, "loss_rpn_loc": 0.008557552937418222, "lr": 1.9231e-05, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 1.0559238159999893, "total_loss": 1.199336625635624}
-{"data_time": 0.0023898784999971667, "eta_seconds": 219.56037505500205, "fast_rcnn/cls_accuracy": 0.869140625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.33894744515419006, "loss_cls": 0.533970057964325, "loss_rpn_cls": 0.021526054479181767, "loss_rpn_loc": 0.0077283557038754225, "lr": 3.9211e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0000388769999802, "total_loss": 0.9420970119535923}
-{"data_time": 0.002844556500008366, "eta_seconds": 198.64986314500186, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.3618171513080597, "loss_cls": 0.3491041511297226, "loss_rpn_cls": 0.01204870780929923, "loss_rpn_loc": 0.007542710052803159, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 251.0, "rpn/num_pos_anchors": 5.0, "time": 1.0513729945000136, "total_loss": 0.7109228377230465}
-{"data_time": 0.002351157000020976, "eta_seconds": 179.50704871999818, "fast_rcnn/cls_accuracy": 0.9296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.24807123839855194, "loss_cls": 0.27089114487171173, "loss_rpn_cls": 0.060913536697626114, "loss_rpn_loc": 0.007144225295633078, "lr": 7.9171e-05, "roi_head/num_bg_samples": 119.0, "roi_head/num_fg_samples": 9.0, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.095190236999997, "total_loss": 0.6000422104261816}
-{"data_time": 0.002303852000011375, "eta_seconds": 158.5481184749952, "fast_rcnn/cls_accuracy": 0.90234375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.37137627601623535, "loss_cls": 0.27069205045700073, "loss_rpn_cls": 0.01833363715559244, "loss_rpn_loc": 0.007090216968208551, "lr": 9.9151e-05, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.056987456499968, "total_loss": 0.7003956531407312}
-{"data_time": 0.002605340000002343, "eta_seconds": 137.40836934499583, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.3501961678266525, "loss_cls": 0.24755674600601196, "loss_rpn_cls": 0.03569256328046322, "loss_rpn_loc": 0.0065877537708729506, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0775407019999932, "total_loss": 0.6915035428246483}
-{"data_time": 0.0023761640000259376, "eta_seconds": 116.00193643499779, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.3321911245584488, "loss_cls": 0.27787481248378754, "loss_rpn_cls": 0.03818380646407604, "loss_rpn_loc": 0.006203859578818083, "lr": 0.000139111, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0447581145000129, "total_loss": 0.7225660970434546}
-{"data_time": 0.002289748000009695, "eta_seconds": 94.91067526499819, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.37014663219451904, "loss_cls": 0.2503085359930992, "loss_rpn_cls": 0.022741314955055714, "loss_rpn_loc": 0.008183888625353575, "lr": 0.000159091, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0550466784999912, "total_loss": 0.6615875260904431}
-{"data_time": 0.0024869095000212837, "eta_seconds": 73.98912195499776, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.3416535407304764, "loss_cls": 0.20821541547775269, "loss_rpn_cls": 0.012514203786849976, "loss_rpn_loc": 0.007641490548849106, "lr": 0.000179071, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.1015214909999713, "total_loss": 0.5950205000117421}
-{"data_time": 0.002674328000011883, "eta_seconds": 52.728152924998994, "fast_rcnn/cls_accuracy": 0.923828125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.27223585546016693, "loss_cls": 0.1997024491429329, "loss_rpn_cls": 0.0211806483566761, "loss_rpn_loc": 0.005561774130910635, "lr": 0.000199051, "roi_head/num_bg_samples": 118.25, "roi_head/num_fg_samples": 9.75, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.0192338319999976, "total_loss": 0.4901804425753653}
-{"data_time": 0.0025132275000032678, "eta_seconds": 31.636891754999397, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.36517906188964844, "loss_cls": 0.23198173195123672, "loss_rpn_cls": 0.014427084941416979, "loss_rpn_loc": 0.006507641403004527, "lr": 0.000219031, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 251.75, "rpn/num_pos_anchors": 4.25, "time": 1.0292666254999858, "total_loss": 0.6094998904736713}
-{"data_time": 0.002412913000057415, "eta_seconds": 10.586967729999799, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9622507122507122, "fast_rcnn/fg_cls_accuracy": 0.03774928774928775, "iteration": 239, "loss_box_reg": 0.2760148346424103, "loss_cls": 0.19814912229776382, "loss_rpn_cls": 0.014830647502094507, "loss_rpn_loc": 0.009588066954165697, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 117.5, "roi_head/num_fg_samples": 10.5, "rpn/num_neg_anchors": 251.25, "rpn/num_pos_anchors": 4.75, "time": 1.1579277230000002, "total_loss": 0.503135692095384}
-{"data_time": 0.0026069874999734566, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.931640625, "fast_rcnn/false_negative": 0.9864864864864865, "fast_rcnn/fg_cls_accuracy": 0.013513513513513514, "iteration": 249, "loss_box_reg": 0.25686195492744446, "loss_cls": 0.1974724605679512, "loss_rpn_cls": 0.024123243056237698, "loss_rpn_loc": 0.010637202765792608, "lr": 0.000249001, "roi_head/num_bg_samples": 118.5, "roi_head/num_fg_samples": 9.5, "rpn/num_neg_anchors": 249.25, "rpn/num_pos_anchors": 6.75, "time": 1.1218074584999158, "total_loss": 0.48856362886726856}
diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
deleted file mode 100644
index e69de29..0000000
diff --git a/V2/tune.csv b/V2/tune.csv
new file mode 100644
index 0000000..9eb4606
--- /dev/null
+++ b/V2/tune.csv
@@ -0,0 +1 @@
+,Model,Metrics_COCO,Metrics_File
diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
index bdd0614..ab9b78c 120000
--- a/V2/wandb/latest-run
+++ b/V2/wandb/latest-run
@@ -1 +1 @@
-run-20211029_175737-18w958uw
\ No newline at end of file
+run-20211029_191609-qbfjj6s8
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
index 099fa7b..20d3ca0 100644
--- a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+++ b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
@@ -38,6 +38,10 @@ _wandb:
       1:
       - 1
       - 5
+      2:
+      - 1
+      - 3
+      - 5
       3:
       - 13
       - 16
diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
index 9e26dfe..5c28c9c 100644
--- a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+++ b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
@@ -1 +1 @@
-{}
\ No newline at end of file
+{"_wandb": {"runtime": 1020}}
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb
index 47bdc52..20979e1 100644
Binary files a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb and b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb differ
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/code/V2/run.py b/V2/wandb/run-20211029_181623-oq3sf9nl/files/code/V2/run.py
new file mode 100644
index 0000000..5e4d213
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/code/V2/run.py
@@ -0,0 +1,38 @@
+from Model import *
+
+params = {
+    "MODEL": [
+        "fast_rcnn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_C4_1x.yaml",
+        # "faster_rcnn_R_50_C4_3x.yaml",
+        # "faster_rcnn_R_50_DC5_1x.yaml",
+        # "faster_rcnn_R_50_DC5_3x.yaml",
+        # "retinanet_R_50_FPN_1x.py",
+        # "retinanet_R_50_FPN_1x.yaml",
+        # "retinanet_R_50_FPN_3x.yaml",
+        # "rpn_R_50_C4_1x.yaml",
+        # "rpn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_FPN_3x.yaml",
+        # "faster_rcnn_R_101_DC5_3x.yaml",
+        # "faster_rcnn_R_101_FPN_3x.yaml",
+        # "faster_rcnn_X_101_32x8d_FPN_3x.yaml",
+    ],
+    "MAX_ITER": [125],
+    "LABELS": [["Card"]],
+    "CREATE_TARGET_AND_PREDS": [55],
+    "EVAL_PERIOD": [125],
+    "SCORE_THRESH_TEST": [0.625],
+    "BASE_LR": [0.1, 0.01, 0.001, 0.0001],
+    "IMS_PER_BATCH": [
+        1,
+        2,
+    ],
+    "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
+}
+# model = Model()
+# model.train()
+pt = Param_Tunning(params)
+pt.tune()
+# torch.save(model.train(),'./model.pt')
+# torch.save(model.train(),'./model.pth')
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/conda-environment.yaml b/V2/wandb/run-20211029_181623-oq3sf9nl/files/conda-environment.yaml
new file mode 100644
index 0000000..629d053
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/conda-environment.yaml
@@ -0,0 +1,170 @@
+name: detectron2
+channels:
+  - nvidia
+  - conda-forge
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=4.5=1_gnu
+  - appdirs=1.4.4=pyhd3eb1b0_0
+  - argon2-cffi=20.1.0=py38h27cfd23_1
+  - attrs=21.2.0=pyhd3eb1b0_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - backports=1.0=py_2
+  - backports.functools_lru_cache=1.6.4=pyhd8ed1ab_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd8ed1ab_0
+  - blinker=1.4=py38h06a4308_0
+  - brotli=1.0.9=he6710b0_2
+  - brotlipy=0.7.0=py38h27cfd23_1003
+  - ca-certificates=2021.9.30=h06a4308_1
+  - certifi=2021.10.8=py38h06a4308_0
+  - cffi=1.14.6=py38h400218f_0
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - click=8.0.1=pyhd3eb1b0_0
+  - cryptography=3.4.8=py38hd23ed53_0
+  - cudatoolkit=11.1.74=h6bb024c_0
+  - cycler=0.10.0=py38_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.4.1=py38h709712a_0
+  - decorator=5.1.0=pyhd8ed1ab_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - entrypoints=0.3=pyhd8ed1ab_1003
+  - expat=2.4.1=h2531618_2
+  - fontconfig=2.13.1=h6c09931_0
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.10.4=h5ab3b9f_0
+  - future=0.18.2=py38_1
+  - glib=2.69.1=h5202010_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.2=pyhd3eb1b0_0
+  - importlib-metadata=4.8.1=py38h578d9bd_0
+  - intel-openmp=2021.3.0=h06a4308_3350
+  - ipykernel=6.4.1=py38he5a9106_0
+  - ipython=7.28.0=py38he5a9106_0
+  - ipython_genutils=0.2.0=py_1
+  - ipywidgets=7.6.5=pyhd8ed1ab_0
+  - jedi=0.18.0=py38h578d9bd_2
+  - jinja2=3.0.1=pyhd3eb1b0_0
+  - jpeg=9d=h7f8727e_0
+  - jsonschema=4.1.0=pyhd8ed1ab_0
+  - jupyter=1.0.0=py38h578d9bd_6
+  - jupyter_client=7.0.6=pyhd8ed1ab_0
+  - jupyter_console=6.4.0=pyhd8ed1ab_0
+  - jupyter_core=4.8.1=py38h578d9bd_0
+  - jupyterlab_widgets=1.0.2=pyhd8ed1ab_0
+  - kiwisolver=1.3.1=py38h2531618_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.35.1=h7274673_9
+  - libffi=3.3=he6710b0_2
+  - libgcc-ng=9.3.0=h5101ec6_17
+  - libgomp=9.3.0=h5101ec6_17
+  - libpng=1.6.37=hbc83047_0
+  - libprotobuf=3.17.2=h4ff587b_1
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx-ng=9.3.0=hd4cf53a_17
+  - libtiff=4.2.0=h85742a9_0
+  - libuuid=1.0.3=h7f8727e_2
+  - libuv=1.40.0=h7b6447c_0
+  - libwebp-base=1.2.0=h27cfd23_0
+  - libxcb=1.14=h7b6447c_0
+  - libxml2=2.9.12=h03d6c58_0
+  - lz4-c=1.9.3=h295c915_1
+  - markupsafe=2.0.1=py38h27cfd23_0
+  - matplotlib=3.4.2=py38h06a4308_0
+  - matplotlib-base=3.4.2=py38hab158f2_0
+  - matplotlib-inline=0.1.3=pyhd8ed1ab_0
+  - mistune=0.8.4=py38h497a2fe_1004
+  - mkl=2021.3.0=h06a4308_520
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - munkres=1.1.4=py_0
+  - mypy_extensions=0.4.3=py38_0
+  - nbconvert=5.6.1=pyhd8ed1ab_2
+  - nbformat=5.1.3=pyhd8ed1ab_0
+  - ncurses=6.2=he6710b0_1
+  - nest-asyncio=1.5.1=pyhd8ed1ab_0
+  - ninja=1.10.2=hff7bd54_1
+  - notebook=6.4.4=pyha770c72_0
+  - numpy=1.21.2=py38h20f2e39_0
+  - numpy-base=1.21.2=py38h79a1101_0
+  - olefile=0.46=pyhd3eb1b0_0
+  - openjpeg=2.4.0=h3ad879b_0
+  - openssl=1.1.1l=h7f8727e_0
+  - packaging=21.0=pyhd3eb1b0_0
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.2=pyhd8ed1ab_0
+  - pathspec=0.7.0=py_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyh9f0ad1d_2
+  - pickleshare=0.7.5=py_1003
+  - prometheus_client=0.11.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.20=pyha770c72_0
+  - prompt_toolkit=3.0.20=hd8ed1ab_0
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pycparser=2.20=py_2
+  - pygments=2.10.0=pyhd8ed1ab_0
+  - pyopenssl=20.0.1=pyhd3eb1b0_1
+  - pyparsing=2.4.7=pyhd3eb1b0_0
+  - pyqt=5.9.2=py38h05f1152_4
+  - pyrsistent=0.17.3=py38h497a2fe_2
+  - pysocks=1.7.1=py38h06a4308_0
+  - python=3.8.12=h12debd9_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python_abi=3.8=2_cp38
+  - pytz=2021.3=pyhd3eb1b0_0
+  - pyzmq=19.0.2=py38ha71036d_2
+  - qt=5.9.7=h5867ecd_1
+  - qtconsole=5.1.1=pyhd8ed1ab_0
+  - qtpy=1.11.2=pyhd8ed1ab_0
+  - readline=8.1=h27cfd23_0
+  - regex=2021.8.3=py38h7f8727e_0
+  - requests=2.26.0=pyhd3eb1b0_0
+  - send2trash=1.8.0=pyhd8ed1ab_0
+  - setuptools=58.0.4=py38h06a4308_0
+  - sip=4.19.13=py38he6710b0_0
+  - six=1.16.0=pyhd3eb1b0_0
+  - sqlite=3.36.0=hc218d9a_0
+  - terminado=0.12.1=py38h578d9bd_0
+  - testpath=0.5.0=pyhd8ed1ab_0
+  - tk=8.6.11=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tornado=6.1=py38h27cfd23_0
+  - traitlets=5.1.0=pyhd8ed1ab_0
+  - typed-ast=1.4.3=py38h7f8727e_1
+  - typing_extensions=3.10.0.2=pyh06a4308_0
+  - urllib3=1.26.7=pyhd3eb1b0_0
+  - wcwidth=0.2.5=pyh9f0ad1d_2
+  - webencodings=0.5.1=py_1
+  - wheel=0.37.0=pyhd3eb1b0_1
+  - widgetsnbextension=3.5.1=py38h578d9bd_4
+  - xz=5.2.5=h7b6447c_0
+  - zeromq=4.3.4=h9c3ff4c_0
+  - zipp=3.6.0=pyhd8ed1ab_0
+  - zlib=1.2.11=h7b6447c_3
+  - zstd=1.4.9=haebb681_0
+  - pip:
+    - autopep8==1.6.0
+    - black==21.9b0
+    - detectron2==0.5+cu111
+    - fvcore==0.1.5.post20211015
+    - hydra-core==1.1.1
+    - oauthlib==3.1.1
+    - omegaconf==2.1.1
+    - opencv-python==4.5.3.56
+    - pillow==8.4.0
+    - pip==21.3.1
+    - protobuf==3.9.0
+    - pycocotools==2.0.2
+    - pycodestyle==2.8.0
+    - tensorboard==2.7.0
+    - tensorboard-data-server==0.6.1
+    - torch==1.9.1+cu111
+    - torchaudio==0.9.1
+    - torchmetrics==0.5.1
+    - torchvision==0.10.1+cu111
+    - wandb==0.12.4
+prefix: /media/indika/Sync/anaconda3/envs/detectron2
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/config.yaml b/V2/wandb/run-20211029_181623-oq3sf9nl/files/config.yaml
new file mode 100644
index 0000000..8493969
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/config.yaml
@@ -0,0 +1,52 @@
+wandb_version: 1
+
+BASE_LR:
+  desc: null
+  value: 0.1
+BATCH_SIZE_PER_IMAGE:
+  desc: null
+  value: 8
+EVAL_PERIOD:
+  desc: null
+  value: 125
+IMS_PER_BATCH:
+  desc: null
+  value: 1
+MAX_ITER:
+  desc: null
+  value: 125
+MODEL:
+  desc: null
+  value: COCO-Detection/fast_rcnn_R_50_FPN_1x.yaml
+NAME:
+  desc: null
+  value: '{''BASE_LR'': 0.1, ''BATCH_SIZE_PER_IMAGE'': 8, ''CREATE_TARGET_AND_PREDS'':
+    55, ''EVAL_PERIOD'': 125, ''IMS_PER_BATCH'': 1, ''LABELS'': [''Card''], ''MAX_ITER'':
+    125, ''MODEL'': ''fast_rcnn_R_50_FPN_1x.yaml'', ''SCORE_THRESH_TEST'': 0.625}'
+SCORE_THRESH_TEST:
+  desc: null
+  value: 0.625
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.4
+    code_path: code/V2/run.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.8.12
+    start_time: 1635511583
+    t:
+      1:
+      - 1
+      - 5
+      2:
+      - 1
+      - 5
+      3:
+      - 13
+      - 16
+      4: 3.8.12
+      5: 0.12.4
+      8:
+      - 5
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/diff.patch b/V2/wandb/run-20211029_181623-oq3sf9nl/files/diff.patch
new file mode 100644
index 0000000..ce8728b
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/diff.patch
@@ -0,0 +1,163 @@
+diff --git a/V2/Model.py b/V2/Model.py
+index b1962da..d464033 100644
+--- a/V2/Model.py
++++ b/V2/Model.py
+@@ -99,12 +99,16 @@ class Model:
+             DatasetCatalog.register(
+                 "data", lambda: self.load_data()
+             )  # Registering the training data
+-            MetadataCatalog.get("data").set(thing_classes=self.labels)  # Adding the labels
++            MetadataCatalog.get("data").set(
++                thing_classes=self.labels
++            )  # Adding the labels
+             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
+             DatasetCatalog.register(
+                 "test", lambda: self.load_data(test=True)
+             )  # Registering the test data
+-            MetadataCatalog.get("test").set(thing_classes=self.labels)  # Adding the labels
++            MetadataCatalog.get("test").set(
++                thing_classes=self.labels
++            )  # Adding the labels
+             self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
+         except:
+             pass
+@@ -638,7 +642,7 @@ class Param_Tunning:
+         ]
+         params_not_in_required_labels = []
+ 
+-        for required_label in tqdm(list(required_labels.keys())):
++        for required_label in tqdm(list(required_labels)):
+             if required_label not in list(params.keys()):
+                 params_not_in_required_labels.append(required_label)
+         if params_not_in_required_labels != []:
+@@ -651,27 +655,24 @@ class Param_Tunning:
+         """
+         models = {"Model": [], "Metrics_COCO": [], "Metrics_File": []}
+         for param in tqdm(self.params):
+-            try:
+-                model = Model(
+-                    base_lr=param["BASE_LR"],
+-                    labels=param["LABELS"],
+-                    max_iter=param["MAX_ITER"],
+-                    eval_period=param["EVAL_PERIOD"],
+-                    ims_per_batch=param["IMS_PER_BATCH"],
+-                    batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
+-                    score_thresh_test=param["SCORE_THRESH_TEST"],
+-                    model=param["MODEL"],
+-                    name=str(param),
+-                    create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
+-                )
+-                metrics = model.train()
+-                metrics_coco = metrics["metrics_coco"]
+-                metrics_file = metrics["metrics_file"]
+-                models["Model"].append(param["MODEL"])
+-                models["Metrics_COCO"].append(metrics_coco)
+-                models["Metrics_File"].append(metrics_file)
+-            except:
+-                pass
++            model = Model(
++                base_lr=param["BASE_LR"],
++                labels=param["LABELS"],
++                max_iter=param["MAX_ITER"],
++                eval_period=param["EVAL_PERIOD"],
++                ims_per_batch=param["IMS_PER_BATCH"],
++                batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
++                score_thresh_test=param["SCORE_THRESH_TEST"],
++                model="COCO-Detection/" + param["MODEL"],
++                name=str(param),
++                create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
++            )
++            metrics = model.train()
++            metrics_coco = metrics["metrics_coco"]
++            metrics_file = metrics["metrics_file"]
++            models["Model"].append(param["MODEL"])
++            models["Metrics_COCO"].append(metrics_coco)
++            models["Metrics_File"].append(metrics_file)
+         models = pd.DataFrame(models)
+         models.to_csv("./tune.csv")
+         return models
+diff --git a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 b/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0
+deleted file mode 100644
+index 0c6fbe6..0000000
+Binary files a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 and /dev/null differ
+diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
+deleted file mode 100644
+index da0e9f9..0000000
+--- a/V2/output/last_checkpoint
++++ /dev/null
+@@ -1 +0,0 @@
+-model_final.pth
+\ No newline at end of file
+diff --git a/V2/output/metrics.json b/V2/output/metrics.json
+deleted file mode 100644
+index cb9e043..0000000
+--- a/V2/output/metrics.json
++++ /dev/null
+@@ -1,13 +0,0 @@
+-{"data_time": 0.0024713455000267004, "eta_seconds": 242.86247767999754, "fast_rcnn/cls_accuracy": 0.3515625, "fast_rcnn/false_negative": 0.3380952380952381, "fast_rcnn/fg_cls_accuracy": 0.6619047619047619, "iteration": 19, "loss_box_reg": 0.41146324574947357, "loss_cls": 0.7392567098140717, "loss_rpn_cls": 0.020119073800742626, "loss_rpn_loc": 0.008557552937418222, "lr": 1.9231e-05, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 1.0559238159999893, "total_loss": 1.199336625635624}
+-{"data_time": 0.0023898784999971667, "eta_seconds": 219.56037505500205, "fast_rcnn/cls_accuracy": 0.869140625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.33894744515419006, "loss_cls": 0.533970057964325, "loss_rpn_cls": 0.021526054479181767, "loss_rpn_loc": 0.0077283557038754225, "lr": 3.9211e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0000388769999802, "total_loss": 0.9420970119535923}
+-{"data_time": 0.002844556500008366, "eta_seconds": 198.64986314500186, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.3618171513080597, "loss_cls": 0.3491041511297226, "loss_rpn_cls": 0.01204870780929923, "loss_rpn_loc": 0.007542710052803159, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 251.0, "rpn/num_pos_anchors": 5.0, "time": 1.0513729945000136, "total_loss": 0.7109228377230465}
+-{"data_time": 0.002351157000020976, "eta_seconds": 179.50704871999818, "fast_rcnn/cls_accuracy": 0.9296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.24807123839855194, "loss_cls": 0.27089114487171173, "loss_rpn_cls": 0.060913536697626114, "loss_rpn_loc": 0.007144225295633078, "lr": 7.9171e-05, "roi_head/num_bg_samples": 119.0, "roi_head/num_fg_samples": 9.0, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.095190236999997, "total_loss": 0.6000422104261816}
+-{"data_time": 0.002303852000011375, "eta_seconds": 158.5481184749952, "fast_rcnn/cls_accuracy": 0.90234375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.37137627601623535, "loss_cls": 0.27069205045700073, "loss_rpn_cls": 0.01833363715559244, "loss_rpn_loc": 0.007090216968208551, "lr": 9.9151e-05, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.056987456499968, "total_loss": 0.7003956531407312}
+-{"data_time": 0.002605340000002343, "eta_seconds": 137.40836934499583, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.3501961678266525, "loss_cls": 0.24755674600601196, "loss_rpn_cls": 0.03569256328046322, "loss_rpn_loc": 0.0065877537708729506, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0775407019999932, "total_loss": 0.6915035428246483}
+-{"data_time": 0.0023761640000259376, "eta_seconds": 116.00193643499779, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.3321911245584488, "loss_cls": 0.27787481248378754, "loss_rpn_cls": 0.03818380646407604, "loss_rpn_loc": 0.006203859578818083, "lr": 0.000139111, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0447581145000129, "total_loss": 0.7225660970434546}
+-{"data_time": 0.002289748000009695, "eta_seconds": 94.91067526499819, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.37014663219451904, "loss_cls": 0.2503085359930992, "loss_rpn_cls": 0.022741314955055714, "loss_rpn_loc": 0.008183888625353575, "lr": 0.000159091, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0550466784999912, "total_loss": 0.6615875260904431}
+-{"data_time": 0.0024869095000212837, "eta_seconds": 73.98912195499776, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.3416535407304764, "loss_cls": 0.20821541547775269, "loss_rpn_cls": 0.012514203786849976, "loss_rpn_loc": 0.007641490548849106, "lr": 0.000179071, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.1015214909999713, "total_loss": 0.5950205000117421}
+-{"data_time": 0.002674328000011883, "eta_seconds": 52.728152924998994, "fast_rcnn/cls_accuracy": 0.923828125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.27223585546016693, "loss_cls": 0.1997024491429329, "loss_rpn_cls": 0.0211806483566761, "loss_rpn_loc": 0.005561774130910635, "lr": 0.000199051, "roi_head/num_bg_samples": 118.25, "roi_head/num_fg_samples": 9.75, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.0192338319999976, "total_loss": 0.4901804425753653}
+-{"data_time": 0.0025132275000032678, "eta_seconds": 31.636891754999397, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.36517906188964844, "loss_cls": 0.23198173195123672, "loss_rpn_cls": 0.014427084941416979, "loss_rpn_loc": 0.006507641403004527, "lr": 0.000219031, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 251.75, "rpn/num_pos_anchors": 4.25, "time": 1.0292666254999858, "total_loss": 0.6094998904736713}
+-{"data_time": 0.002412913000057415, "eta_seconds": 10.586967729999799, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9622507122507122, "fast_rcnn/fg_cls_accuracy": 0.03774928774928775, "iteration": 239, "loss_box_reg": 0.2760148346424103, "loss_cls": 0.19814912229776382, "loss_rpn_cls": 0.014830647502094507, "loss_rpn_loc": 0.009588066954165697, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 117.5, "roi_head/num_fg_samples": 10.5, "rpn/num_neg_anchors": 251.25, "rpn/num_pos_anchors": 4.75, "time": 1.1579277230000002, "total_loss": 0.503135692095384}
+-{"data_time": 0.0026069874999734566, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.931640625, "fast_rcnn/false_negative": 0.9864864864864865, "fast_rcnn/fg_cls_accuracy": 0.013513513513513514, "iteration": 249, "loss_box_reg": 0.25686195492744446, "loss_cls": 0.1974724605679512, "loss_rpn_cls": 0.024123243056237698, "loss_rpn_loc": 0.010637202765792608, "lr": 0.000249001, "roi_head/num_bg_samples": 118.5, "roi_head/num_fg_samples": 9.5, "rpn/num_neg_anchors": 249.25, "rpn/num_pos_anchors": 6.75, "time": 1.1218074584999158, "total_loss": 0.48856362886726856}
+diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
+deleted file mode 100644
+index e69de29..0000000
+diff --git a/V2/run.py b/V2/run.py
+index 6a21847..5e4d213 100644
+--- a/V2/run.py
++++ b/V2/run.py
+@@ -30,8 +30,8 @@ params = {
+     ],
+     "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
+ }
+-model = Model()
+-model.train()
++# model = Model()
++# model.train()
+ pt = Param_Tunning(params)
+ pt.tune()
+ # torch.save(model.train(),'./model.pt')
+diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
+index bdd0614..f8d927a 120000
+--- a/V2/wandb/latest-run
++++ b/V2/wandb/latest-run
+@@ -1 +1 @@
+-run-20211029_175737-18w958uw
+\ No newline at end of file
++run-20211029_181623-oq3sf9nl
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+index 099fa7b..20d3ca0 100644
+--- a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++++ b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+@@ -38,6 +38,10 @@ _wandb:
+       1:
+       - 1
+       - 5
++      2:
++      - 1
++      - 3
++      - 5
+       3:
+       - 13
+       - 16
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+index 9e26dfe..5c28c9c 100644
+--- a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++++ b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+@@ -1 +1 @@
+-{}
+\ No newline at end of file
++{"_wandb": {"runtime": 1020}}
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb
+index 47bdc52..20979e1 100644
+Binary files a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb and b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb differ
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/requirements.txt b/V2/wandb/run-20211029_181623-oq3sf9nl/files/requirements.txt
new file mode 100644
index 0000000..8b695ab
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/requirements.txt
@@ -0,0 +1,289 @@
+absl-py==0.12.0
+aiohttp-cors==0.7.0
+aiohttp==3.7.4.post0
+aioredis==1.3.1
+altair==4.1.0
+aniso8601==9.0.1
+antlr4-python3-runtime==4.8
+anyio==3.3.0
+appdirs==1.4.4
+argcomplete==1.12.3
+argon2-cffi==20.1.0
+astor==0.8.1
+astunparse==1.6.3
+async-timeout==3.0.1
+attrs==21.2.0
+autopep8==1.6.0
+babel==2.9.1
+backcall==0.2.0
+backoff==1.11.1
+backports.functools-lru-cache==1.6.4
+backports.zoneinfo==0.2.1
+base58==2.1.0
+black==21.9b0
+bleach==4.1.0
+blessings==1.7
+blinker==1.4
+boto3==1.18.55
+botocore==1.21.55
+brotlipy==0.7.0
+cachetools==4.2.1
+certifi==2021.5.30
+cffi==1.14.6
+cfgv==3.3.0
+charset-normalizer==2.0.4
+clearml==1.0.4
+click==8.0.1
+cloudpickle==1.6.0
+configparser==5.0.2
+cryptography==3.4.8
+cycler==0.10.0
+cython==0.29.23
+debugpy==1.5.1
+decorator==5.1.0
+defusedxml==0.7.1
+deprecated==1.2.13
+detectron2==0.5+cu111
+dill==0.3.4
+distlib==0.3.2
+distro==1.6.0
+dlib==19.22.0
+dnspython==1.16.0
+docker-pycreds==0.4.0
+entrypoints==0.3
+et-xmlfile==1.1.0
+eventlet==0.32.0
+face-recognition-models==0.3.0
+face-recognition==1.3.0
+fiftyone-brain==0.7.1
+fiftyone-db==0.3.0
+fiftyone==0.13.3
+filelock==3.0.12
+flask-restful==0.3.9
+flask-simple-geoip==0.2.4
+flask==2.0.1
+flatbuffers==1.12
+fonttools==4.25.0
+furl==2.1.2
+future==0.18.2
+fvcore==0.1.5.post20211015
+gast==0.3.3
+gitdb==4.0.7
+gitpython==3.1.14
+glob2==0.7
+google-api-core==1.30.0
+google-auth-oauthlib==0.4.4
+google-auth==1.28.0
+google-pasta==0.2.0
+google-trans-new==1.1.9
+googleapis-common-protos==1.53.0
+gpustat==0.6.0
+greenlet==1.1.2
+grpcio==1.32.0
+gunicorn==20.1.0
+h11==0.12.0
+h5py==2.10.0
+hiredis==2.0.0
+httpcore==0.13.7
+httpx==0.19.0
+humanfriendly==9.2
+hydra-core==1.1.1
+identify==2.2.10
+idna==3.2
+imageio==2.9.0
+importlib-metadata==4.6.4
+importlib-resources==5.1.4
+install==1.3.4
+iopath==0.1.8
+ipaddress==1.0.23
+ipykernel==6.4.1
+ipython-genutils==0.2.0
+ipython==7.28.0
+ipywidgets==7.6.5
+itsdangerous==2.0.1
+jedi==0.18.0
+jinja2==3.0.1
+jmespath==0.10.0
+joblib==1.0.1
+json5==0.9.5
+jsonschema==4.1.0
+jupyter-client==7.0.6
+jupyter-console==6.4.0
+jupyter-core==4.8.1
+jupyter-server==1.8.0
+jupyter==1.0.0
+jupyterlab-server==2.6.0
+jupyterlab-widgets==1.0.2
+jupyterlab==3.0.16
+kaleido==0.2.1
+keras-preprocessing==1.1.2
+keras==2.4.3
+kiwisolver==1.3.1
+livereload==2.6.3
+lxml==4.6.3
+markdown==3.3.4
+markupsafe==2.0.1
+matplotlib-inline==0.1.3
+matplotlib==3.4.3
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+mongoengine==0.20.0
+motor==2.5.1
+msgpack==1.0.2
+multidict==5.1.0
+munkres==1.1.4
+mypy-extensions==0.4.3
+mysql-connector-python==8.0.26
+nbclassic==0.3.1
+nbconvert==5.6.1
+nbformat==5.1.3
+ndjson==0.3.1
+nest-asyncio==1.5.1
+networkx==2.6.3
+nltk==3.6.5
+nodeenv==1.6.0
+notebook==6.4.4
+numpy==1.21.1
+nvidia-ml-py3==7.352.0
+nvidia-ml-py==11.450.51
+nvitop==0.4.4.1
+oauthlib==3.1.1
+olefile==0.46
+omegaconf==2.1.1
+opencensus-context==0.1.2
+opencensus==0.7.13
+opencv-python-headless==4.5.3.56
+opencv-python==4.5.3.56
+openpyxl==3.0.9
+opt-einsum==3.3.0
+orderedmultidict==1.0.1
+packaging==21.0
+pandas==1.3.2
+pandocfilters==1.5.0
+parso==0.8.2
+pathlib2==2.3.5
+pathspec==0.9.0
+pathtools==0.1.2
+patool==1.12
+pexpect==4.8.0
+phonenumbers==8.12.29
+pickleshare==0.7.5
+pillow==8.3.2
+pip==21.3.1
+platformdirs==2.3.0
+plotly==5.2.1
+pluggy==0.13.1
+portalocker==2.3.0
+pprintpp==0.4.0
+pre-commit==2.13.0
+prometheus-client==0.11.0
+promise==2.3
+prompt-toolkit==3.0.20
+protobuf==3.9.0
+psutil==5.8.0
+ptyprocess==0.7.0
+py-spy==0.3.7
+py==1.10.0
+pyarrow==5.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycocotools==2.0.2
+pycodestyle==2.8.0
+pycparser==2.20
+pydantic==1.8.2
+pydeck==0.7.0
+pydot==1.4.2
+pygments==2.10.0
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pyrsistent==0.17.3
+pysocks==1.7.1
+python-dateutil==2.8.2
+pytz==2021.1
+pywavelets==1.1.1
+pyyaml==5.1
+pyzmq==19.0.2
+qtconsole==5.1.1
+qtpy==1.11.2
+ray==1.4.1
+redis==3.5.3
+regex==2021.8.3
+requests-oauthlib==1.3.0
+requests==2.26.0
+retrying==1.3.3
+rfc3986==1.5.0
+rsa==4.7.2
+s3transfer==0.5.0
+scikit-image==0.18.3
+scikit-learn==0.24.1
+scipy==1.6.2
+seaborn==0.11.1
+send2trash==1.8.0
+sentry-sdk==1.0.0
+setuptools==58.0.4
+shortuuid==1.0.1
+simple-geoip==0.1.1
+sip==4.19.13
+six==1.16.0
+sklearn==0.0
+smmap==4.0.0
+sniffio==1.2.0
+sortedcontainers==2.4.0
+streamlit==0.88.0
+stripe==2.60.0
+subprocess32==3.5.4
+tabulate==0.8.9
+tenacity==8.0.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.0
+tensorboard==2.7.0
+tensorboardx==2.4
+tensorflow-estimator==2.4.0
+tensorflow-hub==0.11.0
+tensorflow==2.4.1
+tensorrt==0.0.1
+termcolor==1.1.0
+terminado==0.12.1
+testpath==0.5.0
+threadpoolctl==2.1.0
+tifffile==2021.8.30
+toml==0.10.2
+tomli==1.2.1
+toolz==0.11.1
+torch-tb-profiler==0.2.0
+torch==1.9.1+cu111
+torchaudio==0.9.1
+torchmetrics==0.5.1
+torchvision==0.10.1+cu111
+tornado==6.1
+tox==3.23.1
+tqdm==4.62.0
+traitlets==5.1.0
+translate==3.5.0
+twilio==6.63.0
+typed-ast==1.4.3
+typing-extensions==3.10.0.0
+tzlocal==3.0
+universal-analytics-python3==1.1.1
+urllib3==1.26.6
+validators==0.18.2
+virtualenv==20.4.7
+voxel51-eta==0.5.3
+wandb==0.12.4
+watchdog==2.1.5
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==1.0.1
+werkzeug==2.0.1
+wheel==0.36.2
+widgetsnbextension==3.5.1
+wrapt==1.12.1
+xeus-python-shell==0.1.7
+xeus-python==0.13.5
+xmltodict==0.12.0
+yacs==0.1.8
+yarl==1.6.3
+yaspin==2.1.0
+zipp==3.5.0
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-metadata.json b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-metadata.json
new file mode 100644
index 0000000..1e8d4dd
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-metadata.json
@@ -0,0 +1,24 @@
+{
+    "os": "Linux-5.11.0-38-generic-x86_64-with-glibc2.17",
+    "python": "3.8.12",
+    "heartbeatAt": "2021-10-29T12:46:26.149725",
+    "startedAt": "2021-10-29T12:46:23.006528",
+    "docker": null,
+    "gpu": "GeForce RTX 3060",
+    "gpu_count": 1,
+    "cpu_count": 6,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "run.py",
+    "codePath": "V2/run.py",
+    "git": {
+        "remote": "https://github.com/Programmer-RD-AI/Find-Card.git",
+        "commit": "56410c130efe6236befb27ac2a6811b91a9e4e81"
+    },
+    "email": "aigithub@gmail.com",
+    "root": "/media/indika/Sync/Programming/Projects/Python/Rest-Api/Car-Object-Detection-REST-API/Find-Card",
+    "host": "programmer-rd-ai",
+    "username": "indika",
+    "executable": "/media/indika/Sync/anaconda3/envs/detectron2/bin/python3"
+}
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-summary.json b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-summary.json
new file mode 100644
index 0000000..9fd7927
--- /dev/null
+++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-summary.json
@@ -0,0 +1 @@
+{"_wandb": {"runtime": 131}}
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/run-oq3sf9nl.wandb b/V2/wandb/run-20211029_181623-oq3sf9nl/run-oq3sf9nl.wandb
new file mode 100644
index 0000000..9c0eff4
Binary files /dev/null and b/V2/wandb/run-20211029_181623-oq3sf9nl/run-oq3sf9nl.wandb differ
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/code/V2/run.py b/V2/wandb/run-20211029_182019-19fkojne/files/code/V2/run.py
new file mode 100644
index 0000000..c2e72d7
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/code/V2/run.py
@@ -0,0 +1,38 @@
+from Model import *
+
+params = {
+    "MODEL": [
+        "fast_rcnn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_C4_1x.yaml",
+        # "faster_rcnn_R_50_C4_3x.yaml",
+        # "faster_rcnn_R_50_DC5_1x.yaml",
+        # "faster_rcnn_R_50_DC5_3x.yaml",
+        # "retinanet_R_50_FPN_1x.py",
+        # "retinanet_R_50_FPN_1x.yaml",
+        # "retinanet_R_50_FPN_3x.yaml",
+        # "rpn_R_50_C4_1x.yaml",
+        # "rpn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_FPN_3x.yaml",
+        # "faster_rcnn_R_101_DC5_3x.yaml",
+        # "faster_rcnn_R_101_FPN_3x.yaml",
+        # "faster_rcnn_X_101_32x8d_FPN_3x.yaml",
+    ],
+    "MAX_ITER": [125],
+    "LABELS": [["Card"]],
+    "CREATE_TARGET_AND_PREDS": [55],
+    "EVAL_PERIOD": [125],
+    "SCORE_THRESH_TEST": [0.625],
+    "BASE_LR": [0.1, 0.01, 0.001, 0.0001],
+    "IMS_PER_BATCH": [
+        1,
+        2,
+    ],
+    "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
+}
+model = Model()
+model.train()
+# pt = Param_Tunning(params)
+# pt.tune()
+# torch.save(model.train(),'./model.pt')
+# torch.save(model.train(),'./model.pth')
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/conda-environment.yaml b/V2/wandb/run-20211029_182019-19fkojne/files/conda-environment.yaml
new file mode 100644
index 0000000..689f3ef
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/conda-environment.yaml
@@ -0,0 +1,170 @@
+name: detectron2
+channels:
+  - nvidia
+  - conda-forge
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=4.5=1_gnu
+  - appdirs=1.4.4=pyhd3eb1b0_0
+  - argon2-cffi=20.1.0=py38h27cfd23_1
+  - attrs=21.2.0=pyhd3eb1b0_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - backports=1.0=py_2
+  - backports.functools_lru_cache=1.6.4=pyhd8ed1ab_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd8ed1ab_0
+  - blinker=1.4=py38h06a4308_0
+  - brotli=1.0.9=he6710b0_2
+  - brotlipy=0.7.0=py38h27cfd23_1003
+  - ca-certificates=2021.9.30=h06a4308_1
+  - certifi=2021.10.8=py38h06a4308_0
+  - cffi=1.14.6=py38h400218f_0
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - click=8.0.1=pyhd3eb1b0_0
+  - cryptography=3.4.8=py38hd23ed53_0
+  - cudatoolkit=11.1.74=h6bb024c_0
+  - cycler=0.10.0=py38_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.4.1=py38h709712a_0
+  - decorator=5.1.0=pyhd8ed1ab_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - entrypoints=0.3=pyhd8ed1ab_1003
+  - expat=2.4.1=h2531618_2
+  - fontconfig=2.13.1=h6c09931_0
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.10.4=h5ab3b9f_0
+  - future=0.18.2=py38_1
+  - glib=2.69.1=h5202010_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.2=pyhd3eb1b0_0
+  - importlib-metadata=4.8.1=py38h578d9bd_0
+  - intel-openmp=2021.3.0=h06a4308_3350
+  - ipykernel=6.4.1=py38he5a9106_0
+  - ipython=7.28.0=py38he5a9106_0
+  - ipython_genutils=0.2.0=py_1
+  - ipywidgets=7.6.5=pyhd8ed1ab_0
+  - jedi=0.18.0=py38h578d9bd_2
+  - jinja2=3.0.1=pyhd3eb1b0_0
+  - jpeg=9d=h7f8727e_0
+  - jsonschema=4.1.0=pyhd8ed1ab_0
+  - jupyter=1.0.0=py38h578d9bd_6
+  - jupyter_client=7.0.6=pyhd8ed1ab_0
+  - jupyter_console=6.4.0=pyhd8ed1ab_0
+  - jupyter_core=4.8.1=py38h578d9bd_0
+  - jupyterlab_widgets=1.0.2=pyhd8ed1ab_0
+  - kiwisolver=1.3.1=py38h2531618_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.35.1=h7274673_9
+  - libffi=3.3=he6710b0_2
+  - libgcc-ng=9.3.0=h5101ec6_17
+  - libgomp=9.3.0=h5101ec6_17
+  - libpng=1.6.37=hbc83047_0
+  - libprotobuf=3.17.2=h4ff587b_1
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx-ng=9.3.0=hd4cf53a_17
+  - libtiff=4.2.0=h85742a9_0
+  - libuuid=1.0.3=h7f8727e_2
+  - libuv=1.40.0=h7b6447c_0
+  - libwebp-base=1.2.0=h27cfd23_0
+  - libxcb=1.14=h7b6447c_0
+  - libxml2=2.9.12=h03d6c58_0
+  - lz4-c=1.9.3=h295c915_1
+  - markupsafe=2.0.1=py38h27cfd23_0
+  - matplotlib=3.4.2=py38h06a4308_0
+  - matplotlib-base=3.4.2=py38hab158f2_0
+  - matplotlib-inline=0.1.3=pyhd8ed1ab_0
+  - mistune=0.8.4=py38h497a2fe_1004
+  - mkl=2021.3.0=h06a4308_520
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - munkres=1.1.4=py_0
+  - mypy_extensions=0.4.3=py38_0
+  - nbconvert=5.6.1=pyhd8ed1ab_2
+  - nbformat=5.1.3=pyhd8ed1ab_0
+  - ncurses=6.2=he6710b0_1
+  - nest-asyncio=1.5.1=pyhd8ed1ab_0
+  - ninja=1.10.2=hff7bd54_1
+  - notebook=6.4.4=pyha770c72_0
+  - numpy=1.21.2=py38h20f2e39_0
+  - numpy-base=1.21.2=py38h79a1101_0
+  - olefile=0.46=pyhd3eb1b0_0
+  - openjpeg=2.4.0=h3ad879b_0
+  - openssl=1.1.1l=h7f8727e_0
+  - packaging=21.0=pyhd3eb1b0_0
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.2=pyhd8ed1ab_0
+  - pathspec=0.7.0=py_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyh9f0ad1d_2
+  - pickleshare=0.7.5=py_1003
+  - prometheus_client=0.11.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.20=pyha770c72_0
+  - prompt_toolkit=3.0.20=hd8ed1ab_0
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pycparser=2.20=py_2
+  - pygments=2.10.0=pyhd8ed1ab_0
+  - pyopenssl=20.0.1=pyhd3eb1b0_1
+  - pyparsing=2.4.7=pyhd3eb1b0_0
+  - pyqt=5.9.2=py38h05f1152_4
+  - pyrsistent=0.17.3=py38h497a2fe_2
+  - pysocks=1.7.1=py38h06a4308_0
+  - python=3.8.12=h12debd9_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python_abi=3.8=2_cp38
+  - pytz=2021.3=pyhd3eb1b0_0
+  - pyzmq=19.0.2=py38ha71036d_2
+  - qt=5.9.7=h5867ecd_1
+  - qtconsole=5.1.1=pyhd8ed1ab_0
+  - qtpy=1.11.2=pyhd8ed1ab_0
+  - readline=8.1=h27cfd23_0
+  - regex=2021.8.3=py38h7f8727e_0
+  - requests=2.26.0=pyhd3eb1b0_0
+  - send2trash=1.8.0=pyhd8ed1ab_0
+  - setuptools=58.0.4=py38h06a4308_0
+  - sip=4.19.13=py38he6710b0_0
+  - six=1.16.0=pyhd3eb1b0_0
+  - sqlite=3.36.0=hc218d9a_0
+  - terminado=0.12.1=py38h578d9bd_0
+  - testpath=0.5.0=pyhd8ed1ab_0
+  - tk=8.6.11=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tornado=6.1=py38h27cfd23_0
+  - traitlets=5.1.0=pyhd8ed1ab_0
+  - typed-ast=1.4.3=py38h7f8727e_1
+  - typing_extensions=3.10.0.2=pyh06a4308_0
+  - urllib3=1.26.7=pyhd3eb1b0_0
+  - wcwidth=0.2.5=pyh9f0ad1d_2
+  - webencodings=0.5.1=py_1
+  - wheel=0.37.0=pyhd3eb1b0_1
+  - widgetsnbextension=3.5.1=py38h578d9bd_4
+  - xz=5.2.5=h7b6447c_0
+  - zeromq=4.3.4=h9c3ff4c_0
+  - zipp=3.6.0=pyhd8ed1ab_0
+  - zlib=1.2.11=h7b6447c_3
+  - zstd=1.4.9=haebb681_0
+  - pip:
+    - autopep8==1.6.0
+    - black==21.9b0
+    - detectron2==0.5+cu111
+    - fvcore==0.1.5.post20211015
+    - hydra-core==1.1.1
+    - oauthlib==3.1.1
+    - omegaconf==2.1.1
+    - opencv-python==4.5.3.56
+    - pillow==8.4.0
+    - pip==21.3.1
+    - protobuf==3.9.0
+    - pycocotools==2.0.2
+    - pycodestyle==2.8.0
+    - tensorboard==2.7.0
+    - tensorboard-data-server==0.6.1
+    - torch==1.6.0
+    - torchaudio==0.9.1
+    - torchmetrics==0.5.1
+    - torchvision==0.10.1+cu111
+    - wandb==0.12.4
+prefix: /media/indika/Sync/anaconda3/envs/detectron2
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
new file mode 100644
index 0000000..4b29dc9
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
@@ -0,0 +1,51 @@
+wandb_version: 1
+
+BASE_LR:
+  desc: null
+  value: 0.00025
+BATCH_SIZE_PER_IMAGE:
+  desc: null
+  value: 128
+EVAL_PERIOD:
+  desc: null
+  value: 250
+IMS_PER_BATCH:
+  desc: null
+  value: 2
+MAX_ITER:
+  desc: null
+  value: 250
+MODEL:
+  desc: null
+  value: COCO-Detection/faster_rcnn_X_101_32x8d_FPN_3x.yaml
+NAME:
+  desc: null
+  value: baseline
+SCORE_THRESH_TEST:
+  desc: null
+  value: 0.625
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.4
+    code_path: code/V2/run.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.8.12
+    start_time: 1635511819
+    t:
+      1:
+      - 1
+      - 5
+      2:
+      - 1
+      - 3
+      - 5
+      3:
+      - 13
+      - 16
+      4: 3.8.12
+      5: 0.12.4
+      8:
+      - 5
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/diff.patch b/V2/wandb/run-20211029_182019-19fkojne/files/diff.patch
new file mode 100644
index 0000000..d2da9f0
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/diff.patch
@@ -0,0 +1,136 @@
+diff --git a/V2/Model.py b/V2/Model.py
+index b1962da..b8e14a5 100644
+--- a/V2/Model.py
++++ b/V2/Model.py
+@@ -99,12 +99,16 @@ class Model:
+             DatasetCatalog.register(
+                 "data", lambda: self.load_data()
+             )  # Registering the training data
+-            MetadataCatalog.get("data").set(thing_classes=self.labels)  # Adding the labels
++            MetadataCatalog.get("data").set(
++                thing_classes=self.labels
++            )  # Adding the labels
+             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
+             DatasetCatalog.register(
+                 "test", lambda: self.load_data(test=True)
+             )  # Registering the test data
+-            MetadataCatalog.get("test").set(thing_classes=self.labels)  # Adding the labels
++            MetadataCatalog.get("test").set(
++                thing_classes=self.labels
++            )  # Adding the labels
+             self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
+         except:
+             pass
+@@ -638,7 +642,7 @@ class Param_Tunning:
+         ]
+         params_not_in_required_labels = []
+ 
+-        for required_label in tqdm(list(required_labels.keys())):
++        for required_label in tqdm(list(required_labels)):
+             if required_label not in list(params.keys()):
+                 params_not_in_required_labels.append(required_label)
+         if params_not_in_required_labels != []:
+@@ -660,7 +664,7 @@ class Param_Tunning:
+                     ims_per_batch=param["IMS_PER_BATCH"],
+                     batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
+                     score_thresh_test=param["SCORE_THRESH_TEST"],
+-                    model=param["MODEL"],
++                    model="COCO-Detection/" + param["MODEL"],
+                     name=str(param),
+                     create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
+                 )
+@@ -670,8 +674,8 @@ class Param_Tunning:
+                 models["Model"].append(param["MODEL"])
+                 models["Metrics_COCO"].append(metrics_coco)
+                 models["Metrics_File"].append(metrics_file)
+-            except:
+-                pass
++            except Exception as e:
++                print(e)
+         models = pd.DataFrame(models)
+         models.to_csv("./tune.csv")
+         return models
+diff --git a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 b/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0
+deleted file mode 100644
+index 0c6fbe6..0000000
+Binary files a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 and /dev/null differ
+diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
+deleted file mode 100644
+index da0e9f9..0000000
+--- a/V2/output/last_checkpoint
++++ /dev/null
+@@ -1 +0,0 @@
+-model_final.pth
+\ No newline at end of file
+diff --git a/V2/output/metrics.json b/V2/output/metrics.json
+deleted file mode 100644
+index cb9e043..0000000
+--- a/V2/output/metrics.json
++++ /dev/null
+@@ -1,13 +0,0 @@
+-{"data_time": 0.0024713455000267004, "eta_seconds": 242.86247767999754, "fast_rcnn/cls_accuracy": 0.3515625, "fast_rcnn/false_negative": 0.3380952380952381, "fast_rcnn/fg_cls_accuracy": 0.6619047619047619, "iteration": 19, "loss_box_reg": 0.41146324574947357, "loss_cls": 0.7392567098140717, "loss_rpn_cls": 0.020119073800742626, "loss_rpn_loc": 0.008557552937418222, "lr": 1.9231e-05, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 1.0559238159999893, "total_loss": 1.199336625635624}
+-{"data_time": 0.0023898784999971667, "eta_seconds": 219.56037505500205, "fast_rcnn/cls_accuracy": 0.869140625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.33894744515419006, "loss_cls": 0.533970057964325, "loss_rpn_cls": 0.021526054479181767, "loss_rpn_loc": 0.0077283557038754225, "lr": 3.9211e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0000388769999802, "total_loss": 0.9420970119535923}
+-{"data_time": 0.002844556500008366, "eta_seconds": 198.64986314500186, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.3618171513080597, "loss_cls": 0.3491041511297226, "loss_rpn_cls": 0.01204870780929923, "loss_rpn_loc": 0.007542710052803159, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 251.0, "rpn/num_pos_anchors": 5.0, "time": 1.0513729945000136, "total_loss": 0.7109228377230465}
+-{"data_time": 0.002351157000020976, "eta_seconds": 179.50704871999818, "fast_rcnn/cls_accuracy": 0.9296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.24807123839855194, "loss_cls": 0.27089114487171173, "loss_rpn_cls": 0.060913536697626114, "loss_rpn_loc": 0.007144225295633078, "lr": 7.9171e-05, "roi_head/num_bg_samples": 119.0, "roi_head/num_fg_samples": 9.0, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.095190236999997, "total_loss": 0.6000422104261816}
+-{"data_time": 0.002303852000011375, "eta_seconds": 158.5481184749952, "fast_rcnn/cls_accuracy": 0.90234375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.37137627601623535, "loss_cls": 0.27069205045700073, "loss_rpn_cls": 0.01833363715559244, "loss_rpn_loc": 0.007090216968208551, "lr": 9.9151e-05, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.056987456499968, "total_loss": 0.7003956531407312}
+-{"data_time": 0.002605340000002343, "eta_seconds": 137.40836934499583, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.3501961678266525, "loss_cls": 0.24755674600601196, "loss_rpn_cls": 0.03569256328046322, "loss_rpn_loc": 0.0065877537708729506, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0775407019999932, "total_loss": 0.6915035428246483}
+-{"data_time": 0.0023761640000259376, "eta_seconds": 116.00193643499779, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.3321911245584488, "loss_cls": 0.27787481248378754, "loss_rpn_cls": 0.03818380646407604, "loss_rpn_loc": 0.006203859578818083, "lr": 0.000139111, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0447581145000129, "total_loss": 0.7225660970434546}
+-{"data_time": 0.002289748000009695, "eta_seconds": 94.91067526499819, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.37014663219451904, "loss_cls": 0.2503085359930992, "loss_rpn_cls": 0.022741314955055714, "loss_rpn_loc": 0.008183888625353575, "lr": 0.000159091, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0550466784999912, "total_loss": 0.6615875260904431}
+-{"data_time": 0.0024869095000212837, "eta_seconds": 73.98912195499776, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.3416535407304764, "loss_cls": 0.20821541547775269, "loss_rpn_cls": 0.012514203786849976, "loss_rpn_loc": 0.007641490548849106, "lr": 0.000179071, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.1015214909999713, "total_loss": 0.5950205000117421}
+-{"data_time": 0.002674328000011883, "eta_seconds": 52.728152924998994, "fast_rcnn/cls_accuracy": 0.923828125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.27223585546016693, "loss_cls": 0.1997024491429329, "loss_rpn_cls": 0.0211806483566761, "loss_rpn_loc": 0.005561774130910635, "lr": 0.000199051, "roi_head/num_bg_samples": 118.25, "roi_head/num_fg_samples": 9.75, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.0192338319999976, "total_loss": 0.4901804425753653}
+-{"data_time": 0.0025132275000032678, "eta_seconds": 31.636891754999397, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.36517906188964844, "loss_cls": 0.23198173195123672, "loss_rpn_cls": 0.014427084941416979, "loss_rpn_loc": 0.006507641403004527, "lr": 0.000219031, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 251.75, "rpn/num_pos_anchors": 4.25, "time": 1.0292666254999858, "total_loss": 0.6094998904736713}
+-{"data_time": 0.002412913000057415, "eta_seconds": 10.586967729999799, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9622507122507122, "fast_rcnn/fg_cls_accuracy": 0.03774928774928775, "iteration": 239, "loss_box_reg": 0.2760148346424103, "loss_cls": 0.19814912229776382, "loss_rpn_cls": 0.014830647502094507, "loss_rpn_loc": 0.009588066954165697, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 117.5, "roi_head/num_fg_samples": 10.5, "rpn/num_neg_anchors": 251.25, "rpn/num_pos_anchors": 4.75, "time": 1.1579277230000002, "total_loss": 0.503135692095384}
+-{"data_time": 0.0026069874999734566, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.931640625, "fast_rcnn/false_negative": 0.9864864864864865, "fast_rcnn/fg_cls_accuracy": 0.013513513513513514, "iteration": 249, "loss_box_reg": 0.25686195492744446, "loss_cls": 0.1974724605679512, "loss_rpn_cls": 0.024123243056237698, "loss_rpn_loc": 0.010637202765792608, "lr": 0.000249001, "roi_head/num_bg_samples": 118.5, "roi_head/num_fg_samples": 9.5, "rpn/num_neg_anchors": 249.25, "rpn/num_pos_anchors": 6.75, "time": 1.1218074584999158, "total_loss": 0.48856362886726856}
+diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
+deleted file mode 100644
+index e69de29..0000000
+diff --git a/V2/run.py b/V2/run.py
+index 6a21847..c2e72d7 100644
+--- a/V2/run.py
++++ b/V2/run.py
+@@ -32,7 +32,7 @@ params = {
+ }
+ model = Model()
+ model.train()
+-pt = Param_Tunning(params)
+-pt.tune()
++# pt = Param_Tunning(params)
++# pt.tune()
+ # torch.save(model.train(),'./model.pt')
+ # torch.save(model.train(),'./model.pth')
+diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
+index bdd0614..904760c 120000
+--- a/V2/wandb/latest-run
++++ b/V2/wandb/latest-run
+@@ -1 +1 @@
+-run-20211029_175737-18w958uw
+\ No newline at end of file
++run-20211029_182019-19fkojne
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+index 099fa7b..20d3ca0 100644
+--- a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++++ b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+@@ -38,6 +38,10 @@ _wandb:
+       1:
+       - 1
+       - 5
++      2:
++      - 1
++      - 3
++      - 5
+       3:
+       - 13
+       - 16
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+index 9e26dfe..5c28c9c 100644
+--- a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++++ b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+@@ -1 +1 @@
+-{}
+\ No newline at end of file
++{"_wandb": {"runtime": 1020}}
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb
+index 47bdc52..20979e1 100644
+Binary files a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb and b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb differ
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/requirements.txt b/V2/wandb/run-20211029_182019-19fkojne/files/requirements.txt
new file mode 100644
index 0000000..8b695ab
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/requirements.txt
@@ -0,0 +1,289 @@
+absl-py==0.12.0
+aiohttp-cors==0.7.0
+aiohttp==3.7.4.post0
+aioredis==1.3.1
+altair==4.1.0
+aniso8601==9.0.1
+antlr4-python3-runtime==4.8
+anyio==3.3.0
+appdirs==1.4.4
+argcomplete==1.12.3
+argon2-cffi==20.1.0
+astor==0.8.1
+astunparse==1.6.3
+async-timeout==3.0.1
+attrs==21.2.0
+autopep8==1.6.0
+babel==2.9.1
+backcall==0.2.0
+backoff==1.11.1
+backports.functools-lru-cache==1.6.4
+backports.zoneinfo==0.2.1
+base58==2.1.0
+black==21.9b0
+bleach==4.1.0
+blessings==1.7
+blinker==1.4
+boto3==1.18.55
+botocore==1.21.55
+brotlipy==0.7.0
+cachetools==4.2.1
+certifi==2021.5.30
+cffi==1.14.6
+cfgv==3.3.0
+charset-normalizer==2.0.4
+clearml==1.0.4
+click==8.0.1
+cloudpickle==1.6.0
+configparser==5.0.2
+cryptography==3.4.8
+cycler==0.10.0
+cython==0.29.23
+debugpy==1.5.1
+decorator==5.1.0
+defusedxml==0.7.1
+deprecated==1.2.13
+detectron2==0.5+cu111
+dill==0.3.4
+distlib==0.3.2
+distro==1.6.0
+dlib==19.22.0
+dnspython==1.16.0
+docker-pycreds==0.4.0
+entrypoints==0.3
+et-xmlfile==1.1.0
+eventlet==0.32.0
+face-recognition-models==0.3.0
+face-recognition==1.3.0
+fiftyone-brain==0.7.1
+fiftyone-db==0.3.0
+fiftyone==0.13.3
+filelock==3.0.12
+flask-restful==0.3.9
+flask-simple-geoip==0.2.4
+flask==2.0.1
+flatbuffers==1.12
+fonttools==4.25.0
+furl==2.1.2
+future==0.18.2
+fvcore==0.1.5.post20211015
+gast==0.3.3
+gitdb==4.0.7
+gitpython==3.1.14
+glob2==0.7
+google-api-core==1.30.0
+google-auth-oauthlib==0.4.4
+google-auth==1.28.0
+google-pasta==0.2.0
+google-trans-new==1.1.9
+googleapis-common-protos==1.53.0
+gpustat==0.6.0
+greenlet==1.1.2
+grpcio==1.32.0
+gunicorn==20.1.0
+h11==0.12.0
+h5py==2.10.0
+hiredis==2.0.0
+httpcore==0.13.7
+httpx==0.19.0
+humanfriendly==9.2
+hydra-core==1.1.1
+identify==2.2.10
+idna==3.2
+imageio==2.9.0
+importlib-metadata==4.6.4
+importlib-resources==5.1.4
+install==1.3.4
+iopath==0.1.8
+ipaddress==1.0.23
+ipykernel==6.4.1
+ipython-genutils==0.2.0
+ipython==7.28.0
+ipywidgets==7.6.5
+itsdangerous==2.0.1
+jedi==0.18.0
+jinja2==3.0.1
+jmespath==0.10.0
+joblib==1.0.1
+json5==0.9.5
+jsonschema==4.1.0
+jupyter-client==7.0.6
+jupyter-console==6.4.0
+jupyter-core==4.8.1
+jupyter-server==1.8.0
+jupyter==1.0.0
+jupyterlab-server==2.6.0
+jupyterlab-widgets==1.0.2
+jupyterlab==3.0.16
+kaleido==0.2.1
+keras-preprocessing==1.1.2
+keras==2.4.3
+kiwisolver==1.3.1
+livereload==2.6.3
+lxml==4.6.3
+markdown==3.3.4
+markupsafe==2.0.1
+matplotlib-inline==0.1.3
+matplotlib==3.4.3
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+mongoengine==0.20.0
+motor==2.5.1
+msgpack==1.0.2
+multidict==5.1.0
+munkres==1.1.4
+mypy-extensions==0.4.3
+mysql-connector-python==8.0.26
+nbclassic==0.3.1
+nbconvert==5.6.1
+nbformat==5.1.3
+ndjson==0.3.1
+nest-asyncio==1.5.1
+networkx==2.6.3
+nltk==3.6.5
+nodeenv==1.6.0
+notebook==6.4.4
+numpy==1.21.1
+nvidia-ml-py3==7.352.0
+nvidia-ml-py==11.450.51
+nvitop==0.4.4.1
+oauthlib==3.1.1
+olefile==0.46
+omegaconf==2.1.1
+opencensus-context==0.1.2
+opencensus==0.7.13
+opencv-python-headless==4.5.3.56
+opencv-python==4.5.3.56
+openpyxl==3.0.9
+opt-einsum==3.3.0
+orderedmultidict==1.0.1
+packaging==21.0
+pandas==1.3.2
+pandocfilters==1.5.0
+parso==0.8.2
+pathlib2==2.3.5
+pathspec==0.9.0
+pathtools==0.1.2
+patool==1.12
+pexpect==4.8.0
+phonenumbers==8.12.29
+pickleshare==0.7.5
+pillow==8.3.2
+pip==21.3.1
+platformdirs==2.3.0
+plotly==5.2.1
+pluggy==0.13.1
+portalocker==2.3.0
+pprintpp==0.4.0
+pre-commit==2.13.0
+prometheus-client==0.11.0
+promise==2.3
+prompt-toolkit==3.0.20
+protobuf==3.9.0
+psutil==5.8.0
+ptyprocess==0.7.0
+py-spy==0.3.7
+py==1.10.0
+pyarrow==5.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycocotools==2.0.2
+pycodestyle==2.8.0
+pycparser==2.20
+pydantic==1.8.2
+pydeck==0.7.0
+pydot==1.4.2
+pygments==2.10.0
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pyrsistent==0.17.3
+pysocks==1.7.1
+python-dateutil==2.8.2
+pytz==2021.1
+pywavelets==1.1.1
+pyyaml==5.1
+pyzmq==19.0.2
+qtconsole==5.1.1
+qtpy==1.11.2
+ray==1.4.1
+redis==3.5.3
+regex==2021.8.3
+requests-oauthlib==1.3.0
+requests==2.26.0
+retrying==1.3.3
+rfc3986==1.5.0
+rsa==4.7.2
+s3transfer==0.5.0
+scikit-image==0.18.3
+scikit-learn==0.24.1
+scipy==1.6.2
+seaborn==0.11.1
+send2trash==1.8.0
+sentry-sdk==1.0.0
+setuptools==58.0.4
+shortuuid==1.0.1
+simple-geoip==0.1.1
+sip==4.19.13
+six==1.16.0
+sklearn==0.0
+smmap==4.0.0
+sniffio==1.2.0
+sortedcontainers==2.4.0
+streamlit==0.88.0
+stripe==2.60.0
+subprocess32==3.5.4
+tabulate==0.8.9
+tenacity==8.0.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.0
+tensorboard==2.7.0
+tensorboardx==2.4
+tensorflow-estimator==2.4.0
+tensorflow-hub==0.11.0
+tensorflow==2.4.1
+tensorrt==0.0.1
+termcolor==1.1.0
+terminado==0.12.1
+testpath==0.5.0
+threadpoolctl==2.1.0
+tifffile==2021.8.30
+toml==0.10.2
+tomli==1.2.1
+toolz==0.11.1
+torch-tb-profiler==0.2.0
+torch==1.9.1+cu111
+torchaudio==0.9.1
+torchmetrics==0.5.1
+torchvision==0.10.1+cu111
+tornado==6.1
+tox==3.23.1
+tqdm==4.62.0
+traitlets==5.1.0
+translate==3.5.0
+twilio==6.63.0
+typed-ast==1.4.3
+typing-extensions==3.10.0.0
+tzlocal==3.0
+universal-analytics-python3==1.1.1
+urllib3==1.26.6
+validators==0.18.2
+virtualenv==20.4.7
+voxel51-eta==0.5.3
+wandb==0.12.4
+watchdog==2.1.5
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==1.0.1
+werkzeug==2.0.1
+wheel==0.36.2
+widgetsnbextension==3.5.1
+wrapt==1.12.1
+xeus-python-shell==0.1.7
+xeus-python==0.13.5
+xmltodict==0.12.0
+yacs==0.1.8
+yarl==1.6.3
+yaspin==2.1.0
+zipp==3.5.0
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-metadata.json b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-metadata.json
new file mode 100644
index 0000000..543c2ad
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-metadata.json
@@ -0,0 +1,24 @@
+{
+    "os": "Linux-5.11.0-38-generic-x86_64-with-glibc2.17",
+    "python": "3.8.12",
+    "heartbeatAt": "2021-10-29T12:50:21.812072",
+    "startedAt": "2021-10-29T12:50:19.016745",
+    "docker": null,
+    "gpu": "GeForce RTX 3060",
+    "gpu_count": 1,
+    "cpu_count": 6,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "run.py",
+    "codePath": "V2/run.py",
+    "git": {
+        "remote": "https://github.com/Programmer-RD-AI/Find-Card.git",
+        "commit": "56410c130efe6236befb27ac2a6811b91a9e4e81"
+    },
+    "email": "aigithub@gmail.com",
+    "root": "/media/indika/Sync/Programming/Projects/Python/Rest-Api/Car-Object-Detection-REST-API/Find-Card",
+    "host": "programmer-rd-ai",
+    "username": "indika",
+    "executable": "/media/indika/Sync/anaconda3/envs/detectron2/bin/python3"
+}
diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
new file mode 100644
index 0000000..b3d6dff
--- /dev/null
+++ b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
@@ -0,0 +1 @@
+{"_wandb": {"runtime": 953}}
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb
new file mode 100644
index 0000000..9cd3a2f
Binary files /dev/null and b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb differ
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/code/V2/run.py b/V2/wandb/run-20211029_184311-k0amje1g/files/code/V2/run.py
new file mode 100644
index 0000000..6a21847
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/code/V2/run.py
@@ -0,0 +1,38 @@
+from Model import *
+
+params = {
+    "MODEL": [
+        "fast_rcnn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_C4_1x.yaml",
+        # "faster_rcnn_R_50_C4_3x.yaml",
+        # "faster_rcnn_R_50_DC5_1x.yaml",
+        # "faster_rcnn_R_50_DC5_3x.yaml",
+        # "retinanet_R_50_FPN_1x.py",
+        # "retinanet_R_50_FPN_1x.yaml",
+        # "retinanet_R_50_FPN_3x.yaml",
+        # "rpn_R_50_C4_1x.yaml",
+        # "rpn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_FPN_1x.yaml",
+        # "faster_rcnn_R_50_FPN_3x.yaml",
+        # "faster_rcnn_R_101_DC5_3x.yaml",
+        # "faster_rcnn_R_101_FPN_3x.yaml",
+        # "faster_rcnn_X_101_32x8d_FPN_3x.yaml",
+    ],
+    "MAX_ITER": [125],
+    "LABELS": [["Card"]],
+    "CREATE_TARGET_AND_PREDS": [55],
+    "EVAL_PERIOD": [125],
+    "SCORE_THRESH_TEST": [0.625],
+    "BASE_LR": [0.1, 0.01, 0.001, 0.0001],
+    "IMS_PER_BATCH": [
+        1,
+        2,
+    ],
+    "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
+}
+model = Model()
+model.train()
+pt = Param_Tunning(params)
+pt.tune()
+# torch.save(model.train(),'./model.pt')
+# torch.save(model.train(),'./model.pth')
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/conda-environment.yaml b/V2/wandb/run-20211029_184311-k0amje1g/files/conda-environment.yaml
new file mode 100644
index 0000000..689f3ef
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/conda-environment.yaml
@@ -0,0 +1,170 @@
+name: detectron2
+channels:
+  - nvidia
+  - conda-forge
+  - defaults
+dependencies:
+  - _libgcc_mutex=0.1=main
+  - _openmp_mutex=4.5=1_gnu
+  - appdirs=1.4.4=pyhd3eb1b0_0
+  - argon2-cffi=20.1.0=py38h27cfd23_1
+  - attrs=21.2.0=pyhd3eb1b0_0
+  - backcall=0.2.0=pyh9f0ad1d_0
+  - backports=1.0=py_2
+  - backports.functools_lru_cache=1.6.4=pyhd8ed1ab_0
+  - blas=1.0=mkl
+  - bleach=4.1.0=pyhd8ed1ab_0
+  - blinker=1.4=py38h06a4308_0
+  - brotli=1.0.9=he6710b0_2
+  - brotlipy=0.7.0=py38h27cfd23_1003
+  - ca-certificates=2021.9.30=h06a4308_1
+  - certifi=2021.10.8=py38h06a4308_0
+  - cffi=1.14.6=py38h400218f_0
+  - charset-normalizer=2.0.4=pyhd3eb1b0_0
+  - click=8.0.1=pyhd3eb1b0_0
+  - cryptography=3.4.8=py38hd23ed53_0
+  - cudatoolkit=11.1.74=h6bb024c_0
+  - cycler=0.10.0=py38_0
+  - dbus=1.13.18=hb2f20db_0
+  - debugpy=1.4.1=py38h709712a_0
+  - decorator=5.1.0=pyhd8ed1ab_0
+  - defusedxml=0.7.1=pyhd8ed1ab_0
+  - entrypoints=0.3=pyhd8ed1ab_1003
+  - expat=2.4.1=h2531618_2
+  - fontconfig=2.13.1=h6c09931_0
+  - fonttools=4.25.0=pyhd3eb1b0_0
+  - freetype=2.10.4=h5ab3b9f_0
+  - future=0.18.2=py38_1
+  - glib=2.69.1=h5202010_0
+  - gst-plugins-base=1.14.0=h8213a91_2
+  - gstreamer=1.14.0=h28cd5cc_2
+  - icu=58.2=he6710b0_3
+  - idna=3.2=pyhd3eb1b0_0
+  - importlib-metadata=4.8.1=py38h578d9bd_0
+  - intel-openmp=2021.3.0=h06a4308_3350
+  - ipykernel=6.4.1=py38he5a9106_0
+  - ipython=7.28.0=py38he5a9106_0
+  - ipython_genutils=0.2.0=py_1
+  - ipywidgets=7.6.5=pyhd8ed1ab_0
+  - jedi=0.18.0=py38h578d9bd_2
+  - jinja2=3.0.1=pyhd3eb1b0_0
+  - jpeg=9d=h7f8727e_0
+  - jsonschema=4.1.0=pyhd8ed1ab_0
+  - jupyter=1.0.0=py38h578d9bd_6
+  - jupyter_client=7.0.6=pyhd8ed1ab_0
+  - jupyter_console=6.4.0=pyhd8ed1ab_0
+  - jupyter_core=4.8.1=py38h578d9bd_0
+  - jupyterlab_widgets=1.0.2=pyhd8ed1ab_0
+  - kiwisolver=1.3.1=py38h2531618_0
+  - lcms2=2.12=h3be6417_0
+  - ld_impl_linux-64=2.35.1=h7274673_9
+  - libffi=3.3=he6710b0_2
+  - libgcc-ng=9.3.0=h5101ec6_17
+  - libgomp=9.3.0=h5101ec6_17
+  - libpng=1.6.37=hbc83047_0
+  - libprotobuf=3.17.2=h4ff587b_1
+  - libsodium=1.0.18=h36c2ea0_1
+  - libstdcxx-ng=9.3.0=hd4cf53a_17
+  - libtiff=4.2.0=h85742a9_0
+  - libuuid=1.0.3=h7f8727e_2
+  - libuv=1.40.0=h7b6447c_0
+  - libwebp-base=1.2.0=h27cfd23_0
+  - libxcb=1.14=h7b6447c_0
+  - libxml2=2.9.12=h03d6c58_0
+  - lz4-c=1.9.3=h295c915_1
+  - markupsafe=2.0.1=py38h27cfd23_0
+  - matplotlib=3.4.2=py38h06a4308_0
+  - matplotlib-base=3.4.2=py38hab158f2_0
+  - matplotlib-inline=0.1.3=pyhd8ed1ab_0
+  - mistune=0.8.4=py38h497a2fe_1004
+  - mkl=2021.3.0=h06a4308_520
+  - mkl-service=2.4.0=py38h7f8727e_0
+  - mkl_fft=1.3.1=py38hd3c417c_0
+  - mkl_random=1.2.2=py38h51133e4_0
+  - munkres=1.1.4=py_0
+  - mypy_extensions=0.4.3=py38_0
+  - nbconvert=5.6.1=pyhd8ed1ab_2
+  - nbformat=5.1.3=pyhd8ed1ab_0
+  - ncurses=6.2=he6710b0_1
+  - nest-asyncio=1.5.1=pyhd8ed1ab_0
+  - ninja=1.10.2=hff7bd54_1
+  - notebook=6.4.4=pyha770c72_0
+  - numpy=1.21.2=py38h20f2e39_0
+  - numpy-base=1.21.2=py38h79a1101_0
+  - olefile=0.46=pyhd3eb1b0_0
+  - openjpeg=2.4.0=h3ad879b_0
+  - openssl=1.1.1l=h7f8727e_0
+  - packaging=21.0=pyhd3eb1b0_0
+  - pandocfilters=1.5.0=pyhd8ed1ab_0
+  - parso=0.8.2=pyhd8ed1ab_0
+  - pathspec=0.7.0=py_0
+  - pcre=8.45=h295c915_0
+  - pexpect=4.8.0=pyh9f0ad1d_2
+  - pickleshare=0.7.5=py_1003
+  - prometheus_client=0.11.0=pyhd8ed1ab_0
+  - prompt-toolkit=3.0.20=pyha770c72_0
+  - prompt_toolkit=3.0.20=hd8ed1ab_0
+  - ptyprocess=0.7.0=pyhd3deb0d_0
+  - pycparser=2.20=py_2
+  - pygments=2.10.0=pyhd8ed1ab_0
+  - pyopenssl=20.0.1=pyhd3eb1b0_1
+  - pyparsing=2.4.7=pyhd3eb1b0_0
+  - pyqt=5.9.2=py38h05f1152_4
+  - pyrsistent=0.17.3=py38h497a2fe_2
+  - pysocks=1.7.1=py38h06a4308_0
+  - python=3.8.12=h12debd9_0
+  - python-dateutil=2.8.2=pyhd3eb1b0_0
+  - python_abi=3.8=2_cp38
+  - pytz=2021.3=pyhd3eb1b0_0
+  - pyzmq=19.0.2=py38ha71036d_2
+  - qt=5.9.7=h5867ecd_1
+  - qtconsole=5.1.1=pyhd8ed1ab_0
+  - qtpy=1.11.2=pyhd8ed1ab_0
+  - readline=8.1=h27cfd23_0
+  - regex=2021.8.3=py38h7f8727e_0
+  - requests=2.26.0=pyhd3eb1b0_0
+  - send2trash=1.8.0=pyhd8ed1ab_0
+  - setuptools=58.0.4=py38h06a4308_0
+  - sip=4.19.13=py38he6710b0_0
+  - six=1.16.0=pyhd3eb1b0_0
+  - sqlite=3.36.0=hc218d9a_0
+  - terminado=0.12.1=py38h578d9bd_0
+  - testpath=0.5.0=pyhd8ed1ab_0
+  - tk=8.6.11=h1ccaba5_0
+  - toml=0.10.2=pyhd3eb1b0_0
+  - tornado=6.1=py38h27cfd23_0
+  - traitlets=5.1.0=pyhd8ed1ab_0
+  - typed-ast=1.4.3=py38h7f8727e_1
+  - typing_extensions=3.10.0.2=pyh06a4308_0
+  - urllib3=1.26.7=pyhd3eb1b0_0
+  - wcwidth=0.2.5=pyh9f0ad1d_2
+  - webencodings=0.5.1=py_1
+  - wheel=0.37.0=pyhd3eb1b0_1
+  - widgetsnbextension=3.5.1=py38h578d9bd_4
+  - xz=5.2.5=h7b6447c_0
+  - zeromq=4.3.4=h9c3ff4c_0
+  - zipp=3.6.0=pyhd8ed1ab_0
+  - zlib=1.2.11=h7b6447c_3
+  - zstd=1.4.9=haebb681_0
+  - pip:
+    - autopep8==1.6.0
+    - black==21.9b0
+    - detectron2==0.5+cu111
+    - fvcore==0.1.5.post20211015
+    - hydra-core==1.1.1
+    - oauthlib==3.1.1
+    - omegaconf==2.1.1
+    - opencv-python==4.5.3.56
+    - pillow==8.4.0
+    - pip==21.3.1
+    - protobuf==3.9.0
+    - pycocotools==2.0.2
+    - pycodestyle==2.8.0
+    - tensorboard==2.7.0
+    - tensorboard-data-server==0.6.1
+    - torch==1.6.0
+    - torchaudio==0.9.1
+    - torchmetrics==0.5.1
+    - torchvision==0.10.1+cu111
+    - wandb==0.12.4
+prefix: /media/indika/Sync/anaconda3/envs/detectron2
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/config.yaml b/V2/wandb/run-20211029_184311-k0amje1g/files/config.yaml
new file mode 100644
index 0000000..4da3266
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/config.yaml
@@ -0,0 +1,51 @@
+wandb_version: 1
+
+BASE_LR:
+  desc: null
+  value: 0.00025
+BATCH_SIZE_PER_IMAGE:
+  desc: null
+  value: 128
+EVAL_PERIOD:
+  desc: null
+  value: 250
+IMS_PER_BATCH:
+  desc: null
+  value: 2
+MAX_ITER:
+  desc: null
+  value: 250
+MODEL:
+  desc: null
+  value: COCO-Detection/faster_rcnn_X_101_32x8d_FPN_3x.yaml
+NAME:
+  desc: null
+  value: baseline
+SCORE_THRESH_TEST:
+  desc: null
+  value: 0.625
+_wandb:
+  desc: null
+  value:
+    cli_version: 0.12.4
+    code_path: code/V2/run.py
+    framework: torch
+    is_jupyter_run: false
+    is_kaggle_kernel: false
+    python_version: 3.8.12
+    start_time: 1635513191
+    t:
+      1:
+      - 1
+      - 5
+      2:
+      - 1
+      - 3
+      - 5
+      3:
+      - 13
+      - 16
+      4: 3.8.12
+      5: 0.12.4
+      8:
+      - 5
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/diff.patch b/V2/wandb/run-20211029_184311-k0amje1g/files/diff.patch
new file mode 100644
index 0000000..610aa3e
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/diff.patch
@@ -0,0 +1,250 @@
+diff --git a/V2/Model.py b/V2/Model.py
+index b8e14a5..41d81d2 100644
+--- a/V2/Model.py
++++ b/V2/Model.py
+@@ -498,87 +498,83 @@ class Model:
+         """
+         - train - trains the model
+         """
++        self.remove_files_in_output()
++        torch.cuda.empty_cache()
++        wandb.init(
++            project=PROJECT_NAME,
++            name=self.NAME,
++            config={
++                "BASE_LR": self.BASE_LR,
++                "MAX_ITER": self.MAX_ITER,
++                "EVAL_PERIOD": self.EVAL_PERIOD,
++                "IMS_PER_BATCH": self.IMS_PER_BATCH,
++                "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
++                "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
++                "MODEL": self.model,
++                "NAME": self.NAME,
++            },
++        )
++        trainer = self.__train()
++        predictor = self.create_predictor()
++        metrics_coco = self.create_coco_eval(predictor)
++        metrics_file = self.metrics_file_to_dict()
++        test_images = self.predict_test_images(predictor)
++        (
++            preds,
++            target,
++            x,
++            y,
++            w,
++            h,
++            xmin,
++            ymin,
++            xmax,
++            ymax,
++            height,
++            width,
++        ) = self.create_target_and_preds(predictor)
++        rmse = self.create_rmse(preds, target)
++        mse = self.create_mse(preds, target)
++        # ssim = self.create_ssim(preds, target, height, width)
++        psnr = self.create_psnr(preds, target)
++        wandb.log(metrics_coco)
++        for metric_file in metrics_file:
++            wandb.log(metric_file)
++        for test_img in test_images:
++            wandb.log({test_img[0]: wandb.Image(test_img[1])})
++        wandb.log({"RMSE": rmse})
++        wandb.log({"MSE": mse})
++        wandb.log({"PSNR": psnr})
+         try:
+-            self.remove_files_in_output()
+-            torch.cuda.empty_cache()
+-            wandb.init(
+-                project=PROJECT_NAME,
+-                name=self.NAME,
+-                config={
+-                    "BASE_LR": self.BASE_LR,
+-                    "MAX_ITER": self.MAX_ITER,
+-                    "EVAL_PERIOD": self.EVAL_PERIOD,
+-                    "IMS_PER_BATCH": self.IMS_PER_BATCH,
+-                    "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
+-                    "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
+-                    "MODEL": self.model,
+-                    "NAME": self.NAME,
+-                },
++            self.save(
++                trainer=trainer,
++                predictor=predictor,
++                metrics_coco=metrics_coco,
++                metrics_file=metrics_file,
++                test_images=test_images,
++                preds=preds,
++                target=target,
++                rmse=rmse,
++                mse=mse,
++                psnr=psnr,
+             )
+-            trainer = self.__train()
+-            predictor = self.create_predictor()
+-            metrics_coco = self.create_coco_eval(predictor)
+-            metrics_file = self.metrics_file_to_dict()
+-            test_images = self.predict_test_images(predictor)
+-            (
+-                preds,
+-                target,
+-                x,
+-                y,
+-                w,
+-                h,
+-                xmin,
+-                ymin,
+-                xmax,
+-                ymax,
+-                height,
+-                width,
+-            ) = self.create_target_and_preds(predictor)
+-            rmse = self.create_rmse(preds, target)
+-            mse = self.create_mse(preds, target)
+-            # ssim = self.create_ssim(preds, target, height, width)
+-            psnr = self.create_psnr(preds, target)
+-            wandb.log(metrics_coco)
+-            for metric_file in metrics_file:
+-                wandb.log(metric_file)
+-            for test_img in test_images:
+-                wandb.log({test_img[0]: wandb.Image(test_img[1])})
+-            wandb.log({"RMSE": rmse})
+-            wandb.log({"MSE": mse})
+-            wandb.log({"PSNR": psnr})
+-            try:
+-                self.save(
+-                    trainer=trainer,
+-                    predictor=predictor,
+-                    metrics_coco=metrics_coco,
+-                    metrics_file=metrics_file,
+-                    test_images=test_images,
+-                    preds=preds,
+-                    target=target,
+-                    rmse=rmse,
+-                    mse=mse,
+-                    psnr=psnr,
+-                )
+-            except:
+-                pass
+-            wandb.finish()
+-            return {
+-                "trainer": trainer,
+-                "predictor": predictor,
+-                "metrics_coco": metrics_coco,
+-                "metrics_file": metrics_file,
+-                "test_images": test_images,
+-                "preds": preds,
+-                "target": target,
+-                "rmse": rmse,
+-                "mse": mse,
+-                "psnr": psnr,
+-            }
+-            torch.cuda.empty_cache()
+-            self.remove_files_in_output()
+         except:
+-            torch.cuda.empty_cache()
+             pass
++        wandb.finish()
++        return {
++            "trainer": trainer,
++            "predictor": predictor,
++            "metrics_coco": metrics_coco,
++            "metrics_file": metrics_file,
++            "test_images": test_images,
++            "preds": preds,
++            "target": target,
++            "rmse": rmse,
++            "mse": mse,
++            "psnr": psnr,
++        }
++        torch.cuda.empty_cache()
++        self.remove_files_in_output()
+ 
+     def __str__(self) -> str:
+         return f"""
+diff --git a/V2/output/events.out.tfevents.1635511940.programmer-rd-ai.55366.0 b/V2/output/events.out.tfevents.1635511940.programmer-rd-ai.55366.0
+deleted file mode 100644
+index ea071a8..0000000
+Binary files a/V2/output/events.out.tfevents.1635511940.programmer-rd-ai.55366.0 and /dev/null differ
+diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
+deleted file mode 100644
+index da0e9f9..0000000
+--- a/V2/output/last_checkpoint
++++ /dev/null
+@@ -1 +0,0 @@
+-model_final.pth
+\ No newline at end of file
+diff --git a/V2/output/metrics.json b/V2/output/metrics.json
+deleted file mode 100644
+index 91e9f75..0000000
+--- a/V2/output/metrics.json
++++ /dev/null
+@@ -1,13 +0,0 @@
+-{"data_time": 0.002212539499964805, "eta_seconds": 228.33540260000177, "fast_rcnn/cls_accuracy": 0.63671875, "fast_rcnn/false_negative": 0.8610038610038611, "fast_rcnn/fg_cls_accuracy": 0.138996138996139, "iteration": 19, "loss_box_reg": 0.3507070392370224, "loss_cls": 0.6481618285179138, "loss_rpn_cls": 0.026948592625558376, "loss_rpn_loc": 0.006138449069112539, "lr": 1.9231e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.9927626200000077, "total_loss": 1.0383126914966851}
+-{"data_time": 0.0023826189998317204, "eta_seconds": 216.17027039997993, "fast_rcnn/cls_accuracy": 0.91796875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.23495155572891235, "loss_cls": 0.48248644173145294, "loss_rpn_cls": 0.029120108112692833, "loss_rpn_loc": 0.00540528167039156, "lr": 3.9211e-05, "roi_head/num_bg_samples": 119.75, "roi_head/num_fg_samples": 8.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0405841084999565, "total_loss": 0.8033793541253544}
+-{"data_time": 0.002309813000010763, "eta_seconds": 197.71098061499174, "fast_rcnn/cls_accuracy": 0.908203125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.36764535307884216, "loss_cls": 0.3466052711009979, "loss_rpn_cls": 0.008030871395021677, "loss_rpn_loc": 0.00537837902083993, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.1128698185000303, "total_loss": 0.7330057786311954}
+-{"data_time": 0.0025373165000246445, "eta_seconds": 174.99498079998375, "fast_rcnn/cls_accuracy": 0.912109375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.3434152901172638, "loss_cls": 0.29721465706825256, "loss_rpn_cls": 0.027911928482353687, "loss_rpn_loc": 0.00541307358071208, "lr": 7.9171e-05, "roi_head/num_bg_samples": 116.75, "roi_head/num_fg_samples": 11.25, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.9888009175000434, "total_loss": 0.7051943752449006}
+-{"data_time": 0.002323818000149913, "eta_seconds": 149.90469562499698, "fast_rcnn/cls_accuracy": 0.91015625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.3131103813648224, "loss_cls": 0.2670962065458298, "loss_rpn_cls": 0.02071892935782671, "loss_rpn_loc": 0.007663901895284653, "lr": 9.9151e-05, "roi_head/num_bg_samples": 116.5, "roi_head/num_fg_samples": 11.5, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.906120355999974, "total_loss": 0.6991986157372594}
+-{"data_time": 0.002451274000009107, "eta_seconds": 130.62800204999576, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.36798520386219025, "loss_cls": 0.24060144275426865, "loss_rpn_cls": 0.015996653586626053, "loss_rpn_loc": 0.010310293175280094, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 250.0, "rpn/num_pos_anchors": 6.0, "time": 1.077337625000041, "total_loss": 0.6610439913347363}
+-{"data_time": 0.0023242799999252384, "eta_seconds": 110.53138634999641, "fast_rcnn/cls_accuracy": 0.93359375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.2259005606174469, "loss_cls": 0.19830289483070374, "loss_rpn_cls": 0.05473419837653637, "loss_rpn_loc": 0.009759384207427502, "lr": 0.000139111, "roi_head/num_bg_samples": 119.5, "roi_head/num_fg_samples": 8.5, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0093436959998598, "total_loss": 0.5290673188865185}
+-{"data_time": 0.002379369999971459, "eta_seconds": 90.5270778449983, "fast_rcnn/cls_accuracy": 0.896484375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.3841266930103302, "loss_cls": 0.2533814162015915, "loss_rpn_cls": 0.015191656071692705, "loss_rpn_loc": 0.008426647633314133, "lr": 0.000159091, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 251.5, "rpn/num_pos_anchors": 4.5, "time": 1.017016574999957, "total_loss": 0.6656532669439912}
+-{"data_time": 0.002405241000019487, "eta_seconds": 70.78981055999748, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.36845563352108, "loss_cls": 0.2519475594162941, "loss_rpn_cls": 0.028202883899211884, "loss_rpn_loc": 0.0049057044088840485, "lr": 0.000179071, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0401449480000338, "total_loss": 0.6626131320372224}
+-{"data_time": 0.002434473999983311, "eta_seconds": 50.29282102499906, "fast_rcnn/cls_accuracy": 0.88671875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.4075011909008026, "loss_cls": 0.2418404221534729, "loss_rpn_cls": 0.016698427964001894, "loss_rpn_loc": 0.009484314359724522, "lr": 0.000199051, "roi_head/num_bg_samples": 113.5, "roi_head/num_fg_samples": 14.5, "rpn/num_neg_anchors": 251.5, "rpn/num_pos_anchors": 4.5, "time": 0.9963060344999803, "total_loss": 0.6337115014175652}
+-{"data_time": 0.0023340745000268726, "eta_seconds": 29.87466958500022, "fast_rcnn/cls_accuracy": 0.916015625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.29742442071437836, "loss_cls": 0.21718856692314148, "loss_rpn_cls": 0.01328930864110589, "loss_rpn_loc": 0.008061917033046484, "lr": 0.000219031, "roi_head/num_bg_samples": 117.25, "roi_head/num_fg_samples": 10.75, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 0.8956468105000113, "total_loss": 0.5787253854650771}
+-{"data_time": 0.0024071915000831723, "eta_seconds": 9.935138165000126, "fast_rcnn/cls_accuracy": 0.91015625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 239, "loss_box_reg": 0.3088490664958954, "loss_cls": 0.2425890788435936, "loss_rpn_cls": 0.017106711398810148, "loss_rpn_loc": 0.007443831069394946, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 0.9704664194998713, "total_loss": 0.5767836421728134}
+-{"data_time": 0.0023293315000501025, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9736842105263157, "fast_rcnn/fg_cls_accuracy": 0.02631578947368421, "iteration": 249, "loss_box_reg": 0.28409460186958313, "loss_cls": 0.2266060709953308, "loss_rpn_cls": 0.021325496025383472, "loss_rpn_loc": 0.007506487891077995, "lr": 0.000249001, "roi_head/num_bg_samples": 117.0, "roi_head/num_fg_samples": 11.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 0.9746381984998607, "total_loss": 0.5261765508912504}
+diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
+deleted file mode 100644
+index e69de29..0000000
+diff --git a/V2/run.py b/V2/run.py
+index 5e4d213..6a21847 100644
+--- a/V2/run.py
++++ b/V2/run.py
+@@ -30,8 +30,8 @@ params = {
+     ],
+     "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
+ }
+-# model = Model()
+-# model.train()
++model = Model()
++model.train()
+ pt = Param_Tunning(params)
+ pt.tune()
+ # torch.save(model.train(),'./model.pt')
+diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
+index 904760c..0d7ba46 120000
+--- a/V2/wandb/latest-run
++++ b/V2/wandb/latest-run
+@@ -1 +1 @@
+-run-20211029_182019-19fkojne
+\ No newline at end of file
++run-20211029_184311-k0amje1g
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
+index 0a88550..4b29dc9 100644
+--- a/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
+@@ -38,6 +38,10 @@ _wandb:
+       1:
+       - 1
+       - 5
++      2:
++      - 1
++      - 3
++      - 5
+       3:
+       - 13
+       - 16
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
+index 9e26dfe..b3d6dff 100644
+--- a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
+@@ -1 +1 @@
+-{}
+\ No newline at end of file
++{"_wandb": {"runtime": 953}}
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb
+index b50843c..9cd3a2f 100644
+Binary files a/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb and b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb differ
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/requirements.txt b/V2/wandb/run-20211029_184311-k0amje1g/files/requirements.txt
new file mode 100644
index 0000000..8b695ab
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/requirements.txt
@@ -0,0 +1,289 @@
+absl-py==0.12.0
+aiohttp-cors==0.7.0
+aiohttp==3.7.4.post0
+aioredis==1.3.1
+altair==4.1.0
+aniso8601==9.0.1
+antlr4-python3-runtime==4.8
+anyio==3.3.0
+appdirs==1.4.4
+argcomplete==1.12.3
+argon2-cffi==20.1.0
+astor==0.8.1
+astunparse==1.6.3
+async-timeout==3.0.1
+attrs==21.2.0
+autopep8==1.6.0
+babel==2.9.1
+backcall==0.2.0
+backoff==1.11.1
+backports.functools-lru-cache==1.6.4
+backports.zoneinfo==0.2.1
+base58==2.1.0
+black==21.9b0
+bleach==4.1.0
+blessings==1.7
+blinker==1.4
+boto3==1.18.55
+botocore==1.21.55
+brotlipy==0.7.0
+cachetools==4.2.1
+certifi==2021.5.30
+cffi==1.14.6
+cfgv==3.3.0
+charset-normalizer==2.0.4
+clearml==1.0.4
+click==8.0.1
+cloudpickle==1.6.0
+configparser==5.0.2
+cryptography==3.4.8
+cycler==0.10.0
+cython==0.29.23
+debugpy==1.5.1
+decorator==5.1.0
+defusedxml==0.7.1
+deprecated==1.2.13
+detectron2==0.5+cu111
+dill==0.3.4
+distlib==0.3.2
+distro==1.6.0
+dlib==19.22.0
+dnspython==1.16.0
+docker-pycreds==0.4.0
+entrypoints==0.3
+et-xmlfile==1.1.0
+eventlet==0.32.0
+face-recognition-models==0.3.0
+face-recognition==1.3.0
+fiftyone-brain==0.7.1
+fiftyone-db==0.3.0
+fiftyone==0.13.3
+filelock==3.0.12
+flask-restful==0.3.9
+flask-simple-geoip==0.2.4
+flask==2.0.1
+flatbuffers==1.12
+fonttools==4.25.0
+furl==2.1.2
+future==0.18.2
+fvcore==0.1.5.post20211015
+gast==0.3.3
+gitdb==4.0.7
+gitpython==3.1.14
+glob2==0.7
+google-api-core==1.30.0
+google-auth-oauthlib==0.4.4
+google-auth==1.28.0
+google-pasta==0.2.0
+google-trans-new==1.1.9
+googleapis-common-protos==1.53.0
+gpustat==0.6.0
+greenlet==1.1.2
+grpcio==1.32.0
+gunicorn==20.1.0
+h11==0.12.0
+h5py==2.10.0
+hiredis==2.0.0
+httpcore==0.13.7
+httpx==0.19.0
+humanfriendly==9.2
+hydra-core==1.1.1
+identify==2.2.10
+idna==3.2
+imageio==2.9.0
+importlib-metadata==4.6.4
+importlib-resources==5.1.4
+install==1.3.4
+iopath==0.1.8
+ipaddress==1.0.23
+ipykernel==6.4.1
+ipython-genutils==0.2.0
+ipython==7.28.0
+ipywidgets==7.6.5
+itsdangerous==2.0.1
+jedi==0.18.0
+jinja2==3.0.1
+jmespath==0.10.0
+joblib==1.0.1
+json5==0.9.5
+jsonschema==4.1.0
+jupyter-client==7.0.6
+jupyter-console==6.4.0
+jupyter-core==4.8.1
+jupyter-server==1.8.0
+jupyter==1.0.0
+jupyterlab-server==2.6.0
+jupyterlab-widgets==1.0.2
+jupyterlab==3.0.16
+kaleido==0.2.1
+keras-preprocessing==1.1.2
+keras==2.4.3
+kiwisolver==1.3.1
+livereload==2.6.3
+lxml==4.6.3
+markdown==3.3.4
+markupsafe==2.0.1
+matplotlib-inline==0.1.3
+matplotlib==3.4.3
+mistune==0.8.4
+mkl-fft==1.3.1
+mkl-random==1.2.2
+mkl-service==2.4.0
+mongoengine==0.20.0
+motor==2.5.1
+msgpack==1.0.2
+multidict==5.1.0
+munkres==1.1.4
+mypy-extensions==0.4.3
+mysql-connector-python==8.0.26
+nbclassic==0.3.1
+nbconvert==5.6.1
+nbformat==5.1.3
+ndjson==0.3.1
+nest-asyncio==1.5.1
+networkx==2.6.3
+nltk==3.6.5
+nodeenv==1.6.0
+notebook==6.4.4
+numpy==1.21.1
+nvidia-ml-py3==7.352.0
+nvidia-ml-py==11.450.51
+nvitop==0.4.4.1
+oauthlib==3.1.1
+olefile==0.46
+omegaconf==2.1.1
+opencensus-context==0.1.2
+opencensus==0.7.13
+opencv-python-headless==4.5.3.56
+opencv-python==4.5.3.56
+openpyxl==3.0.9
+opt-einsum==3.3.0
+orderedmultidict==1.0.1
+packaging==21.0
+pandas==1.3.2
+pandocfilters==1.5.0
+parso==0.8.2
+pathlib2==2.3.5
+pathspec==0.9.0
+pathtools==0.1.2
+patool==1.12
+pexpect==4.8.0
+phonenumbers==8.12.29
+pickleshare==0.7.5
+pillow==8.3.2
+pip==21.3.1
+platformdirs==2.3.0
+plotly==5.2.1
+pluggy==0.13.1
+portalocker==2.3.0
+pprintpp==0.4.0
+pre-commit==2.13.0
+prometheus-client==0.11.0
+promise==2.3
+prompt-toolkit==3.0.20
+protobuf==3.9.0
+psutil==5.8.0
+ptyprocess==0.7.0
+py-spy==0.3.7
+py==1.10.0
+pyarrow==5.0.0
+pyasn1-modules==0.2.8
+pyasn1==0.4.8
+pycocotools==2.0.2
+pycodestyle==2.8.0
+pycparser==2.20
+pydantic==1.8.2
+pydeck==0.7.0
+pydot==1.4.2
+pygments==2.10.0
+pyopenssl==20.0.1
+pyparsing==2.4.7
+pyrsistent==0.17.3
+pysocks==1.7.1
+python-dateutil==2.8.2
+pytz==2021.1
+pywavelets==1.1.1
+pyyaml==5.1
+pyzmq==19.0.2
+qtconsole==5.1.1
+qtpy==1.11.2
+ray==1.4.1
+redis==3.5.3
+regex==2021.8.3
+requests-oauthlib==1.3.0
+requests==2.26.0
+retrying==1.3.3
+rfc3986==1.5.0
+rsa==4.7.2
+s3transfer==0.5.0
+scikit-image==0.18.3
+scikit-learn==0.24.1
+scipy==1.6.2
+seaborn==0.11.1
+send2trash==1.8.0
+sentry-sdk==1.0.0
+setuptools==58.0.4
+shortuuid==1.0.1
+simple-geoip==0.1.1
+sip==4.19.13
+six==1.16.0
+sklearn==0.0
+smmap==4.0.0
+sniffio==1.2.0
+sortedcontainers==2.4.0
+streamlit==0.88.0
+stripe==2.60.0
+subprocess32==3.5.4
+tabulate==0.8.9
+tenacity==8.0.1
+tensorboard-data-server==0.6.1
+tensorboard-plugin-wit==1.8.0
+tensorboard==2.7.0
+tensorboardx==2.4
+tensorflow-estimator==2.4.0
+tensorflow-hub==0.11.0
+tensorflow==2.4.1
+tensorrt==0.0.1
+termcolor==1.1.0
+terminado==0.12.1
+testpath==0.5.0
+threadpoolctl==2.1.0
+tifffile==2021.8.30
+toml==0.10.2
+tomli==1.2.1
+toolz==0.11.1
+torch-tb-profiler==0.2.0
+torch==1.9.1+cu111
+torchaudio==0.9.1
+torchmetrics==0.5.1
+torchvision==0.10.1+cu111
+tornado==6.1
+tox==3.23.1
+tqdm==4.62.0
+traitlets==5.1.0
+translate==3.5.0
+twilio==6.63.0
+typed-ast==1.4.3
+typing-extensions==3.10.0.0
+tzlocal==3.0
+universal-analytics-python3==1.1.1
+urllib3==1.26.6
+validators==0.18.2
+virtualenv==20.4.7
+voxel51-eta==0.5.3
+wandb==0.12.4
+watchdog==2.1.5
+wcwidth==0.2.5
+webencodings==0.5.1
+websocket-client==1.0.1
+werkzeug==2.0.1
+wheel==0.36.2
+widgetsnbextension==3.5.1
+wrapt==1.12.1
+xeus-python-shell==0.1.7
+xeus-python==0.13.5
+xmltodict==0.12.0
+yacs==0.1.8
+yarl==1.6.3
+yaspin==2.1.0
+zipp==3.5.0
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/upstream_diff_56410c130efe6236befb27ac2a6811b91a9e4e81.patch b/V2/wandb/run-20211029_184311-k0amje1g/files/upstream_diff_56410c130efe6236befb27ac2a6811b91a9e4e81.patch
new file mode 100644
index 0000000..e01cf25
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/upstream_diff_56410c130efe6236befb27ac2a6811b91a9e4e81.patch
@@ -0,0 +1,1832 @@
+diff --git a/V2/Model.py b/V2/Model.py
+index b1962da..41d81d2 100644
+--- a/V2/Model.py
++++ b/V2/Model.py
+@@ -99,12 +99,16 @@ class Model:
+             DatasetCatalog.register(
+                 "data", lambda: self.load_data()
+             )  # Registering the training data
+-            MetadataCatalog.get("data").set(thing_classes=self.labels)  # Adding the labels
++            MetadataCatalog.get("data").set(
++                thing_classes=self.labels
++            )  # Adding the labels
+             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
+             DatasetCatalog.register(
+                 "test", lambda: self.load_data(test=True)
+             )  # Registering the test data
+-            MetadataCatalog.get("test").set(thing_classes=self.labels)  # Adding the labels
++            MetadataCatalog.get("test").set(
++                thing_classes=self.labels
++            )  # Adding the labels
+             self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
+         except:
+             pass
+@@ -494,87 +498,83 @@ class Model:
+         """
+         - train - trains the model
+         """
++        self.remove_files_in_output()
++        torch.cuda.empty_cache()
++        wandb.init(
++            project=PROJECT_NAME,
++            name=self.NAME,
++            config={
++                "BASE_LR": self.BASE_LR,
++                "MAX_ITER": self.MAX_ITER,
++                "EVAL_PERIOD": self.EVAL_PERIOD,
++                "IMS_PER_BATCH": self.IMS_PER_BATCH,
++                "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
++                "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
++                "MODEL": self.model,
++                "NAME": self.NAME,
++            },
++        )
++        trainer = self.__train()
++        predictor = self.create_predictor()
++        metrics_coco = self.create_coco_eval(predictor)
++        metrics_file = self.metrics_file_to_dict()
++        test_images = self.predict_test_images(predictor)
++        (
++            preds,
++            target,
++            x,
++            y,
++            w,
++            h,
++            xmin,
++            ymin,
++            xmax,
++            ymax,
++            height,
++            width,
++        ) = self.create_target_and_preds(predictor)
++        rmse = self.create_rmse(preds, target)
++        mse = self.create_mse(preds, target)
++        # ssim = self.create_ssim(preds, target, height, width)
++        psnr = self.create_psnr(preds, target)
++        wandb.log(metrics_coco)
++        for metric_file in metrics_file:
++            wandb.log(metric_file)
++        for test_img in test_images:
++            wandb.log({test_img[0]: wandb.Image(test_img[1])})
++        wandb.log({"RMSE": rmse})
++        wandb.log({"MSE": mse})
++        wandb.log({"PSNR": psnr})
+         try:
+-            self.remove_files_in_output()
+-            torch.cuda.empty_cache()
+-            wandb.init(
+-                project=PROJECT_NAME,
+-                name=self.NAME,
+-                config={
+-                    "BASE_LR": self.BASE_LR,
+-                    "MAX_ITER": self.MAX_ITER,
+-                    "EVAL_PERIOD": self.EVAL_PERIOD,
+-                    "IMS_PER_BATCH": self.IMS_PER_BATCH,
+-                    "BATCH_SIZE_PER_IMAGE": self.BATCH_SIZE_PER_IMAGE,
+-                    "SCORE_THRESH_TEST": self.SCORE_THRESH_TEST,
+-                    "MODEL": self.model,
+-                    "NAME": self.NAME,
+-                },
++            self.save(
++                trainer=trainer,
++                predictor=predictor,
++                metrics_coco=metrics_coco,
++                metrics_file=metrics_file,
++                test_images=test_images,
++                preds=preds,
++                target=target,
++                rmse=rmse,
++                mse=mse,
++                psnr=psnr,
+             )
+-            trainer = self.__train()
+-            predictor = self.create_predictor()
+-            metrics_coco = self.create_coco_eval(predictor)
+-            metrics_file = self.metrics_file_to_dict()
+-            test_images = self.predict_test_images(predictor)
+-            (
+-                preds,
+-                target,
+-                x,
+-                y,
+-                w,
+-                h,
+-                xmin,
+-                ymin,
+-                xmax,
+-                ymax,
+-                height,
+-                width,
+-            ) = self.create_target_and_preds(predictor)
+-            rmse = self.create_rmse(preds, target)
+-            mse = self.create_mse(preds, target)
+-            # ssim = self.create_ssim(preds, target, height, width)
+-            psnr = self.create_psnr(preds, target)
+-            wandb.log(metrics_coco)
+-            for metric_file in metrics_file:
+-                wandb.log(metric_file)
+-            for test_img in test_images:
+-                wandb.log({test_img[0]: wandb.Image(test_img[1])})
+-            wandb.log({"RMSE": rmse})
+-            wandb.log({"MSE": mse})
+-            wandb.log({"PSNR": psnr})
+-            try:
+-                self.save(
+-                    trainer=trainer,
+-                    predictor=predictor,
+-                    metrics_coco=metrics_coco,
+-                    metrics_file=metrics_file,
+-                    test_images=test_images,
+-                    preds=preds,
+-                    target=target,
+-                    rmse=rmse,
+-                    mse=mse,
+-                    psnr=psnr,
+-                )
+-            except:
+-                pass
+-            wandb.finish()
+-            return {
+-                "trainer": trainer,
+-                "predictor": predictor,
+-                "metrics_coco": metrics_coco,
+-                "metrics_file": metrics_file,
+-                "test_images": test_images,
+-                "preds": preds,
+-                "target": target,
+-                "rmse": rmse,
+-                "mse": mse,
+-                "psnr": psnr,
+-            }
+-            torch.cuda.empty_cache()
+-            self.remove_files_in_output()
+         except:
+-            torch.cuda.empty_cache()
+             pass
++        wandb.finish()
++        return {
++            "trainer": trainer,
++            "predictor": predictor,
++            "metrics_coco": metrics_coco,
++            "metrics_file": metrics_file,
++            "test_images": test_images,
++            "preds": preds,
++            "target": target,
++            "rmse": rmse,
++            "mse": mse,
++            "psnr": psnr,
++        }
++        torch.cuda.empty_cache()
++        self.remove_files_in_output()
+ 
+     def __str__(self) -> str:
+         return f"""
+@@ -638,7 +638,7 @@ class Param_Tunning:
+         ]
+         params_not_in_required_labels = []
+ 
+-        for required_label in tqdm(list(required_labels.keys())):
++        for required_label in tqdm(list(required_labels)):
+             if required_label not in list(params.keys()):
+                 params_not_in_required_labels.append(required_label)
+         if params_not_in_required_labels != []:
+@@ -660,7 +660,7 @@ class Param_Tunning:
+                     ims_per_batch=param["IMS_PER_BATCH"],
+                     batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
+                     score_thresh_test=param["SCORE_THRESH_TEST"],
+-                    model=param["MODEL"],
++                    model="COCO-Detection/" + param["MODEL"],
+                     name=str(param),
+                     create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
+                 )
+@@ -670,8 +670,8 @@ class Param_Tunning:
+                 models["Model"].append(param["MODEL"])
+                 models["Metrics_COCO"].append(metrics_coco)
+                 models["Metrics_File"].append(metrics_file)
+-            except:
+-                pass
++            except Exception as e:
++                print(e)
+         models = pd.DataFrame(models)
+         models.to_csv("./tune.csv")
+         return models
+diff --git a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 b/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0
+deleted file mode 100644
+index 0c6fbe6..0000000
+Binary files a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 and /dev/null differ
+diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
+deleted file mode 100644
+index da0e9f9..0000000
+--- a/V2/output/last_checkpoint
++++ /dev/null
+@@ -1 +0,0 @@
+-model_final.pth
+\ No newline at end of file
+diff --git a/V2/output/metrics.json b/V2/output/metrics.json
+deleted file mode 100644
+index cb9e043..0000000
+--- a/V2/output/metrics.json
++++ /dev/null
+@@ -1,13 +0,0 @@
+-{"data_time": 0.0024713455000267004, "eta_seconds": 242.86247767999754, "fast_rcnn/cls_accuracy": 0.3515625, "fast_rcnn/false_negative": 0.3380952380952381, "fast_rcnn/fg_cls_accuracy": 0.6619047619047619, "iteration": 19, "loss_box_reg": 0.41146324574947357, "loss_cls": 0.7392567098140717, "loss_rpn_cls": 0.020119073800742626, "loss_rpn_loc": 0.008557552937418222, "lr": 1.9231e-05, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 1.0559238159999893, "total_loss": 1.199336625635624}
+-{"data_time": 0.0023898784999971667, "eta_seconds": 219.56037505500205, "fast_rcnn/cls_accuracy": 0.869140625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.33894744515419006, "loss_cls": 0.533970057964325, "loss_rpn_cls": 0.021526054479181767, "loss_rpn_loc": 0.0077283557038754225, "lr": 3.9211e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0000388769999802, "total_loss": 0.9420970119535923}
+-{"data_time": 0.002844556500008366, "eta_seconds": 198.64986314500186, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.3618171513080597, "loss_cls": 0.3491041511297226, "loss_rpn_cls": 0.01204870780929923, "loss_rpn_loc": 0.007542710052803159, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 251.0, "rpn/num_pos_anchors": 5.0, "time": 1.0513729945000136, "total_loss": 0.7109228377230465}
+-{"data_time": 0.002351157000020976, "eta_seconds": 179.50704871999818, "fast_rcnn/cls_accuracy": 0.9296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.24807123839855194, "loss_cls": 0.27089114487171173, "loss_rpn_cls": 0.060913536697626114, "loss_rpn_loc": 0.007144225295633078, "lr": 7.9171e-05, "roi_head/num_bg_samples": 119.0, "roi_head/num_fg_samples": 9.0, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.095190236999997, "total_loss": 0.6000422104261816}
+-{"data_time": 0.002303852000011375, "eta_seconds": 158.5481184749952, "fast_rcnn/cls_accuracy": 0.90234375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.37137627601623535, "loss_cls": 0.27069205045700073, "loss_rpn_cls": 0.01833363715559244, "loss_rpn_loc": 0.007090216968208551, "lr": 9.9151e-05, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.056987456499968, "total_loss": 0.7003956531407312}
+-{"data_time": 0.002605340000002343, "eta_seconds": 137.40836934499583, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.3501961678266525, "loss_cls": 0.24755674600601196, "loss_rpn_cls": 0.03569256328046322, "loss_rpn_loc": 0.0065877537708729506, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0775407019999932, "total_loss": 0.6915035428246483}
+-{"data_time": 0.0023761640000259376, "eta_seconds": 116.00193643499779, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.3321911245584488, "loss_cls": 0.27787481248378754, "loss_rpn_cls": 0.03818380646407604, "loss_rpn_loc": 0.006203859578818083, "lr": 0.000139111, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0447581145000129, "total_loss": 0.7225660970434546}
+-{"data_time": 0.002289748000009695, "eta_seconds": 94.91067526499819, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.37014663219451904, "loss_cls": 0.2503085359930992, "loss_rpn_cls": 0.022741314955055714, "loss_rpn_loc": 0.008183888625353575, "lr": 0.000159091, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0550466784999912, "total_loss": 0.6615875260904431}
+-{"data_time": 0.0024869095000212837, "eta_seconds": 73.98912195499776, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.3416535407304764, "loss_cls": 0.20821541547775269, "loss_rpn_cls": 0.012514203786849976, "loss_rpn_loc": 0.007641490548849106, "lr": 0.000179071, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.1015214909999713, "total_loss": 0.5950205000117421}
+-{"data_time": 0.002674328000011883, "eta_seconds": 52.728152924998994, "fast_rcnn/cls_accuracy": 0.923828125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.27223585546016693, "loss_cls": 0.1997024491429329, "loss_rpn_cls": 0.0211806483566761, "loss_rpn_loc": 0.005561774130910635, "lr": 0.000199051, "roi_head/num_bg_samples": 118.25, "roi_head/num_fg_samples": 9.75, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.0192338319999976, "total_loss": 0.4901804425753653}
+-{"data_time": 0.0025132275000032678, "eta_seconds": 31.636891754999397, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.36517906188964844, "loss_cls": 0.23198173195123672, "loss_rpn_cls": 0.014427084941416979, "loss_rpn_loc": 0.006507641403004527, "lr": 0.000219031, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 251.75, "rpn/num_pos_anchors": 4.25, "time": 1.0292666254999858, "total_loss": 0.6094998904736713}
+-{"data_time": 0.002412913000057415, "eta_seconds": 10.586967729999799, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9622507122507122, "fast_rcnn/fg_cls_accuracy": 0.03774928774928775, "iteration": 239, "loss_box_reg": 0.2760148346424103, "loss_cls": 0.19814912229776382, "loss_rpn_cls": 0.014830647502094507, "loss_rpn_loc": 0.009588066954165697, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 117.5, "roi_head/num_fg_samples": 10.5, "rpn/num_neg_anchors": 251.25, "rpn/num_pos_anchors": 4.75, "time": 1.1579277230000002, "total_loss": 0.503135692095384}
+-{"data_time": 0.0026069874999734566, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.931640625, "fast_rcnn/false_negative": 0.9864864864864865, "fast_rcnn/fg_cls_accuracy": 0.013513513513513514, "iteration": 249, "loss_box_reg": 0.25686195492744446, "loss_cls": 0.1974724605679512, "loss_rpn_cls": 0.024123243056237698, "loss_rpn_loc": 0.010637202765792608, "lr": 0.000249001, "roi_head/num_bg_samples": 118.5, "roi_head/num_fg_samples": 9.5, "rpn/num_neg_anchors": 249.25, "rpn/num_pos_anchors": 6.75, "time": 1.1218074584999158, "total_loss": 0.48856362886726856}
+diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
+deleted file mode 100644
+index e69de29..0000000
+diff --git a/V2/tune.csv b/V2/tune.csv
+new file mode 100644
+index 0000000..9eb4606
+--- /dev/null
++++ b/V2/tune.csv
+@@ -0,0 +1 @@
++,Model,Metrics_COCO,Metrics_File
+diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
+index bdd0614..0d7ba46 120000
+--- a/V2/wandb/latest-run
++++ b/V2/wandb/latest-run
+@@ -1 +1 @@
+-run-20211029_175737-18w958uw
+\ No newline at end of file
++run-20211029_184311-k0amje1g
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+index 099fa7b..20d3ca0 100644
+--- a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++++ b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+@@ -38,6 +38,10 @@ _wandb:
+       1:
+       - 1
+       - 5
++      2:
++      - 1
++      - 3
++      - 5
+       3:
+       - 13
+       - 16
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+index 9e26dfe..5c28c9c 100644
+--- a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++++ b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+@@ -1 +1 @@
+-{}
+\ No newline at end of file
++{"_wandb": {"runtime": 1020}}
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb
+index 47bdc52..20979e1 100644
+Binary files a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb and b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb differ
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/code/V2/run.py b/V2/wandb/run-20211029_181623-oq3sf9nl/files/code/V2/run.py
+new file mode 100644
+index 0000000..5e4d213
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/code/V2/run.py
+@@ -0,0 +1,38 @@
++from Model import *
++
++params = {
++    "MODEL": [
++        "fast_rcnn_R_50_FPN_1x.yaml",
++        # "faster_rcnn_R_50_C4_1x.yaml",
++        # "faster_rcnn_R_50_C4_3x.yaml",
++        # "faster_rcnn_R_50_DC5_1x.yaml",
++        # "faster_rcnn_R_50_DC5_3x.yaml",
++        # "retinanet_R_50_FPN_1x.py",
++        # "retinanet_R_50_FPN_1x.yaml",
++        # "retinanet_R_50_FPN_3x.yaml",
++        # "rpn_R_50_C4_1x.yaml",
++        # "rpn_R_50_FPN_1x.yaml",
++        # "faster_rcnn_R_50_FPN_1x.yaml",
++        # "faster_rcnn_R_50_FPN_3x.yaml",
++        # "faster_rcnn_R_101_DC5_3x.yaml",
++        # "faster_rcnn_R_101_FPN_3x.yaml",
++        # "faster_rcnn_X_101_32x8d_FPN_3x.yaml",
++    ],
++    "MAX_ITER": [125],
++    "LABELS": [["Card"]],
++    "CREATE_TARGET_AND_PREDS": [55],
++    "EVAL_PERIOD": [125],
++    "SCORE_THRESH_TEST": [0.625],
++    "BASE_LR": [0.1, 0.01, 0.001, 0.0001],
++    "IMS_PER_BATCH": [
++        1,
++        2,
++    ],
++    "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
++}
++# model = Model()
++# model.train()
++pt = Param_Tunning(params)
++pt.tune()
++# torch.save(model.train(),'./model.pt')
++# torch.save(model.train(),'./model.pth')
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/conda-environment.yaml b/V2/wandb/run-20211029_181623-oq3sf9nl/files/conda-environment.yaml
+new file mode 100644
+index 0000000..629d053
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/conda-environment.yaml
+@@ -0,0 +1,170 @@
++name: detectron2
++channels:
++  - nvidia
++  - conda-forge
++  - defaults
++dependencies:
++  - _libgcc_mutex=0.1=main
++  - _openmp_mutex=4.5=1_gnu
++  - appdirs=1.4.4=pyhd3eb1b0_0
++  - argon2-cffi=20.1.0=py38h27cfd23_1
++  - attrs=21.2.0=pyhd3eb1b0_0
++  - backcall=0.2.0=pyh9f0ad1d_0
++  - backports=1.0=py_2
++  - backports.functools_lru_cache=1.6.4=pyhd8ed1ab_0
++  - blas=1.0=mkl
++  - bleach=4.1.0=pyhd8ed1ab_0
++  - blinker=1.4=py38h06a4308_0
++  - brotli=1.0.9=he6710b0_2
++  - brotlipy=0.7.0=py38h27cfd23_1003
++  - ca-certificates=2021.9.30=h06a4308_1
++  - certifi=2021.10.8=py38h06a4308_0
++  - cffi=1.14.6=py38h400218f_0
++  - charset-normalizer=2.0.4=pyhd3eb1b0_0
++  - click=8.0.1=pyhd3eb1b0_0
++  - cryptography=3.4.8=py38hd23ed53_0
++  - cudatoolkit=11.1.74=h6bb024c_0
++  - cycler=0.10.0=py38_0
++  - dbus=1.13.18=hb2f20db_0
++  - debugpy=1.4.1=py38h709712a_0
++  - decorator=5.1.0=pyhd8ed1ab_0
++  - defusedxml=0.7.1=pyhd8ed1ab_0
++  - entrypoints=0.3=pyhd8ed1ab_1003
++  - expat=2.4.1=h2531618_2
++  - fontconfig=2.13.1=h6c09931_0
++  - fonttools=4.25.0=pyhd3eb1b0_0
++  - freetype=2.10.4=h5ab3b9f_0
++  - future=0.18.2=py38_1
++  - glib=2.69.1=h5202010_0
++  - gst-plugins-base=1.14.0=h8213a91_2
++  - gstreamer=1.14.0=h28cd5cc_2
++  - icu=58.2=he6710b0_3
++  - idna=3.2=pyhd3eb1b0_0
++  - importlib-metadata=4.8.1=py38h578d9bd_0
++  - intel-openmp=2021.3.0=h06a4308_3350
++  - ipykernel=6.4.1=py38he5a9106_0
++  - ipython=7.28.0=py38he5a9106_0
++  - ipython_genutils=0.2.0=py_1
++  - ipywidgets=7.6.5=pyhd8ed1ab_0
++  - jedi=0.18.0=py38h578d9bd_2
++  - jinja2=3.0.1=pyhd3eb1b0_0
++  - jpeg=9d=h7f8727e_0
++  - jsonschema=4.1.0=pyhd8ed1ab_0
++  - jupyter=1.0.0=py38h578d9bd_6
++  - jupyter_client=7.0.6=pyhd8ed1ab_0
++  - jupyter_console=6.4.0=pyhd8ed1ab_0
++  - jupyter_core=4.8.1=py38h578d9bd_0
++  - jupyterlab_widgets=1.0.2=pyhd8ed1ab_0
++  - kiwisolver=1.3.1=py38h2531618_0
++  - lcms2=2.12=h3be6417_0
++  - ld_impl_linux-64=2.35.1=h7274673_9
++  - libffi=3.3=he6710b0_2
++  - libgcc-ng=9.3.0=h5101ec6_17
++  - libgomp=9.3.0=h5101ec6_17
++  - libpng=1.6.37=hbc83047_0
++  - libprotobuf=3.17.2=h4ff587b_1
++  - libsodium=1.0.18=h36c2ea0_1
++  - libstdcxx-ng=9.3.0=hd4cf53a_17
++  - libtiff=4.2.0=h85742a9_0
++  - libuuid=1.0.3=h7f8727e_2
++  - libuv=1.40.0=h7b6447c_0
++  - libwebp-base=1.2.0=h27cfd23_0
++  - libxcb=1.14=h7b6447c_0
++  - libxml2=2.9.12=h03d6c58_0
++  - lz4-c=1.9.3=h295c915_1
++  - markupsafe=2.0.1=py38h27cfd23_0
++  - matplotlib=3.4.2=py38h06a4308_0
++  - matplotlib-base=3.4.2=py38hab158f2_0
++  - matplotlib-inline=0.1.3=pyhd8ed1ab_0
++  - mistune=0.8.4=py38h497a2fe_1004
++  - mkl=2021.3.0=h06a4308_520
++  - mkl-service=2.4.0=py38h7f8727e_0
++  - mkl_fft=1.3.1=py38hd3c417c_0
++  - mkl_random=1.2.2=py38h51133e4_0
++  - munkres=1.1.4=py_0
++  - mypy_extensions=0.4.3=py38_0
++  - nbconvert=5.6.1=pyhd8ed1ab_2
++  - nbformat=5.1.3=pyhd8ed1ab_0
++  - ncurses=6.2=he6710b0_1
++  - nest-asyncio=1.5.1=pyhd8ed1ab_0
++  - ninja=1.10.2=hff7bd54_1
++  - notebook=6.4.4=pyha770c72_0
++  - numpy=1.21.2=py38h20f2e39_0
++  - numpy-base=1.21.2=py38h79a1101_0
++  - olefile=0.46=pyhd3eb1b0_0
++  - openjpeg=2.4.0=h3ad879b_0
++  - openssl=1.1.1l=h7f8727e_0
++  - packaging=21.0=pyhd3eb1b0_0
++  - pandocfilters=1.5.0=pyhd8ed1ab_0
++  - parso=0.8.2=pyhd8ed1ab_0
++  - pathspec=0.7.0=py_0
++  - pcre=8.45=h295c915_0
++  - pexpect=4.8.0=pyh9f0ad1d_2
++  - pickleshare=0.7.5=py_1003
++  - prometheus_client=0.11.0=pyhd8ed1ab_0
++  - prompt-toolkit=3.0.20=pyha770c72_0
++  - prompt_toolkit=3.0.20=hd8ed1ab_0
++  - ptyprocess=0.7.0=pyhd3deb0d_0
++  - pycparser=2.20=py_2
++  - pygments=2.10.0=pyhd8ed1ab_0
++  - pyopenssl=20.0.1=pyhd3eb1b0_1
++  - pyparsing=2.4.7=pyhd3eb1b0_0
++  - pyqt=5.9.2=py38h05f1152_4
++  - pyrsistent=0.17.3=py38h497a2fe_2
++  - pysocks=1.7.1=py38h06a4308_0
++  - python=3.8.12=h12debd9_0
++  - python-dateutil=2.8.2=pyhd3eb1b0_0
++  - python_abi=3.8=2_cp38
++  - pytz=2021.3=pyhd3eb1b0_0
++  - pyzmq=19.0.2=py38ha71036d_2
++  - qt=5.9.7=h5867ecd_1
++  - qtconsole=5.1.1=pyhd8ed1ab_0
++  - qtpy=1.11.2=pyhd8ed1ab_0
++  - readline=8.1=h27cfd23_0
++  - regex=2021.8.3=py38h7f8727e_0
++  - requests=2.26.0=pyhd3eb1b0_0
++  - send2trash=1.8.0=pyhd8ed1ab_0
++  - setuptools=58.0.4=py38h06a4308_0
++  - sip=4.19.13=py38he6710b0_0
++  - six=1.16.0=pyhd3eb1b0_0
++  - sqlite=3.36.0=hc218d9a_0
++  - terminado=0.12.1=py38h578d9bd_0
++  - testpath=0.5.0=pyhd8ed1ab_0
++  - tk=8.6.11=h1ccaba5_0
++  - toml=0.10.2=pyhd3eb1b0_0
++  - tornado=6.1=py38h27cfd23_0
++  - traitlets=5.1.0=pyhd8ed1ab_0
++  - typed-ast=1.4.3=py38h7f8727e_1
++  - typing_extensions=3.10.0.2=pyh06a4308_0
++  - urllib3=1.26.7=pyhd3eb1b0_0
++  - wcwidth=0.2.5=pyh9f0ad1d_2
++  - webencodings=0.5.1=py_1
++  - wheel=0.37.0=pyhd3eb1b0_1
++  - widgetsnbextension=3.5.1=py38h578d9bd_4
++  - xz=5.2.5=h7b6447c_0
++  - zeromq=4.3.4=h9c3ff4c_0
++  - zipp=3.6.0=pyhd8ed1ab_0
++  - zlib=1.2.11=h7b6447c_3
++  - zstd=1.4.9=haebb681_0
++  - pip:
++    - autopep8==1.6.0
++    - black==21.9b0
++    - detectron2==0.5+cu111
++    - fvcore==0.1.5.post20211015
++    - hydra-core==1.1.1
++    - oauthlib==3.1.1
++    - omegaconf==2.1.1
++    - opencv-python==4.5.3.56
++    - pillow==8.4.0
++    - pip==21.3.1
++    - protobuf==3.9.0
++    - pycocotools==2.0.2
++    - pycodestyle==2.8.0
++    - tensorboard==2.7.0
++    - tensorboard-data-server==0.6.1
++    - torch==1.9.1+cu111
++    - torchaudio==0.9.1
++    - torchmetrics==0.5.1
++    - torchvision==0.10.1+cu111
++    - wandb==0.12.4
++prefix: /media/indika/Sync/anaconda3/envs/detectron2
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/config.yaml b/V2/wandb/run-20211029_181623-oq3sf9nl/files/config.yaml
+new file mode 100644
+index 0000000..8493969
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/config.yaml
+@@ -0,0 +1,52 @@
++wandb_version: 1
++
++BASE_LR:
++  desc: null
++  value: 0.1
++BATCH_SIZE_PER_IMAGE:
++  desc: null
++  value: 8
++EVAL_PERIOD:
++  desc: null
++  value: 125
++IMS_PER_BATCH:
++  desc: null
++  value: 1
++MAX_ITER:
++  desc: null
++  value: 125
++MODEL:
++  desc: null
++  value: COCO-Detection/fast_rcnn_R_50_FPN_1x.yaml
++NAME:
++  desc: null
++  value: '{''BASE_LR'': 0.1, ''BATCH_SIZE_PER_IMAGE'': 8, ''CREATE_TARGET_AND_PREDS'':
++    55, ''EVAL_PERIOD'': 125, ''IMS_PER_BATCH'': 1, ''LABELS'': [''Card''], ''MAX_ITER'':
++    125, ''MODEL'': ''fast_rcnn_R_50_FPN_1x.yaml'', ''SCORE_THRESH_TEST'': 0.625}'
++SCORE_THRESH_TEST:
++  desc: null
++  value: 0.625
++_wandb:
++  desc: null
++  value:
++    cli_version: 0.12.4
++    code_path: code/V2/run.py
++    framework: torch
++    is_jupyter_run: false
++    is_kaggle_kernel: false
++    python_version: 3.8.12
++    start_time: 1635511583
++    t:
++      1:
++      - 1
++      - 5
++      2:
++      - 1
++      - 5
++      3:
++      - 13
++      - 16
++      4: 3.8.12
++      5: 0.12.4
++      8:
++      - 5
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/diff.patch b/V2/wandb/run-20211029_181623-oq3sf9nl/files/diff.patch
+new file mode 100644
+index 0000000..ce8728b
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/diff.patch
+@@ -0,0 +1,163 @@
++diff --git a/V2/Model.py b/V2/Model.py
++index b1962da..d464033 100644
++--- a/V2/Model.py
+++++ b/V2/Model.py
++@@ -99,12 +99,16 @@ class Model:
++             DatasetCatalog.register(
++                 "data", lambda: self.load_data()
++             )  # Registering the training data
++-            MetadataCatalog.get("data").set(thing_classes=self.labels)  # Adding the labels
+++            MetadataCatalog.get("data").set(
+++                thing_classes=self.labels
+++            )  # Adding the labels
++             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
++             DatasetCatalog.register(
++                 "test", lambda: self.load_data(test=True)
++             )  # Registering the test data
++-            MetadataCatalog.get("test").set(thing_classes=self.labels)  # Adding the labels
+++            MetadataCatalog.get("test").set(
+++                thing_classes=self.labels
+++            )  # Adding the labels
++             self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
++         except:
++             pass
++@@ -638,7 +642,7 @@ class Param_Tunning:
++         ]
++         params_not_in_required_labels = []
++ 
++-        for required_label in tqdm(list(required_labels.keys())):
+++        for required_label in tqdm(list(required_labels)):
++             if required_label not in list(params.keys()):
++                 params_not_in_required_labels.append(required_label)
++         if params_not_in_required_labels != []:
++@@ -651,27 +655,24 @@ class Param_Tunning:
++         """
++         models = {"Model": [], "Metrics_COCO": [], "Metrics_File": []}
++         for param in tqdm(self.params):
++-            try:
++-                model = Model(
++-                    base_lr=param["BASE_LR"],
++-                    labels=param["LABELS"],
++-                    max_iter=param["MAX_ITER"],
++-                    eval_period=param["EVAL_PERIOD"],
++-                    ims_per_batch=param["IMS_PER_BATCH"],
++-                    batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
++-                    score_thresh_test=param["SCORE_THRESH_TEST"],
++-                    model=param["MODEL"],
++-                    name=str(param),
++-                    create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
++-                )
++-                metrics = model.train()
++-                metrics_coco = metrics["metrics_coco"]
++-                metrics_file = metrics["metrics_file"]
++-                models["Model"].append(param["MODEL"])
++-                models["Metrics_COCO"].append(metrics_coco)
++-                models["Metrics_File"].append(metrics_file)
++-            except:
++-                pass
+++            model = Model(
+++                base_lr=param["BASE_LR"],
+++                labels=param["LABELS"],
+++                max_iter=param["MAX_ITER"],
+++                eval_period=param["EVAL_PERIOD"],
+++                ims_per_batch=param["IMS_PER_BATCH"],
+++                batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
+++                score_thresh_test=param["SCORE_THRESH_TEST"],
+++                model="COCO-Detection/" + param["MODEL"],
+++                name=str(param),
+++                create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
+++            )
+++            metrics = model.train()
+++            metrics_coco = metrics["metrics_coco"]
+++            metrics_file = metrics["metrics_file"]
+++            models["Model"].append(param["MODEL"])
+++            models["Metrics_COCO"].append(metrics_coco)
+++            models["Metrics_File"].append(metrics_file)
++         models = pd.DataFrame(models)
++         models.to_csv("./tune.csv")
++         return models
++diff --git a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 b/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0
++deleted file mode 100644
++index 0c6fbe6..0000000
++Binary files a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 and /dev/null differ
++diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
++deleted file mode 100644
++index da0e9f9..0000000
++--- a/V2/output/last_checkpoint
+++++ /dev/null
++@@ -1 +0,0 @@
++-model_final.pth
++\ No newline at end of file
++diff --git a/V2/output/metrics.json b/V2/output/metrics.json
++deleted file mode 100644
++index cb9e043..0000000
++--- a/V2/output/metrics.json
+++++ /dev/null
++@@ -1,13 +0,0 @@
++-{"data_time": 0.0024713455000267004, "eta_seconds": 242.86247767999754, "fast_rcnn/cls_accuracy": 0.3515625, "fast_rcnn/false_negative": 0.3380952380952381, "fast_rcnn/fg_cls_accuracy": 0.6619047619047619, "iteration": 19, "loss_box_reg": 0.41146324574947357, "loss_cls": 0.7392567098140717, "loss_rpn_cls": 0.020119073800742626, "loss_rpn_loc": 0.008557552937418222, "lr": 1.9231e-05, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 1.0559238159999893, "total_loss": 1.199336625635624}
++-{"data_time": 0.0023898784999971667, "eta_seconds": 219.56037505500205, "fast_rcnn/cls_accuracy": 0.869140625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.33894744515419006, "loss_cls": 0.533970057964325, "loss_rpn_cls": 0.021526054479181767, "loss_rpn_loc": 0.0077283557038754225, "lr": 3.9211e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0000388769999802, "total_loss": 0.9420970119535923}
++-{"data_time": 0.002844556500008366, "eta_seconds": 198.64986314500186, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.3618171513080597, "loss_cls": 0.3491041511297226, "loss_rpn_cls": 0.01204870780929923, "loss_rpn_loc": 0.007542710052803159, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 251.0, "rpn/num_pos_anchors": 5.0, "time": 1.0513729945000136, "total_loss": 0.7109228377230465}
++-{"data_time": 0.002351157000020976, "eta_seconds": 179.50704871999818, "fast_rcnn/cls_accuracy": 0.9296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.24807123839855194, "loss_cls": 0.27089114487171173, "loss_rpn_cls": 0.060913536697626114, "loss_rpn_loc": 0.007144225295633078, "lr": 7.9171e-05, "roi_head/num_bg_samples": 119.0, "roi_head/num_fg_samples": 9.0, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.095190236999997, "total_loss": 0.6000422104261816}
++-{"data_time": 0.002303852000011375, "eta_seconds": 158.5481184749952, "fast_rcnn/cls_accuracy": 0.90234375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.37137627601623535, "loss_cls": 0.27069205045700073, "loss_rpn_cls": 0.01833363715559244, "loss_rpn_loc": 0.007090216968208551, "lr": 9.9151e-05, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.056987456499968, "total_loss": 0.7003956531407312}
++-{"data_time": 0.002605340000002343, "eta_seconds": 137.40836934499583, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.3501961678266525, "loss_cls": 0.24755674600601196, "loss_rpn_cls": 0.03569256328046322, "loss_rpn_loc": 0.0065877537708729506, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0775407019999932, "total_loss": 0.6915035428246483}
++-{"data_time": 0.0023761640000259376, "eta_seconds": 116.00193643499779, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.3321911245584488, "loss_cls": 0.27787481248378754, "loss_rpn_cls": 0.03818380646407604, "loss_rpn_loc": 0.006203859578818083, "lr": 0.000139111, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0447581145000129, "total_loss": 0.7225660970434546}
++-{"data_time": 0.002289748000009695, "eta_seconds": 94.91067526499819, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.37014663219451904, "loss_cls": 0.2503085359930992, "loss_rpn_cls": 0.022741314955055714, "loss_rpn_loc": 0.008183888625353575, "lr": 0.000159091, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0550466784999912, "total_loss": 0.6615875260904431}
++-{"data_time": 0.0024869095000212837, "eta_seconds": 73.98912195499776, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.3416535407304764, "loss_cls": 0.20821541547775269, "loss_rpn_cls": 0.012514203786849976, "loss_rpn_loc": 0.007641490548849106, "lr": 0.000179071, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.1015214909999713, "total_loss": 0.5950205000117421}
++-{"data_time": 0.002674328000011883, "eta_seconds": 52.728152924998994, "fast_rcnn/cls_accuracy": 0.923828125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.27223585546016693, "loss_cls": 0.1997024491429329, "loss_rpn_cls": 0.0211806483566761, "loss_rpn_loc": 0.005561774130910635, "lr": 0.000199051, "roi_head/num_bg_samples": 118.25, "roi_head/num_fg_samples": 9.75, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.0192338319999976, "total_loss": 0.4901804425753653}
++-{"data_time": 0.0025132275000032678, "eta_seconds": 31.636891754999397, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.36517906188964844, "loss_cls": 0.23198173195123672, "loss_rpn_cls": 0.014427084941416979, "loss_rpn_loc": 0.006507641403004527, "lr": 0.000219031, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 251.75, "rpn/num_pos_anchors": 4.25, "time": 1.0292666254999858, "total_loss": 0.6094998904736713}
++-{"data_time": 0.002412913000057415, "eta_seconds": 10.586967729999799, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9622507122507122, "fast_rcnn/fg_cls_accuracy": 0.03774928774928775, "iteration": 239, "loss_box_reg": 0.2760148346424103, "loss_cls": 0.19814912229776382, "loss_rpn_cls": 0.014830647502094507, "loss_rpn_loc": 0.009588066954165697, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 117.5, "roi_head/num_fg_samples": 10.5, "rpn/num_neg_anchors": 251.25, "rpn/num_pos_anchors": 4.75, "time": 1.1579277230000002, "total_loss": 0.503135692095384}
++-{"data_time": 0.0026069874999734566, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.931640625, "fast_rcnn/false_negative": 0.9864864864864865, "fast_rcnn/fg_cls_accuracy": 0.013513513513513514, "iteration": 249, "loss_box_reg": 0.25686195492744446, "loss_cls": 0.1974724605679512, "loss_rpn_cls": 0.024123243056237698, "loss_rpn_loc": 0.010637202765792608, "lr": 0.000249001, "roi_head/num_bg_samples": 118.5, "roi_head/num_fg_samples": 9.5, "rpn/num_neg_anchors": 249.25, "rpn/num_pos_anchors": 6.75, "time": 1.1218074584999158, "total_loss": 0.48856362886726856}
++diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
++deleted file mode 100644
++index e69de29..0000000
++diff --git a/V2/run.py b/V2/run.py
++index 6a21847..5e4d213 100644
++--- a/V2/run.py
+++++ b/V2/run.py
++@@ -30,8 +30,8 @@ params = {
++     ],
++     "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
++ }
++-model = Model()
++-model.train()
+++# model = Model()
+++# model.train()
++ pt = Param_Tunning(params)
++ pt.tune()
++ # torch.save(model.train(),'./model.pt')
++diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
++index bdd0614..f8d927a 120000
++--- a/V2/wandb/latest-run
+++++ b/V2/wandb/latest-run
++@@ -1 +1 @@
++-run-20211029_175737-18w958uw
++\ No newline at end of file
+++run-20211029_181623-oq3sf9nl
++\ No newline at end of file
++diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++index 099fa7b..20d3ca0 100644
++--- a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+++++ b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++@@ -38,6 +38,10 @@ _wandb:
++       1:
++       - 1
++       - 5
+++      2:
+++      - 1
+++      - 3
+++      - 5
++       3:
++       - 13
++       - 16
++diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++index 9e26dfe..5c28c9c 100644
++--- a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+++++ b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++@@ -1 +1 @@
++-{}
++\ No newline at end of file
+++{"_wandb": {"runtime": 1020}}
++\ No newline at end of file
++diff --git a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb
++index 47bdc52..20979e1 100644
++Binary files a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb and b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb differ
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/requirements.txt b/V2/wandb/run-20211029_181623-oq3sf9nl/files/requirements.txt
+new file mode 100644
+index 0000000..8b695ab
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/requirements.txt
+@@ -0,0 +1,289 @@
++absl-py==0.12.0
++aiohttp-cors==0.7.0
++aiohttp==3.7.4.post0
++aioredis==1.3.1
++altair==4.1.0
++aniso8601==9.0.1
++antlr4-python3-runtime==4.8
++anyio==3.3.0
++appdirs==1.4.4
++argcomplete==1.12.3
++argon2-cffi==20.1.0
++astor==0.8.1
++astunparse==1.6.3
++async-timeout==3.0.1
++attrs==21.2.0
++autopep8==1.6.0
++babel==2.9.1
++backcall==0.2.0
++backoff==1.11.1
++backports.functools-lru-cache==1.6.4
++backports.zoneinfo==0.2.1
++base58==2.1.0
++black==21.9b0
++bleach==4.1.0
++blessings==1.7
++blinker==1.4
++boto3==1.18.55
++botocore==1.21.55
++brotlipy==0.7.0
++cachetools==4.2.1
++certifi==2021.5.30
++cffi==1.14.6
++cfgv==3.3.0
++charset-normalizer==2.0.4
++clearml==1.0.4
++click==8.0.1
++cloudpickle==1.6.0
++configparser==5.0.2
++cryptography==3.4.8
++cycler==0.10.0
++cython==0.29.23
++debugpy==1.5.1
++decorator==5.1.0
++defusedxml==0.7.1
++deprecated==1.2.13
++detectron2==0.5+cu111
++dill==0.3.4
++distlib==0.3.2
++distro==1.6.0
++dlib==19.22.0
++dnspython==1.16.0
++docker-pycreds==0.4.0
++entrypoints==0.3
++et-xmlfile==1.1.0
++eventlet==0.32.0
++face-recognition-models==0.3.0
++face-recognition==1.3.0
++fiftyone-brain==0.7.1
++fiftyone-db==0.3.0
++fiftyone==0.13.3
++filelock==3.0.12
++flask-restful==0.3.9
++flask-simple-geoip==0.2.4
++flask==2.0.1
++flatbuffers==1.12
++fonttools==4.25.0
++furl==2.1.2
++future==0.18.2
++fvcore==0.1.5.post20211015
++gast==0.3.3
++gitdb==4.0.7
++gitpython==3.1.14
++glob2==0.7
++google-api-core==1.30.0
++google-auth-oauthlib==0.4.4
++google-auth==1.28.0
++google-pasta==0.2.0
++google-trans-new==1.1.9
++googleapis-common-protos==1.53.0
++gpustat==0.6.0
++greenlet==1.1.2
++grpcio==1.32.0
++gunicorn==20.1.0
++h11==0.12.0
++h5py==2.10.0
++hiredis==2.0.0
++httpcore==0.13.7
++httpx==0.19.0
++humanfriendly==9.2
++hydra-core==1.1.1
++identify==2.2.10
++idna==3.2
++imageio==2.9.0
++importlib-metadata==4.6.4
++importlib-resources==5.1.4
++install==1.3.4
++iopath==0.1.8
++ipaddress==1.0.23
++ipykernel==6.4.1
++ipython-genutils==0.2.0
++ipython==7.28.0
++ipywidgets==7.6.5
++itsdangerous==2.0.1
++jedi==0.18.0
++jinja2==3.0.1
++jmespath==0.10.0
++joblib==1.0.1
++json5==0.9.5
++jsonschema==4.1.0
++jupyter-client==7.0.6
++jupyter-console==6.4.0
++jupyter-core==4.8.1
++jupyter-server==1.8.0
++jupyter==1.0.0
++jupyterlab-server==2.6.0
++jupyterlab-widgets==1.0.2
++jupyterlab==3.0.16
++kaleido==0.2.1
++keras-preprocessing==1.1.2
++keras==2.4.3
++kiwisolver==1.3.1
++livereload==2.6.3
++lxml==4.6.3
++markdown==3.3.4
++markupsafe==2.0.1
++matplotlib-inline==0.1.3
++matplotlib==3.4.3
++mistune==0.8.4
++mkl-fft==1.3.1
++mkl-random==1.2.2
++mkl-service==2.4.0
++mongoengine==0.20.0
++motor==2.5.1
++msgpack==1.0.2
++multidict==5.1.0
++munkres==1.1.4
++mypy-extensions==0.4.3
++mysql-connector-python==8.0.26
++nbclassic==0.3.1
++nbconvert==5.6.1
++nbformat==5.1.3
++ndjson==0.3.1
++nest-asyncio==1.5.1
++networkx==2.6.3
++nltk==3.6.5
++nodeenv==1.6.0
++notebook==6.4.4
++numpy==1.21.1
++nvidia-ml-py3==7.352.0
++nvidia-ml-py==11.450.51
++nvitop==0.4.4.1
++oauthlib==3.1.1
++olefile==0.46
++omegaconf==2.1.1
++opencensus-context==0.1.2
++opencensus==0.7.13
++opencv-python-headless==4.5.3.56
++opencv-python==4.5.3.56
++openpyxl==3.0.9
++opt-einsum==3.3.0
++orderedmultidict==1.0.1
++packaging==21.0
++pandas==1.3.2
++pandocfilters==1.5.0
++parso==0.8.2
++pathlib2==2.3.5
++pathspec==0.9.0
++pathtools==0.1.2
++patool==1.12
++pexpect==4.8.0
++phonenumbers==8.12.29
++pickleshare==0.7.5
++pillow==8.3.2
++pip==21.3.1
++platformdirs==2.3.0
++plotly==5.2.1
++pluggy==0.13.1
++portalocker==2.3.0
++pprintpp==0.4.0
++pre-commit==2.13.0
++prometheus-client==0.11.0
++promise==2.3
++prompt-toolkit==3.0.20
++protobuf==3.9.0
++psutil==5.8.0
++ptyprocess==0.7.0
++py-spy==0.3.7
++py==1.10.0
++pyarrow==5.0.0
++pyasn1-modules==0.2.8
++pyasn1==0.4.8
++pycocotools==2.0.2
++pycodestyle==2.8.0
++pycparser==2.20
++pydantic==1.8.2
++pydeck==0.7.0
++pydot==1.4.2
++pygments==2.10.0
++pyopenssl==20.0.1
++pyparsing==2.4.7
++pyrsistent==0.17.3
++pysocks==1.7.1
++python-dateutil==2.8.2
++pytz==2021.1
++pywavelets==1.1.1
++pyyaml==5.1
++pyzmq==19.0.2
++qtconsole==5.1.1
++qtpy==1.11.2
++ray==1.4.1
++redis==3.5.3
++regex==2021.8.3
++requests-oauthlib==1.3.0
++requests==2.26.0
++retrying==1.3.3
++rfc3986==1.5.0
++rsa==4.7.2
++s3transfer==0.5.0
++scikit-image==0.18.3
++scikit-learn==0.24.1
++scipy==1.6.2
++seaborn==0.11.1
++send2trash==1.8.0
++sentry-sdk==1.0.0
++setuptools==58.0.4
++shortuuid==1.0.1
++simple-geoip==0.1.1
++sip==4.19.13
++six==1.16.0
++sklearn==0.0
++smmap==4.0.0
++sniffio==1.2.0
++sortedcontainers==2.4.0
++streamlit==0.88.0
++stripe==2.60.0
++subprocess32==3.5.4
++tabulate==0.8.9
++tenacity==8.0.1
++tensorboard-data-server==0.6.1
++tensorboard-plugin-wit==1.8.0
++tensorboard==2.7.0
++tensorboardx==2.4
++tensorflow-estimator==2.4.0
++tensorflow-hub==0.11.0
++tensorflow==2.4.1
++tensorrt==0.0.1
++termcolor==1.1.0
++terminado==0.12.1
++testpath==0.5.0
++threadpoolctl==2.1.0
++tifffile==2021.8.30
++toml==0.10.2
++tomli==1.2.1
++toolz==0.11.1
++torch-tb-profiler==0.2.0
++torch==1.9.1+cu111
++torchaudio==0.9.1
++torchmetrics==0.5.1
++torchvision==0.10.1+cu111
++tornado==6.1
++tox==3.23.1
++tqdm==4.62.0
++traitlets==5.1.0
++translate==3.5.0
++twilio==6.63.0
++typed-ast==1.4.3
++typing-extensions==3.10.0.0
++tzlocal==3.0
++universal-analytics-python3==1.1.1
++urllib3==1.26.6
++validators==0.18.2
++virtualenv==20.4.7
++voxel51-eta==0.5.3
++wandb==0.12.4
++watchdog==2.1.5
++wcwidth==0.2.5
++webencodings==0.5.1
++websocket-client==1.0.1
++werkzeug==2.0.1
++wheel==0.36.2
++widgetsnbextension==3.5.1
++wrapt==1.12.1
++xeus-python-shell==0.1.7
++xeus-python==0.13.5
++xmltodict==0.12.0
++yacs==0.1.8
++yarl==1.6.3
++yaspin==2.1.0
++zipp==3.5.0
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-metadata.json b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-metadata.json
+new file mode 100644
+index 0000000..1e8d4dd
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-metadata.json
+@@ -0,0 +1,24 @@
++{
++    "os": "Linux-5.11.0-38-generic-x86_64-with-glibc2.17",
++    "python": "3.8.12",
++    "heartbeatAt": "2021-10-29T12:46:26.149725",
++    "startedAt": "2021-10-29T12:46:23.006528",
++    "docker": null,
++    "gpu": "GeForce RTX 3060",
++    "gpu_count": 1,
++    "cpu_count": 6,
++    "cuda": null,
++    "args": [],
++    "state": "running",
++    "program": "run.py",
++    "codePath": "V2/run.py",
++    "git": {
++        "remote": "https://github.com/Programmer-RD-AI/Find-Card.git",
++        "commit": "56410c130efe6236befb27ac2a6811b91a9e4e81"
++    },
++    "email": "aigithub@gmail.com",
++    "root": "/media/indika/Sync/Programming/Projects/Python/Rest-Api/Car-Object-Detection-REST-API/Find-Card",
++    "host": "programmer-rd-ai",
++    "username": "indika",
++    "executable": "/media/indika/Sync/anaconda3/envs/detectron2/bin/python3"
++}
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-summary.json b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-summary.json
+new file mode 100644
+index 0000000..9fd7927
+--- /dev/null
++++ b/V2/wandb/run-20211029_181623-oq3sf9nl/files/wandb-summary.json
+@@ -0,0 +1 @@
++{"_wandb": {"runtime": 131}}
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_181623-oq3sf9nl/run-oq3sf9nl.wandb b/V2/wandb/run-20211029_181623-oq3sf9nl/run-oq3sf9nl.wandb
+new file mode 100644
+index 0000000..9c0eff4
+Binary files /dev/null and b/V2/wandb/run-20211029_181623-oq3sf9nl/run-oq3sf9nl.wandb differ
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/code/V2/run.py b/V2/wandb/run-20211029_182019-19fkojne/files/code/V2/run.py
+new file mode 100644
+index 0000000..c2e72d7
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/code/V2/run.py
+@@ -0,0 +1,38 @@
++from Model import *
++
++params = {
++    "MODEL": [
++        "fast_rcnn_R_50_FPN_1x.yaml",
++        # "faster_rcnn_R_50_C4_1x.yaml",
++        # "faster_rcnn_R_50_C4_3x.yaml",
++        # "faster_rcnn_R_50_DC5_1x.yaml",
++        # "faster_rcnn_R_50_DC5_3x.yaml",
++        # "retinanet_R_50_FPN_1x.py",
++        # "retinanet_R_50_FPN_1x.yaml",
++        # "retinanet_R_50_FPN_3x.yaml",
++        # "rpn_R_50_C4_1x.yaml",
++        # "rpn_R_50_FPN_1x.yaml",
++        # "faster_rcnn_R_50_FPN_1x.yaml",
++        # "faster_rcnn_R_50_FPN_3x.yaml",
++        # "faster_rcnn_R_101_DC5_3x.yaml",
++        # "faster_rcnn_R_101_FPN_3x.yaml",
++        # "faster_rcnn_X_101_32x8d_FPN_3x.yaml",
++    ],
++    "MAX_ITER": [125],
++    "LABELS": [["Card"]],
++    "CREATE_TARGET_AND_PREDS": [55],
++    "EVAL_PERIOD": [125],
++    "SCORE_THRESH_TEST": [0.625],
++    "BASE_LR": [0.1, 0.01, 0.001, 0.0001],
++    "IMS_PER_BATCH": [
++        1,
++        2,
++    ],
++    "BATCH_SIZE_PER_IMAGE": [8, 16, 32, 64, 128],
++}
++model = Model()
++model.train()
++# pt = Param_Tunning(params)
++# pt.tune()
++# torch.save(model.train(),'./model.pt')
++# torch.save(model.train(),'./model.pth')
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/conda-environment.yaml b/V2/wandb/run-20211029_182019-19fkojne/files/conda-environment.yaml
+new file mode 100644
+index 0000000..689f3ef
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/conda-environment.yaml
+@@ -0,0 +1,170 @@
++name: detectron2
++channels:
++  - nvidia
++  - conda-forge
++  - defaults
++dependencies:
++  - _libgcc_mutex=0.1=main
++  - _openmp_mutex=4.5=1_gnu
++  - appdirs=1.4.4=pyhd3eb1b0_0
++  - argon2-cffi=20.1.0=py38h27cfd23_1
++  - attrs=21.2.0=pyhd3eb1b0_0
++  - backcall=0.2.0=pyh9f0ad1d_0
++  - backports=1.0=py_2
++  - backports.functools_lru_cache=1.6.4=pyhd8ed1ab_0
++  - blas=1.0=mkl
++  - bleach=4.1.0=pyhd8ed1ab_0
++  - blinker=1.4=py38h06a4308_0
++  - brotli=1.0.9=he6710b0_2
++  - brotlipy=0.7.0=py38h27cfd23_1003
++  - ca-certificates=2021.9.30=h06a4308_1
++  - certifi=2021.10.8=py38h06a4308_0
++  - cffi=1.14.6=py38h400218f_0
++  - charset-normalizer=2.0.4=pyhd3eb1b0_0
++  - click=8.0.1=pyhd3eb1b0_0
++  - cryptography=3.4.8=py38hd23ed53_0
++  - cudatoolkit=11.1.74=h6bb024c_0
++  - cycler=0.10.0=py38_0
++  - dbus=1.13.18=hb2f20db_0
++  - debugpy=1.4.1=py38h709712a_0
++  - decorator=5.1.0=pyhd8ed1ab_0
++  - defusedxml=0.7.1=pyhd8ed1ab_0
++  - entrypoints=0.3=pyhd8ed1ab_1003
++  - expat=2.4.1=h2531618_2
++  - fontconfig=2.13.1=h6c09931_0
++  - fonttools=4.25.0=pyhd3eb1b0_0
++  - freetype=2.10.4=h5ab3b9f_0
++  - future=0.18.2=py38_1
++  - glib=2.69.1=h5202010_0
++  - gst-plugins-base=1.14.0=h8213a91_2
++  - gstreamer=1.14.0=h28cd5cc_2
++  - icu=58.2=he6710b0_3
++  - idna=3.2=pyhd3eb1b0_0
++  - importlib-metadata=4.8.1=py38h578d9bd_0
++  - intel-openmp=2021.3.0=h06a4308_3350
++  - ipykernel=6.4.1=py38he5a9106_0
++  - ipython=7.28.0=py38he5a9106_0
++  - ipython_genutils=0.2.0=py_1
++  - ipywidgets=7.6.5=pyhd8ed1ab_0
++  - jedi=0.18.0=py38h578d9bd_2
++  - jinja2=3.0.1=pyhd3eb1b0_0
++  - jpeg=9d=h7f8727e_0
++  - jsonschema=4.1.0=pyhd8ed1ab_0
++  - jupyter=1.0.0=py38h578d9bd_6
++  - jupyter_client=7.0.6=pyhd8ed1ab_0
++  - jupyter_console=6.4.0=pyhd8ed1ab_0
++  - jupyter_core=4.8.1=py38h578d9bd_0
++  - jupyterlab_widgets=1.0.2=pyhd8ed1ab_0
++  - kiwisolver=1.3.1=py38h2531618_0
++  - lcms2=2.12=h3be6417_0
++  - ld_impl_linux-64=2.35.1=h7274673_9
++  - libffi=3.3=he6710b0_2
++  - libgcc-ng=9.3.0=h5101ec6_17
++  - libgomp=9.3.0=h5101ec6_17
++  - libpng=1.6.37=hbc83047_0
++  - libprotobuf=3.17.2=h4ff587b_1
++  - libsodium=1.0.18=h36c2ea0_1
++  - libstdcxx-ng=9.3.0=hd4cf53a_17
++  - libtiff=4.2.0=h85742a9_0
++  - libuuid=1.0.3=h7f8727e_2
++  - libuv=1.40.0=h7b6447c_0
++  - libwebp-base=1.2.0=h27cfd23_0
++  - libxcb=1.14=h7b6447c_0
++  - libxml2=2.9.12=h03d6c58_0
++  - lz4-c=1.9.3=h295c915_1
++  - markupsafe=2.0.1=py38h27cfd23_0
++  - matplotlib=3.4.2=py38h06a4308_0
++  - matplotlib-base=3.4.2=py38hab158f2_0
++  - matplotlib-inline=0.1.3=pyhd8ed1ab_0
++  - mistune=0.8.4=py38h497a2fe_1004
++  - mkl=2021.3.0=h06a4308_520
++  - mkl-service=2.4.0=py38h7f8727e_0
++  - mkl_fft=1.3.1=py38hd3c417c_0
++  - mkl_random=1.2.2=py38h51133e4_0
++  - munkres=1.1.4=py_0
++  - mypy_extensions=0.4.3=py38_0
++  - nbconvert=5.6.1=pyhd8ed1ab_2
++  - nbformat=5.1.3=pyhd8ed1ab_0
++  - ncurses=6.2=he6710b0_1
++  - nest-asyncio=1.5.1=pyhd8ed1ab_0
++  - ninja=1.10.2=hff7bd54_1
++  - notebook=6.4.4=pyha770c72_0
++  - numpy=1.21.2=py38h20f2e39_0
++  - numpy-base=1.21.2=py38h79a1101_0
++  - olefile=0.46=pyhd3eb1b0_0
++  - openjpeg=2.4.0=h3ad879b_0
++  - openssl=1.1.1l=h7f8727e_0
++  - packaging=21.0=pyhd3eb1b0_0
++  - pandocfilters=1.5.0=pyhd8ed1ab_0
++  - parso=0.8.2=pyhd8ed1ab_0
++  - pathspec=0.7.0=py_0
++  - pcre=8.45=h295c915_0
++  - pexpect=4.8.0=pyh9f0ad1d_2
++  - pickleshare=0.7.5=py_1003
++  - prometheus_client=0.11.0=pyhd8ed1ab_0
++  - prompt-toolkit=3.0.20=pyha770c72_0
++  - prompt_toolkit=3.0.20=hd8ed1ab_0
++  - ptyprocess=0.7.0=pyhd3deb0d_0
++  - pycparser=2.20=py_2
++  - pygments=2.10.0=pyhd8ed1ab_0
++  - pyopenssl=20.0.1=pyhd3eb1b0_1
++  - pyparsing=2.4.7=pyhd3eb1b0_0
++  - pyqt=5.9.2=py38h05f1152_4
++  - pyrsistent=0.17.3=py38h497a2fe_2
++  - pysocks=1.7.1=py38h06a4308_0
++  - python=3.8.12=h12debd9_0
++  - python-dateutil=2.8.2=pyhd3eb1b0_0
++  - python_abi=3.8=2_cp38
++  - pytz=2021.3=pyhd3eb1b0_0
++  - pyzmq=19.0.2=py38ha71036d_2
++  - qt=5.9.7=h5867ecd_1
++  - qtconsole=5.1.1=pyhd8ed1ab_0
++  - qtpy=1.11.2=pyhd8ed1ab_0
++  - readline=8.1=h27cfd23_0
++  - regex=2021.8.3=py38h7f8727e_0
++  - requests=2.26.0=pyhd3eb1b0_0
++  - send2trash=1.8.0=pyhd8ed1ab_0
++  - setuptools=58.0.4=py38h06a4308_0
++  - sip=4.19.13=py38he6710b0_0
++  - six=1.16.0=pyhd3eb1b0_0
++  - sqlite=3.36.0=hc218d9a_0
++  - terminado=0.12.1=py38h578d9bd_0
++  - testpath=0.5.0=pyhd8ed1ab_0
++  - tk=8.6.11=h1ccaba5_0
++  - toml=0.10.2=pyhd3eb1b0_0
++  - tornado=6.1=py38h27cfd23_0
++  - traitlets=5.1.0=pyhd8ed1ab_0
++  - typed-ast=1.4.3=py38h7f8727e_1
++  - typing_extensions=3.10.0.2=pyh06a4308_0
++  - urllib3=1.26.7=pyhd3eb1b0_0
++  - wcwidth=0.2.5=pyh9f0ad1d_2
++  - webencodings=0.5.1=py_1
++  - wheel=0.37.0=pyhd3eb1b0_1
++  - widgetsnbextension=3.5.1=py38h578d9bd_4
++  - xz=5.2.5=h7b6447c_0
++  - zeromq=4.3.4=h9c3ff4c_0
++  - zipp=3.6.0=pyhd8ed1ab_0
++  - zlib=1.2.11=h7b6447c_3
++  - zstd=1.4.9=haebb681_0
++  - pip:
++    - autopep8==1.6.0
++    - black==21.9b0
++    - detectron2==0.5+cu111
++    - fvcore==0.1.5.post20211015
++    - hydra-core==1.1.1
++    - oauthlib==3.1.1
++    - omegaconf==2.1.1
++    - opencv-python==4.5.3.56
++    - pillow==8.4.0
++    - pip==21.3.1
++    - protobuf==3.9.0
++    - pycocotools==2.0.2
++    - pycodestyle==2.8.0
++    - tensorboard==2.7.0
++    - tensorboard-data-server==0.6.1
++    - torch==1.6.0
++    - torchaudio==0.9.1
++    - torchmetrics==0.5.1
++    - torchvision==0.10.1+cu111
++    - wandb==0.12.4
++prefix: /media/indika/Sync/anaconda3/envs/detectron2
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
+new file mode 100644
+index 0000000..4b29dc9
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/config.yaml
+@@ -0,0 +1,51 @@
++wandb_version: 1
++
++BASE_LR:
++  desc: null
++  value: 0.00025
++BATCH_SIZE_PER_IMAGE:
++  desc: null
++  value: 128
++EVAL_PERIOD:
++  desc: null
++  value: 250
++IMS_PER_BATCH:
++  desc: null
++  value: 2
++MAX_ITER:
++  desc: null
++  value: 250
++MODEL:
++  desc: null
++  value: COCO-Detection/faster_rcnn_X_101_32x8d_FPN_3x.yaml
++NAME:
++  desc: null
++  value: baseline
++SCORE_THRESH_TEST:
++  desc: null
++  value: 0.625
++_wandb:
++  desc: null
++  value:
++    cli_version: 0.12.4
++    code_path: code/V2/run.py
++    framework: torch
++    is_jupyter_run: false
++    is_kaggle_kernel: false
++    python_version: 3.8.12
++    start_time: 1635511819
++    t:
++      1:
++      - 1
++      - 5
++      2:
++      - 1
++      - 3
++      - 5
++      3:
++      - 13
++      - 16
++      4: 3.8.12
++      5: 0.12.4
++      8:
++      - 5
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/diff.patch b/V2/wandb/run-20211029_182019-19fkojne/files/diff.patch
+new file mode 100644
+index 0000000..d2da9f0
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/diff.patch
+@@ -0,0 +1,136 @@
++diff --git a/V2/Model.py b/V2/Model.py
++index b1962da..b8e14a5 100644
++--- a/V2/Model.py
+++++ b/V2/Model.py
++@@ -99,12 +99,16 @@ class Model:
++             DatasetCatalog.register(
++                 "data", lambda: self.load_data()
++             )  # Registering the training data
++-            MetadataCatalog.get("data").set(thing_classes=self.labels)  # Adding the labels
+++            MetadataCatalog.get("data").set(
+++                thing_classes=self.labels
+++            )  # Adding the labels
++             self.metadata = MetadataCatalog.get("data")  # Getting the metadata
++             DatasetCatalog.register(
++                 "test", lambda: self.load_data(test=True)
++             )  # Registering the test data
++-            MetadataCatalog.get("test").set(thing_classes=self.labels)  # Adding the labels
+++            MetadataCatalog.get("test").set(
+++                thing_classes=self.labels
+++            )  # Adding the labels
++             self.metadata_test = MetadataCatalog.get("test")  # Getting the metadata
++         except:
++             pass
++@@ -638,7 +642,7 @@ class Param_Tunning:
++         ]
++         params_not_in_required_labels = []
++ 
++-        for required_label in tqdm(list(required_labels.keys())):
+++        for required_label in tqdm(list(required_labels)):
++             if required_label not in list(params.keys()):
++                 params_not_in_required_labels.append(required_label)
++         if params_not_in_required_labels != []:
++@@ -660,7 +664,7 @@ class Param_Tunning:
++                     ims_per_batch=param["IMS_PER_BATCH"],
++                     batch_size_per_image=param["BATCH_SIZE_PER_IMAGE"],
++                     score_thresh_test=param["SCORE_THRESH_TEST"],
++-                    model=param["MODEL"],
+++                    model="COCO-Detection/" + param["MODEL"],
++                     name=str(param),
++                     create_target_and_preds=param["CREATE_TARGET_AND_PREDS"],
++                 )
++@@ -670,8 +674,8 @@ class Param_Tunning:
++                 models["Model"].append(param["MODEL"])
++                 models["Metrics_COCO"].append(metrics_coco)
++                 models["Metrics_File"].append(metrics_file)
++-            except:
++-                pass
+++            except Exception as e:
+++                print(e)
++         models = pd.DataFrame(models)
++         models.to_csv("./tune.csv")
++         return models
++diff --git a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 b/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0
++deleted file mode 100644
++index 0c6fbe6..0000000
++Binary files a/V2/output/events.out.tfevents.1635510582.programmer-rd-ai.24093.0 and /dev/null differ
++diff --git a/V2/output/last_checkpoint b/V2/output/last_checkpoint
++deleted file mode 100644
++index da0e9f9..0000000
++--- a/V2/output/last_checkpoint
+++++ /dev/null
++@@ -1 +0,0 @@
++-model_final.pth
++\ No newline at end of file
++diff --git a/V2/output/metrics.json b/V2/output/metrics.json
++deleted file mode 100644
++index cb9e043..0000000
++--- a/V2/output/metrics.json
+++++ /dev/null
++@@ -1,13 +0,0 @@
++-{"data_time": 0.0024713455000267004, "eta_seconds": 242.86247767999754, "fast_rcnn/cls_accuracy": 0.3515625, "fast_rcnn/false_negative": 0.3380952380952381, "fast_rcnn/fg_cls_accuracy": 0.6619047619047619, "iteration": 19, "loss_box_reg": 0.41146324574947357, "loss_cls": 0.7392567098140717, "loss_rpn_cls": 0.020119073800742626, "loss_rpn_loc": 0.008557552937418222, "lr": 1.9231e-05, "roi_head/num_bg_samples": 114.75, "roi_head/num_fg_samples": 13.25, "rpn/num_neg_anchors": 250.75, "rpn/num_pos_anchors": 5.25, "time": 1.0559238159999893, "total_loss": 1.199336625635624}
++-{"data_time": 0.0023898784999971667, "eta_seconds": 219.56037505500205, "fast_rcnn/cls_accuracy": 0.869140625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 39, "loss_box_reg": 0.33894744515419006, "loss_cls": 0.533970057964325, "loss_rpn_cls": 0.021526054479181767, "loss_rpn_loc": 0.0077283557038754225, "lr": 3.9211e-05, "roi_head/num_bg_samples": 116.25, "roi_head/num_fg_samples": 11.75, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0000388769999802, "total_loss": 0.9420970119535923}
++-{"data_time": 0.002844556500008366, "eta_seconds": 198.64986314500186, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 59, "loss_box_reg": 0.3618171513080597, "loss_cls": 0.3491041511297226, "loss_rpn_cls": 0.01204870780929923, "loss_rpn_loc": 0.007542710052803159, "lr": 5.9190999999999996e-05, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 251.0, "rpn/num_pos_anchors": 5.0, "time": 1.0513729945000136, "total_loss": 0.7109228377230465}
++-{"data_time": 0.002351157000020976, "eta_seconds": 179.50704871999818, "fast_rcnn/cls_accuracy": 0.9296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 79, "loss_box_reg": 0.24807123839855194, "loss_cls": 0.27089114487171173, "loss_rpn_cls": 0.060913536697626114, "loss_rpn_loc": 0.007144225295633078, "lr": 7.9171e-05, "roi_head/num_bg_samples": 119.0, "roi_head/num_fg_samples": 9.0, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.095190236999997, "total_loss": 0.6000422104261816}
++-{"data_time": 0.002303852000011375, "eta_seconds": 158.5481184749952, "fast_rcnn/cls_accuracy": 0.90234375, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 99, "loss_box_reg": 0.37137627601623535, "loss_cls": 0.27069205045700073, "loss_rpn_cls": 0.01833363715559244, "loss_rpn_loc": 0.007090216968208551, "lr": 9.9151e-05, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.056987456499968, "total_loss": 0.7003956531407312}
++-{"data_time": 0.002605340000002343, "eta_seconds": 137.40836934499583, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 119, "loss_box_reg": 0.3501961678266525, "loss_cls": 0.24755674600601196, "loss_rpn_cls": 0.03569256328046322, "loss_rpn_loc": 0.0065877537708729506, "lr": 0.00011913100000000001, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0775407019999932, "total_loss": 0.6915035428246483}
++-{"data_time": 0.0023761640000259376, "eta_seconds": 116.00193643499779, "fast_rcnn/cls_accuracy": 0.904296875, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 139, "loss_box_reg": 0.3321911245584488, "loss_cls": 0.27787481248378754, "loss_rpn_cls": 0.03818380646407604, "loss_rpn_loc": 0.006203859578818083, "lr": 0.000139111, "roi_head/num_bg_samples": 115.75, "roi_head/num_fg_samples": 12.25, "rpn/num_neg_anchors": 252.5, "rpn/num_pos_anchors": 3.5, "time": 1.0447581145000129, "total_loss": 0.7225660970434546}
++-{"data_time": 0.002289748000009695, "eta_seconds": 94.91067526499819, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 159, "loss_box_reg": 0.37014663219451904, "loss_cls": 0.2503085359930992, "loss_rpn_cls": 0.022741314955055714, "loss_rpn_loc": 0.008183888625353575, "lr": 0.000159091, "roi_head/num_bg_samples": 115.25, "roi_head/num_fg_samples": 12.75, "rpn/num_neg_anchors": 252.0, "rpn/num_pos_anchors": 4.0, "time": 1.0550466784999912, "total_loss": 0.6615875260904431}
++-{"data_time": 0.0024869095000212837, "eta_seconds": 73.98912195499776, "fast_rcnn/cls_accuracy": 0.90625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 179, "loss_box_reg": 0.3416535407304764, "loss_cls": 0.20821541547775269, "loss_rpn_cls": 0.012514203786849976, "loss_rpn_loc": 0.007641490548849106, "lr": 0.000179071, "roi_head/num_bg_samples": 116.0, "roi_head/num_fg_samples": 12.0, "rpn/num_neg_anchors": 250.5, "rpn/num_pos_anchors": 5.5, "time": 1.1015214909999713, "total_loss": 0.5950205000117421}
++-{"data_time": 0.002674328000011883, "eta_seconds": 52.728152924998994, "fast_rcnn/cls_accuracy": 0.923828125, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 199, "loss_box_reg": 0.27223585546016693, "loss_cls": 0.1997024491429329, "loss_rpn_cls": 0.0211806483566761, "loss_rpn_loc": 0.005561774130910635, "lr": 0.000199051, "roi_head/num_bg_samples": 118.25, "roi_head/num_fg_samples": 9.75, "rpn/num_neg_anchors": 252.25, "rpn/num_pos_anchors": 3.75, "time": 1.0192338319999976, "total_loss": 0.4901804425753653}
++-{"data_time": 0.0025132275000032678, "eta_seconds": 31.636891754999397, "fast_rcnn/cls_accuracy": 0.900390625, "fast_rcnn/false_negative": 1.0, "fast_rcnn/fg_cls_accuracy": 0.0, "iteration": 219, "loss_box_reg": 0.36517906188964844, "loss_cls": 0.23198173195123672, "loss_rpn_cls": 0.014427084941416979, "loss_rpn_loc": 0.006507641403004527, "lr": 0.000219031, "roi_head/num_bg_samples": 115.5, "roi_head/num_fg_samples": 12.5, "rpn/num_neg_anchors": 251.75, "rpn/num_pos_anchors": 4.25, "time": 1.0292666254999858, "total_loss": 0.6094998904736713}
++-{"data_time": 0.002412913000057415, "eta_seconds": 10.586967729999799, "fast_rcnn/cls_accuracy": 0.921875, "fast_rcnn/false_negative": 0.9622507122507122, "fast_rcnn/fg_cls_accuracy": 0.03774928774928775, "iteration": 239, "loss_box_reg": 0.2760148346424103, "loss_cls": 0.19814912229776382, "loss_rpn_cls": 0.014830647502094507, "loss_rpn_loc": 0.009588066954165697, "lr": 0.00023901100000000002, "roi_head/num_bg_samples": 117.5, "roi_head/num_fg_samples": 10.5, "rpn/num_neg_anchors": 251.25, "rpn/num_pos_anchors": 4.75, "time": 1.1579277230000002, "total_loss": 0.503135692095384}
++-{"data_time": 0.0026069874999734566, "eta_seconds": 0.0, "fast_rcnn/cls_accuracy": 0.931640625, "fast_rcnn/false_negative": 0.9864864864864865, "fast_rcnn/fg_cls_accuracy": 0.013513513513513514, "iteration": 249, "loss_box_reg": 0.25686195492744446, "loss_cls": 0.1974724605679512, "loss_rpn_cls": 0.024123243056237698, "loss_rpn_loc": 0.010637202765792608, "lr": 0.000249001, "roi_head/num_bg_samples": 118.5, "roi_head/num_fg_samples": 9.5, "rpn/num_neg_anchors": 249.25, "rpn/num_pos_anchors": 6.75, "time": 1.1218074584999158, "total_loss": 0.48856362886726856}
++diff --git a/V2/output/test_coco_format.json.lock b/V2/output/test_coco_format.json.lock
++deleted file mode 100644
++index e69de29..0000000
++diff --git a/V2/run.py b/V2/run.py
++index 6a21847..c2e72d7 100644
++--- a/V2/run.py
+++++ b/V2/run.py
++@@ -32,7 +32,7 @@ params = {
++ }
++ model = Model()
++ model.train()
++-pt = Param_Tunning(params)
++-pt.tune()
+++# pt = Param_Tunning(params)
+++# pt.tune()
++ # torch.save(model.train(),'./model.pt')
++ # torch.save(model.train(),'./model.pth')
++diff --git a/V2/wandb/latest-run b/V2/wandb/latest-run
++index bdd0614..904760c 120000
++--- a/V2/wandb/latest-run
+++++ b/V2/wandb/latest-run
++@@ -1 +1 @@
++-run-20211029_175737-18w958uw
++\ No newline at end of file
+++run-20211029_182019-19fkojne
++\ No newline at end of file
++diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++index 099fa7b..20d3ca0 100644
++--- a/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
+++++ b/V2/wandb/run-20211029_175737-18w958uw/files/config.yaml
++@@ -38,6 +38,10 @@ _wandb:
++       1:
++       - 1
++       - 5
+++      2:
+++      - 1
+++      - 3
+++      - 5
++       3:
++       - 13
++       - 16
++diff --git a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++index 9e26dfe..5c28c9c 100644
++--- a/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
+++++ b/V2/wandb/run-20211029_175737-18w958uw/files/wandb-summary.json
++@@ -1 +1 @@
++-{}
++\ No newline at end of file
+++{"_wandb": {"runtime": 1020}}
++\ No newline at end of file
++diff --git a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb
++index 47bdc52..20979e1 100644
++Binary files a/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb and b/V2/wandb/run-20211029_175737-18w958uw/run-18w958uw.wandb differ
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/requirements.txt b/V2/wandb/run-20211029_182019-19fkojne/files/requirements.txt
+new file mode 100644
+index 0000000..8b695ab
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/requirements.txt
+@@ -0,0 +1,289 @@
++absl-py==0.12.0
++aiohttp-cors==0.7.0
++aiohttp==3.7.4.post0
++aioredis==1.3.1
++altair==4.1.0
++aniso8601==9.0.1
++antlr4-python3-runtime==4.8
++anyio==3.3.0
++appdirs==1.4.4
++argcomplete==1.12.3
++argon2-cffi==20.1.0
++astor==0.8.1
++astunparse==1.6.3
++async-timeout==3.0.1
++attrs==21.2.0
++autopep8==1.6.0
++babel==2.9.1
++backcall==0.2.0
++backoff==1.11.1
++backports.functools-lru-cache==1.6.4
++backports.zoneinfo==0.2.1
++base58==2.1.0
++black==21.9b0
++bleach==4.1.0
++blessings==1.7
++blinker==1.4
++boto3==1.18.55
++botocore==1.21.55
++brotlipy==0.7.0
++cachetools==4.2.1
++certifi==2021.5.30
++cffi==1.14.6
++cfgv==3.3.0
++charset-normalizer==2.0.4
++clearml==1.0.4
++click==8.0.1
++cloudpickle==1.6.0
++configparser==5.0.2
++cryptography==3.4.8
++cycler==0.10.0
++cython==0.29.23
++debugpy==1.5.1
++decorator==5.1.0
++defusedxml==0.7.1
++deprecated==1.2.13
++detectron2==0.5+cu111
++dill==0.3.4
++distlib==0.3.2
++distro==1.6.0
++dlib==19.22.0
++dnspython==1.16.0
++docker-pycreds==0.4.0
++entrypoints==0.3
++et-xmlfile==1.1.0
++eventlet==0.32.0
++face-recognition-models==0.3.0
++face-recognition==1.3.0
++fiftyone-brain==0.7.1
++fiftyone-db==0.3.0
++fiftyone==0.13.3
++filelock==3.0.12
++flask-restful==0.3.9
++flask-simple-geoip==0.2.4
++flask==2.0.1
++flatbuffers==1.12
++fonttools==4.25.0
++furl==2.1.2
++future==0.18.2
++fvcore==0.1.5.post20211015
++gast==0.3.3
++gitdb==4.0.7
++gitpython==3.1.14
++glob2==0.7
++google-api-core==1.30.0
++google-auth-oauthlib==0.4.4
++google-auth==1.28.0
++google-pasta==0.2.0
++google-trans-new==1.1.9
++googleapis-common-protos==1.53.0
++gpustat==0.6.0
++greenlet==1.1.2
++grpcio==1.32.0
++gunicorn==20.1.0
++h11==0.12.0
++h5py==2.10.0
++hiredis==2.0.0
++httpcore==0.13.7
++httpx==0.19.0
++humanfriendly==9.2
++hydra-core==1.1.1
++identify==2.2.10
++idna==3.2
++imageio==2.9.0
++importlib-metadata==4.6.4
++importlib-resources==5.1.4
++install==1.3.4
++iopath==0.1.8
++ipaddress==1.0.23
++ipykernel==6.4.1
++ipython-genutils==0.2.0
++ipython==7.28.0
++ipywidgets==7.6.5
++itsdangerous==2.0.1
++jedi==0.18.0
++jinja2==3.0.1
++jmespath==0.10.0
++joblib==1.0.1
++json5==0.9.5
++jsonschema==4.1.0
++jupyter-client==7.0.6
++jupyter-console==6.4.0
++jupyter-core==4.8.1
++jupyter-server==1.8.0
++jupyter==1.0.0
++jupyterlab-server==2.6.0
++jupyterlab-widgets==1.0.2
++jupyterlab==3.0.16
++kaleido==0.2.1
++keras-preprocessing==1.1.2
++keras==2.4.3
++kiwisolver==1.3.1
++livereload==2.6.3
++lxml==4.6.3
++markdown==3.3.4
++markupsafe==2.0.1
++matplotlib-inline==0.1.3
++matplotlib==3.4.3
++mistune==0.8.4
++mkl-fft==1.3.1
++mkl-random==1.2.2
++mkl-service==2.4.0
++mongoengine==0.20.0
++motor==2.5.1
++msgpack==1.0.2
++multidict==5.1.0
++munkres==1.1.4
++mypy-extensions==0.4.3
++mysql-connector-python==8.0.26
++nbclassic==0.3.1
++nbconvert==5.6.1
++nbformat==5.1.3
++ndjson==0.3.1
++nest-asyncio==1.5.1
++networkx==2.6.3
++nltk==3.6.5
++nodeenv==1.6.0
++notebook==6.4.4
++numpy==1.21.1
++nvidia-ml-py3==7.352.0
++nvidia-ml-py==11.450.51
++nvitop==0.4.4.1
++oauthlib==3.1.1
++olefile==0.46
++omegaconf==2.1.1
++opencensus-context==0.1.2
++opencensus==0.7.13
++opencv-python-headless==4.5.3.56
++opencv-python==4.5.3.56
++openpyxl==3.0.9
++opt-einsum==3.3.0
++orderedmultidict==1.0.1
++packaging==21.0
++pandas==1.3.2
++pandocfilters==1.5.0
++parso==0.8.2
++pathlib2==2.3.5
++pathspec==0.9.0
++pathtools==0.1.2
++patool==1.12
++pexpect==4.8.0
++phonenumbers==8.12.29
++pickleshare==0.7.5
++pillow==8.3.2
++pip==21.3.1
++platformdirs==2.3.0
++plotly==5.2.1
++pluggy==0.13.1
++portalocker==2.3.0
++pprintpp==0.4.0
++pre-commit==2.13.0
++prometheus-client==0.11.0
++promise==2.3
++prompt-toolkit==3.0.20
++protobuf==3.9.0
++psutil==5.8.0
++ptyprocess==0.7.0
++py-spy==0.3.7
++py==1.10.0
++pyarrow==5.0.0
++pyasn1-modules==0.2.8
++pyasn1==0.4.8
++pycocotools==2.0.2
++pycodestyle==2.8.0
++pycparser==2.20
++pydantic==1.8.2
++pydeck==0.7.0
++pydot==1.4.2
++pygments==2.10.0
++pyopenssl==20.0.1
++pyparsing==2.4.7
++pyrsistent==0.17.3
++pysocks==1.7.1
++python-dateutil==2.8.2
++pytz==2021.1
++pywavelets==1.1.1
++pyyaml==5.1
++pyzmq==19.0.2
++qtconsole==5.1.1
++qtpy==1.11.2
++ray==1.4.1
++redis==3.5.3
++regex==2021.8.3
++requests-oauthlib==1.3.0
++requests==2.26.0
++retrying==1.3.3
++rfc3986==1.5.0
++rsa==4.7.2
++s3transfer==0.5.0
++scikit-image==0.18.3
++scikit-learn==0.24.1
++scipy==1.6.2
++seaborn==0.11.1
++send2trash==1.8.0
++sentry-sdk==1.0.0
++setuptools==58.0.4
++shortuuid==1.0.1
++simple-geoip==0.1.1
++sip==4.19.13
++six==1.16.0
++sklearn==0.0
++smmap==4.0.0
++sniffio==1.2.0
++sortedcontainers==2.4.0
++streamlit==0.88.0
++stripe==2.60.0
++subprocess32==3.5.4
++tabulate==0.8.9
++tenacity==8.0.1
++tensorboard-data-server==0.6.1
++tensorboard-plugin-wit==1.8.0
++tensorboard==2.7.0
++tensorboardx==2.4
++tensorflow-estimator==2.4.0
++tensorflow-hub==0.11.0
++tensorflow==2.4.1
++tensorrt==0.0.1
++termcolor==1.1.0
++terminado==0.12.1
++testpath==0.5.0
++threadpoolctl==2.1.0
++tifffile==2021.8.30
++toml==0.10.2
++tomli==1.2.1
++toolz==0.11.1
++torch-tb-profiler==0.2.0
++torch==1.9.1+cu111
++torchaudio==0.9.1
++torchmetrics==0.5.1
++torchvision==0.10.1+cu111
++tornado==6.1
++tox==3.23.1
++tqdm==4.62.0
++traitlets==5.1.0
++translate==3.5.0
++twilio==6.63.0
++typed-ast==1.4.3
++typing-extensions==3.10.0.0
++tzlocal==3.0
++universal-analytics-python3==1.1.1
++urllib3==1.26.6
++validators==0.18.2
++virtualenv==20.4.7
++voxel51-eta==0.5.3
++wandb==0.12.4
++watchdog==2.1.5
++wcwidth==0.2.5
++webencodings==0.5.1
++websocket-client==1.0.1
++werkzeug==2.0.1
++wheel==0.36.2
++widgetsnbextension==3.5.1
++wrapt==1.12.1
++xeus-python-shell==0.1.7
++xeus-python==0.13.5
++xmltodict==0.12.0
++yacs==0.1.8
++yarl==1.6.3
++yaspin==2.1.0
++zipp==3.5.0
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-metadata.json b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-metadata.json
+new file mode 100644
+index 0000000..543c2ad
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-metadata.json
+@@ -0,0 +1,24 @@
++{
++    "os": "Linux-5.11.0-38-generic-x86_64-with-glibc2.17",
++    "python": "3.8.12",
++    "heartbeatAt": "2021-10-29T12:50:21.812072",
++    "startedAt": "2021-10-29T12:50:19.016745",
++    "docker": null,
++    "gpu": "GeForce RTX 3060",
++    "gpu_count": 1,
++    "cpu_count": 6,
++    "cuda": null,
++    "args": [],
++    "state": "running",
++    "program": "run.py",
++    "codePath": "V2/run.py",
++    "git": {
++        "remote": "https://github.com/Programmer-RD-AI/Find-Card.git",
++        "commit": "56410c130efe6236befb27ac2a6811b91a9e4e81"
++    },
++    "email": "aigithub@gmail.com",
++    "root": "/media/indika/Sync/Programming/Projects/Python/Rest-Api/Car-Object-Detection-REST-API/Find-Card",
++    "host": "programmer-rd-ai",
++    "username": "indika",
++    "executable": "/media/indika/Sync/anaconda3/envs/detectron2/bin/python3"
++}
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
+new file mode 100644
+index 0000000..b3d6dff
+--- /dev/null
++++ b/V2/wandb/run-20211029_182019-19fkojne/files/wandb-summary.json
+@@ -0,0 +1 @@
++{"_wandb": {"runtime": 953}}
+\ No newline at end of file
+diff --git a/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb
+new file mode 100644
+index 0000000..9cd3a2f
+Binary files /dev/null and b/V2/wandb/run-20211029_182019-19fkojne/run-19fkojne.wandb differ
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/wandb-metadata.json b/V2/wandb/run-20211029_184311-k0amje1g/files/wandb-metadata.json
new file mode 100644
index 0000000..ecd9522
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/wandb-metadata.json
@@ -0,0 +1,24 @@
+{
+    "os": "Linux-5.11.0-38-generic-x86_64-with-glibc2.17",
+    "python": "3.8.12",
+    "heartbeatAt": "2021-10-29T13:13:14.634643",
+    "startedAt": "2021-10-29T13:13:11.439502",
+    "docker": null,
+    "gpu": "GeForce RTX 3060",
+    "gpu_count": 1,
+    "cpu_count": 6,
+    "cuda": null,
+    "args": [],
+    "state": "running",
+    "program": "run.py",
+    "codePath": "V2/run.py",
+    "git": {
+        "remote": "https://github.com/Programmer-RD-AI/Find-Card.git",
+        "commit": "920813bd9268883e136024b9ba95f00414b1942c"
+    },
+    "email": "aigithub@gmail.com",
+    "root": "/media/indika/Sync/Programming/Projects/Python/Rest-Api/Car-Object-Detection-REST-API/Find-Card",
+    "host": "programmer-rd-ai",
+    "username": "indika",
+    "executable": "/media/indika/Sync/anaconda3/envs/detectron2/bin/python3"
+}
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/files/wandb-summary.json b/V2/wandb/run-20211029_184311-k0amje1g/files/wandb-summary.json
new file mode 100644
index 0000000..e8418f2
--- /dev/null
+++ b/V2/wandb/run-20211029_184311-k0amje1g/files/wandb-summary.json
@@ -0,0 +1 @@
+{"_wandb": {"runtime": 966}}
\ No newline at end of file
diff --git a/V2/wandb/run-20211029_184311-k0amje1g/run-k0amje1g.wandb b/V2/wandb/run-20211029_184311-k0amje1g/run-k0amje1g.wandb
new file mode 100644
index 0000000..5d6964a
Binary files /dev/null and b/V2/wandb/run-20211029_184311-k0amje1g/run-k0amje1g.wandb differ
